<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Doc 常用命令记录</title>
    <url>/Blog/Doc/DOS%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[Doc 常用命令记录
<a id="more"></a>
<h1 id="DOC-命令-log"><a href="#DOC-命令-log" class="headerlink" title="DOC 命令 log"></a>DOC 命令 log</h1><h2 id="删除文件夹及文件夹下所有文件和文件夹"><a href="#删除文件夹及文件夹下所有文件和文件夹" class="headerlink" title="删除文件夹及文件夹下所有文件和文件夹"></a>删除文件夹及文件夹下所有文件和文件夹</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rd</span> /s /q folder</span><br></pre></td></tr></table></figure>
<h2 id="删除指定后缀的文件"><a href="#删除指定后缀的文件" class="headerlink" title="删除指定后缀的文件"></a>删除指定后缀的文件</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">del</span> /a /f /q file <span class="built_in">path</span>\*.xx</span><br></pre></td></tr></table></figure>
<h2 id="查看当前文件加下所有文件夹及文件列表"><a href="#查看当前文件加下所有文件夹及文件列表" class="headerlink" title="查看当前文件加下所有文件夹及文件列表"></a>查看当前文件加下所有文件夹及文件列表</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span></span><br></pre></td></tr></table></figure>
<h2 id="清空-DOS-界面"><a href="#清空-DOS-界面" class="headerlink" title="清空 DOS 界面"></a>清空 <code>DOS</code> 界面</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cls</span></span><br></pre></td></tr></table></figure>
<h2 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h2><ul>
<li><p>进入某个文件夹内</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd xxx/xxx/folder</span><br></pre></td></tr></table></figure>
</li>
<li><p>返回上级目录</p>
</li>
</ul>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../</span><br></pre></td></tr></table></figure>
<ul>
<li>有多少层级目录就写多少个<code>../</code>便返回相应的某一层</li>
</ul>
<h2 id="统计字符串出现次数"><a href="#统计字符串出现次数" class="headerlink" title="统计字符串出现次数"></a>统计字符串出现次数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat ./logs/error.iptv-meshing.log | grep &apos;parameter error&apos; | wc -l</span><br></pre></td></tr></table></figure>
<h2 id="统计端口TCP连接状态数量"><a href="#统计端口TCP连接状态数量" class="headerlink" title="统计端口TCP连接状态数量"></a>统计端口<code>TCP</code>连接状态数量</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -anp|grep 7090 | grep ESTABLISHED -c</span><br></pre></td></tr></table></figure>
<ul>
<li><code>TCP</code>连接状态</li>
</ul>
<h2 id="生成文件夹的目录结构"><a href="#生成文件夹的目录结构" class="headerlink" title="生成文件夹的目录结构"></a>生成文件夹的目录结构</h2><blockquote>
<p>查看命令 <code>tree /?</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\&gt;tree /?</span><br><span class="line">以图形显示驱动器或路径的文件夹结构。                                                                     </span><br><span class="line"></span><br><span class="line">TREE [drive:][path] [/F] [/A]</span><br><span class="line"></span><br><span class="line">   /F   显示每个文件夹中文件的名称。                                                                     </span><br><span class="line">   /A   使用 ASCII 字符，而不使用扩展字符。</span><br></pre></td></tr></table></figure>
<blockquote>
<p>生成当前目录中指定文件夹下的目录树,列出文件夹中文件的名称</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 生成文件命令</span><br><span class="line">D:\Code\sts-work-workspace\iptvMeshing&gt;tree ./src /f &gt;iptv_meshing.txt</span><br><span class="line"></span><br><span class="line"># 生成文件的内容</span><br><span class="line">卷 Development 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 8C4A-90AB</span><br><span class="line">D:\SRC</span><br><span class="line">├─main</span><br><span class="line">│  ├─java</span><br><span class="line">│  │  └─com</span><br><span class="line">│  │      └─sanss</span><br><span class="line">│  │          │  Application.java</span><br><span class="line">│  │          │  </span><br><span class="line">│  │          ├─config</span><br><span class="line">│  │          │      GeocodingProperties.java</span><br><span class="line">│  │          │      HikariDataSourceConfig.java</span><br><span class="line">│  │          │      RestTemplateConfig.java</span><br><span class="line">│  │          │      </span><br><span class="line">│  │          ├─controller</span><br><span class="line">│  │          │      AdUserController.java</span><br><span class="line">│  │          │      Decetion.java</span><br><span class="line">│  │          │      OrderController.java</span><br><span class="line">│  │          │      </span><br><span class="line">│  │          ├─entity</span><br><span class="line">│  │          │  │  AdUserGridDO.java</span><br><span class="line">│  │          │  │  OrderDO.java</span><br><span class="line">│  │          │  │  </span><br><span class="line">│  │          │  └─dto</span><br><span class="line">│  │          │          AdUserDTO.java</span><br><span class="line">│  │          │          GDPoint.java</span><br><span class="line">│  │          │          </span><br><span class="line">│  │          ├─repository</span><br><span class="line">│  │          │      AdUserRepository.java</span><br><span class="line">│  │          │      OrderRepository.java</span><br><span class="line">│  │          │      </span><br><span class="line">│  │          ├─service</span><br><span class="line">│  │          │  │  GeocodeService.java</span><br><span class="line">│  │          │  │  OrderService.java</span><br><span class="line">│  │          │  │  SynchronizeInformationService.java</span><br><span class="line">│  │          │  │  </span><br><span class="line">│  │          │  └─impl</span><br><span class="line">│  │          │          GeocodeServiceImpl.java</span><br><span class="line">│  │          │          OrderServiceImpl.java</span><br><span class="line">│  │          │          SynchronizeInformationServiceImpl.java</span><br><span class="line">│  │          │          </span><br><span class="line">│  │          └─util</span><br><span class="line">│  │              │  ArrayUtil.java</span><br><span class="line">│  │              │  HttpServletRequestReader.java</span><br><span class="line">│  │              │  </span><br><span class="line">│  │              └─geocode</span><br><span class="line">│  │                      GeoCodingUtil.java</span><br><span class="line">│  │                      </span><br><span class="line">│  ├─resources</span><br><span class="line">│  │      application.yml</span><br><span class="line">│  │      geocode.properties</span><br><span class="line">│  │      logback-spring.xml</span><br><span class="line">│  │      </span><br><span class="line">│  └─webapp</span><br><span class="line">└─test</span><br><span class="line">    └─java</span><br><span class="line">        └─com</span><br><span class="line">            └─sanss</span><br><span class="line">                │  ApplicationTest.java</span><br><span class="line">                │  </span><br><span class="line">                ├─config</span><br><span class="line">                │      HikariDataSourceConfigTest.java</span><br><span class="line">                │      </span><br><span class="line">                └─util</span><br><span class="line">                        GeoCodingUtilTest.java</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Doc</category>
      </categories>
      <tags>
        <tag>Doc</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse | STS(Spring Tool Suite)开发工具配置</title>
    <url>/blog/Eclipse%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%85%A8/</url>
    <content><![CDATA[Eclipse | STS(Spring Tool Suite)开发工具配置
<a id="more"></a>
<h1 id="开发环境中Eclipse、STS-Spring-Tool-Suite-通用配置"><a href="#开发环境中Eclipse、STS-Spring-Tool-Suite-通用配置" class="headerlink" title="开发环境中Eclipse、STS(Spring Tool Suite)通用配置"></a>开发环境中<code>Eclipse</code>、<code>STS(Spring Tool Suite)</code>通用配置</h1><blockquote>
<p><code>Java</code>实体类，重写<code>toString()</code>.生成<code>JSON</code>字符串配置    </p>
</blockquote>
<ol>
<li><p><code>Eclipse</code> 快捷键 <code>Alt + S</code>  选择 <code>Generate toString</code>，重写<code>toString()</code>方法    </p>
<p> <img src="/images/step1.png" alt="步骤一"></p>
</li>
<li><p>添加自定义的<code>format</code>格式，选择<code>Edit</code></p>
<p> <img src="/images/step2.png" alt="步骤二"></p>
<ul>
<li><p>格式化文本内容</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">"$&#123;member.name()&#125;"</span>:<span class="string">"$&#123;member.value&#125;"</span>, <span class="string">"$&#123;otherMembers&#125;"</span>&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>新的<code>template</code>，输入<code>Name</code>和<code>Pattern</code></p>
<p> <img src="/images/step3.png" alt="步骤三"></p>
</li>
<li><p>点击<code>OK</code>，完成创建。</p>
<p> <img src="/images/step4.png" alt="步骤四"></p>
</li>
<li><p>回到第一个页面，默认选中刚刚创建的<code>JSONString</code>，点击<code>Generate</code>完成创建</p>
<p> <img src="/images/step5.png" alt="步骤五"></p>
</li>
<li><p>创建完成后效果</p>
<p> <img src="/images/step6.png" alt="结果"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>Echarts使用总结</title>
    <url>/blog/Web-Plugins/ECharts%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[Echarts使用总结
<a id="more"></a>
<h1 id="Echarts使用笔记"><a href="#Echarts使用笔记" class="headerlink" title="Echarts使用笔记"></a><code>Echarts</code>使用笔记</h1><h2 id="设置默认选中显示数据"><a href="#设置默认选中显示数据" class="headerlink" title="设置默认选中显示数据"></a>设置默认选中显示数据</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">option =&#123;</span><br><span class="line">	legend:&#123;</span><br><span class="line">		selected : &#123;</span><br><span class="line">			<span class="string">'XX'</span>:<span class="literal">false</span>	<span class="comment">//不想显示的设为false</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置Y轴数值-1000显示为1K"><a href="#设置Y轴数值-1000显示为1K" class="headerlink" title="设置Y轴数值 1000显示为1K"></a>设置<code>Y</code>轴数值 <code>1000</code>显示为<code>1K</code></h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yAxis : &#123;</span><br><span class="line">	type : <span class="string">'value'</span>,</span><br><span class="line">	axisLabel : &#123;</span><br><span class="line">		color : <span class="string">'#fff'</span>,</span><br><span class="line">		formatter : <span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>) </span>&#123;</span><br><span class="line">			<span class="keyword">var</span> thousand;</span><br><span class="line">			<span class="keyword">if</span> (value &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">				thousand = value / <span class="number">1000</span> + <span class="string">'k'</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				thousand = value</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> thousand;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置超长字符串为"><a href="#设置超长字符串为" class="headerlink" title="设置超长字符串为..."></a>设置超长字符串为<code>...</code></h2><h2 id="设置echarts-柱状图颜色"><a href="#设置echarts-柱状图颜色" class="headerlink" title="设置echarts 柱状图颜色"></a>设置<code>echarts 柱状图颜色</code></h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">option:&#123;</span><br><span class="line">	color: [<span class="string">'#003366'</span>, <span class="string">'#006699'</span>, <span class="string">'#4cabce'</span>, <span class="string">'#ccc'</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="图标点击事件监听"><a href="#图标点击事件监听" class="headerlink" title="图标点击事件监听"></a>图标点击事件监听</h2><blockquote>
<p> <a href="https://www.echartsjs.com/zh/api.html#events" target="_blank">文档地址</a></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 使用文档相同的监听不知道为什么无效,需要改为如下写法 */</span></span><br><span class="line"><span class="comment">// 始呼接通率监听事件</span></span><br><span class="line">myCharts.getZr().on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.info(<span class="string">'监听点击事件'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="坐标轴赋值"><a href="#坐标轴赋值" class="headerlink" title="坐标轴赋值"></a>坐标轴赋值</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myCharts</span>(<span class="params">params</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> url=<span class="string">""</span>;</span><br><span class="line">  $.getJSON(url, params,l</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">        op.setOption(&#123;</span><br><span class="line">          xAxis: &#123;</span><br><span class="line">            data: result.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> item.time;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;,</span><br><span class="line">          series: [&#123;</span><br><span class="line">            data: result.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> item.eci_rate;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            data: result.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> item.ne_rate;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用自定义的echarts theme</span></span><br><span class="line"><span class="keyword">var</span> failed_pie_charts = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">"failed_pie"</span>),<span class="string">'macarons'</span>);</span><br><span class="line"></span><br><span class="line">$.getJSON(url, params, <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> failed_reason = [];</span><br><span class="line"></span><br><span class="line">    $.each(result, <span class="function"><span class="keyword">function</span> (<span class="params">index, items</span>) </span>&#123;</span><br><span class="line">      failed_reason.push(&#123;</span><br><span class="line">        name: items.QUERY_TYPE,</span><br><span class="line">        value: items.RATE</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    failed_pie_charts.setOption(&#123;</span><br><span class="line">      legend: &#123;</span><br><span class="line">        data: result.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> item.QUERY_TYPE</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      series: &#123;</span><br><span class="line">        data: failed_reason</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Echarts-图标横坐标显示不全"><a href="#Echarts-图标横坐标显示不全" class="headerlink" title="Echarts 图标横坐标显示不全"></a>Echarts 图标横坐标显示不全</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xAxis: &#123;</span><br><span class="line">    type: <span class="string">'category'</span>,</span><br><span class="line">    boundaryGap: <span class="literal">true</span>,</span><br><span class="line">    axisTick: &#123;</span><br><span class="line">      alignWithLabel: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    axisLabel: &#123;</span><br><span class="line">      interval: <span class="number">0</span>, <span class="comment">// 显示不全的主要配置,加上该配置即可</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置图形以平滑曲线显示"><a href="#设置图形以平滑曲线显示" class="headerlink" title="设置图形以平滑曲线显示"></a>设置图形以平滑曲线显示</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">series-line.smooth:<span class="literal">true</span>  <span class="comment">// 是否以平滑曲线显示</span></span><br><span class="line"></span><br><span class="line">series-line.symbol: <span class="string">'none'</span> <span class="comment">// 标记的图形</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>blog</category>
        <category>Web Plugins</category>
      </categories>
      <tags>
        <tag>Echarts</tag>
      </tags>
  </entry>
  <entry>
    <title>Java使用EasyExcel上传文件</title>
    <url>/Blog/Java/EasyExcel%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[Java使用EasyExcel上传文件
<a id="more"></a>
<h1 id="Java使用EasyExcel-上传文件"><a href="#Java使用EasyExcel-上传文件" class="headerlink" title="Java使用EasyExcel 上传文件"></a><code>Java</code>使用<code>EasyExcel</code> 上传文件</h1><blockquote>
<p>添加依赖    </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;easyexcel&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.2-beta5&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>部分代码    </p>
</blockquote>
<p>导入信息实体类(上传文件对应实体类)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: Advertising</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 广告信息批量导入Model</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/01/29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdvertisingImportModel</span> <span class="keyword">extends</span> <span class="title">BaseRowModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@ExcelProperty</span>(index = <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">private</span> String ad;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@ExcelProperty</span>(index = <span class="number">1</span>)</span><br><span class="line">	<span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> ad;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAd</span><span class="params">(String ad)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.ad = ad.trim();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.address = address.trim();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"&#123;\"ad\":\""</span> + ad + <span class="string">"\",\"address\":\""</span> + address + <span class="string">"\"&#125;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>导出文件上传实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdvertisingExportModel</span> <span class="keyword">extends</span> <span class="title">BaseRowModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@ExcelProperty</span>(value = <span class="string">"用户AD"</span>, index = <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@ExcelProperty</span>(value = <span class="string">"用户地址"</span>, index = <span class="number">1</span>)</span><br><span class="line">	<span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AdvertisingExportModel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AdvertisingExportModel</span><span class="params">(String name, String address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"&#123;\"name\":\""</span> + name + <span class="string">"\",\"address\":\""</span> + address + <span class="string">"\"&#125;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要自己创建 <code>ExcelListener</code> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelListener</span> <span class="keyword">extends</span> <span class="title">AnalysisEventListener</span>&lt;<span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> List&lt;Object&gt; data = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invoke</span><span class="params">(Object object, AnalysisContext context)</span> </span>&#123;</span><br><span class="line">		data.add(object);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterAllAnalysed</span><span class="params">(AnalysisContext context)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(List&lt;Object&gt; data)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.data = data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>API</code>实现方法,简单起见将代码都写在了controller(可以将具体的实现写在service层中)    </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: synchronizationInformation</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 上传文件并返回自己生成的数据文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file	需要同步的用户文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response	下载的文件</span></span><br><span class="line"><span class="comment"> * void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"easyexcel"</span>, consumes = <span class="string">"multipart/*"</span>, headers = <span class="string">"content-type=multipart/form-data"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">synchronizationInformation</span><span class="params">(@RequestParam(name = <span class="string">"file"</span>, required = <span class="keyword">false</span>)</span> MultipartFile file,</span></span><br><span class="line"><span class="function">		HttpServletResponse response) </span>&#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		List&lt;AdvertisingImportModel&gt; result;</span><br><span class="line">		<span class="comment">// 1. 将excel 转换为 List&lt;Object&gt; list</span></span><br><span class="line">		InputStream inputStream = <span class="keyword">new</span> BufferedInputStream(file.getInputStream());</span><br><span class="line">		<span class="comment">// 文件名</span></span><br><span class="line">		String fileName = file.getOriginalFilename();</span><br><span class="line">		<span class="comment">// 文件后缀</span></span><br><span class="line">		String prefix = fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">		ExcelListener excelListener = <span class="keyword">new</span> ExcelListener();</span><br><span class="line">		EasyExcelFactory.readBySax(inputStream, <span class="keyword">new</span> Sheet(<span class="number">1</span>, <span class="number">1</span>, AdvertisingImportModel.class), excelListener);</span><br><span class="line">		<span class="comment">// 文件内容</span></span><br><span class="line">		List&lt;Object&gt; data = excelListener.getData();</span><br><span class="line">		result = JSONObject.parseArray(JSON.toJSONString(data), AdvertisingImportModel.class);</span><br><span class="line">		logger.info(<span class="string">"上传文件包含内容:\t"</span> + result.toString());</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 原本是要调用http接口,作为list的返回值(现暂时模拟返回值为这些)</span></span><br><span class="line">		<span class="comment">// 2.导出栅格数据文件内容</span></span><br><span class="line">		List&lt;AdvertisingExportModel&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		list = JSONObject.parseArray(</span><br><span class="line">				<span class="string">"[&#123;\"name\":\"亚索\",\"address\":\"艾欧尼亚\"&#125;,&#123;\"name\":\"诺克\",\"address\":\"诺克萨斯\"&#125;,&#123;\"name\":\"瑞文\",\"address\":\"艾欧尼亚\"&#125;]"</span>,</span><br><span class="line">				AdvertisingExportModel.class);</span><br><span class="line"></span><br><span class="line">		ExcelTypeEnum excelTypeEnum = prefix == <span class="string">".xls"</span> ? ExcelTypeEnum.XLS : ExcelTypeEnum.XLSX;</span><br><span class="line"></span><br><span class="line">		ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line">		ExcelWriter writer = <span class="keyword">new</span> ExcelWriter(outputStream, excelTypeEnum, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">		Sheet sheet = <span class="keyword">new</span> Sheet(<span class="number">1</span>, <span class="number">0</span>, AdvertisingExportModel.class);</span><br><span class="line">		sheet.setAutoWidth(<span class="keyword">true</span>);</span><br><span class="line">		sheet.setSheetName(<span class="string">"第一个sheet"</span>);</span><br><span class="line"></span><br><span class="line">		fileName = <span class="keyword">new</span> String(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>).format(<span class="keyword">new</span> Date()).getBytes(), <span class="string">"utf-8"</span>);</span><br><span class="line">		<span class="comment">// System.out.println(fileName + prefix);</span></span><br><span class="line">		response.setContentType(<span class="string">"application/octet-stream"</span>);</span><br><span class="line">		response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">		response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename="</span> + fileName + <span class="string">"."</span> + prefix);</span><br><span class="line"></span><br><span class="line">		writer.write(list, sheet);</span><br><span class="line">		writer.finish();</span><br><span class="line"></span><br><span class="line">		outputStream.flush();</span><br><span class="line">		inputStream.close();</span><br><span class="line">		outputStream.close();</span><br><span class="line">	&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注：</strong></p>
<ol>
<li><code>InputStream</code> 使用<code>file.getInputStream()</code>时,会报异常。</li>
<li>使用<code>easyexcel</code>工具类时,需要将项目中原有的<code>poi、poi-ooxml、poi-ooxml-schemas</code> 版本需与<code>easyexcel</code>版本一致。</li>
</ol>
<hr>
<blockquote>
<p>使用EasyExcel时,遇到的问题     </p>
</blockquote>
<blockquote>
<blockquote>
<ol>
<li><code>org.apache.catalina.core.StandardWrapperValve</code></li>
</ol>
</blockquote>
</blockquote>
<ul>
<li>控制台输出 </li>
</ul>
<p><img src="/images/easy-excel-poi.png" alt="StandardWrapperValve"></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">二月 <span class="number">21</span>, <span class="number">2019</span> <span class="number">1</span>:<span class="number">59</span>:<span class="number">51</span> 下午 org.apache.catalina.core.StandardWrapperValve invoke</span><br><span class="line">严重: Servlet.service() <span class="keyword">for</span> servlet [springmvc] in context with path [/iptvView] threw exception [Request processing failed; nested exception is com.alibaba.excel.exception.ExcelAnalysisException: File type error，io must be available markSupported,you can <span class="keyword">do</span> like <span class="keyword">this</span> &lt;code&gt; <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(\<span class="string">"/xxxx\"))&lt;/code&gt; "</span>] with root cause</span><br><span class="line">com.alibaba.excel.exception.ExcelAnalysisException: Xls must be available markSupported,you can do like this &lt;code&gt; new BufferedInputStream(new FileInputStream("/xxxx"))&lt;/code&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>问题原因</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">InputStream inputStream = file.getInputStream();<span class="comment">//获取的时文件inputStream,获取xls时失败.抛出异常</span></span><br><span class="line"></span><br><span class="line">InputStream inputStream = <span class="keyword">new</span> BufferedInputStream(file.getInputStream());<span class="comment">//正确的获取方式</span></span><br></pre></td></tr></table></figure>
<ul>
<li>解决方式 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">改为第二种获取InputStream 的方式</span><br></pre></td></tr></table></figure>
<blockquote>
<blockquote>
<ol start="2">
<li><code>java.lang.ClassNotFoundException: org.apache.poi.poifs.filesystem.FileMagic</code>    </li>
</ol>
</blockquote>
</blockquote>
<ul>
<li><p>问题原因</p>
<p>  项目中引用了<code>poi、poi-oomxl、poi-oomxl-schemas jar</code>包，并且版本与 <code>easyexcel</code> 版本不一致</p>
</li>
<li><p>解决方案    </p>
<p>  更新/降低 项目中引入的<code>poi</code>版本,使    版本保持一致</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>EasyExcel</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka服务提供者</title>
    <url>/SpringCloud/Eureka%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/</url>
    <content><![CDATA[<p>搭建Eureka服务提供者,将服务注册到服务中心<br><a id="more"></a></p>
<h1 id="基于-Eureka-搭建服务提供者"><a href="#基于-Eureka-搭建服务提供者" class="headerlink" title="基于 Eureka 搭建服务提供者"></a>基于 Eureka 搭建服务提供者</h1><p>本项目是一个基于 <code>SpringBoot 1.5.12.RELEASE</code>、<code>SpringCloud Dalston.SR5</code>、<code>H2</code>、<code>Eureka</code> 的服务提供者.</p>
<blockquote>
<p>添加<code>pom</code>依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置 SpringBoot 监控功能 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>@EnableDiscoveryClient</code>启动类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaProviderApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(EurekaProviderApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>初始化数据</p>
</blockquote>
<ul>
<li>使用<code>H2</code>内存数据库初始化测试数据</li>
</ul>
<p><strong>注:</strong></p>
<ol>
<li><code>SpringBoot 2.x</code>不能像 1.x 一样,使用 <code>spring.datasource.schema/data</code> 指定初始化脚本.否则与 <code>actuator</code> 不能共存</li>
<li>项目中的依赖并不是与[参考的博客一样,自行选择]</li>
<li>项目参考来源<code>http://book.itmuch.com/2 Spring Cloud/2.2 服务提供者.html</code></li>
</ol>
<ul>
<li>建表语句(schema.sql)</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> tbl_book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbl_book(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">number</span>(<span class="number">12</span>) primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">price <span class="built_in">decimal</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">number</span>(<span class="number">12</span>) primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">age <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- DELETE FROM tbl_book;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>插入初始化数据(data.sql)</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_book (<span class="keyword">id</span>, <span class="keyword">name</span>, price) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'Spring Boot - Spring Data JPA with Hibernate and H2 Web Console'</span>, <span class="number">0.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_book (<span class="keyword">id</span>, <span class="keyword">name</span>, price) <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'Spring Boot - Spring Data JPA with Hibernate and H2 Web Console 2'</span>, <span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_book (<span class="keyword">id</span>, <span class="keyword">name</span>, price) <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'Spring Boot - Spring Data JPA with Hibernate and H2 Web Console 3'</span>, <span class="number">2.0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_book (<span class="keyword">id</span>, <span class="keyword">name</span>, price) <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">'Spring Boot - Spring Data JPA with Hibernate and H2 Web Console 4'</span>, <span class="number">3.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, <span class="keyword">name</span>, age) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'JSON'</span>,<span class="number">29</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, <span class="keyword">name</span>, age) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">'Alibaba'</span>,<span class="number">25</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, <span class="keyword">name</span>, age) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'Apache'</span>,<span class="number">30</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, <span class="keyword">name</span>, age) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'GitHub'</span>,<span class="number">20</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, <span class="keyword">name</span>, age) <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'Sun'</span>,<span class="number">18</span>);</span><br></pre></td></tr></table></figure>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">2001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">microsevice-provider-user</span></span><br><span class="line"><span class="attr">  datasource:</span>                           <span class="comment"># 指定数据源;默认H2建表脚本(根目录/schema.sql);默认H2的insert脚本(classpath:data.sql)</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:h2:mem:~/example-app;</span>     <span class="comment"># 指定数据库,默认</span></span><br><span class="line"><span class="attr">    platform:</span> <span class="string">h2</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">sa</span></span><br><span class="line"><span class="attr">    password:</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">org.h2.Driver</span></span><br><span class="line"><span class="attr">  h2:</span></span><br><span class="line"><span class="attr">    console:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">false</span> <span class="comment"># 是否启用H2数据库控制台</span></span><br><span class="line"><span class="attr">      settings:</span></span><br><span class="line"><span class="attr">        web-allow-others:</span> <span class="literal">false</span>         <span class="comment"># 允许远程浏览器访问H2 数据库控制台</span></span><br><span class="line"><span class="attr">        trace:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  jpa:</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    hibernate:</span></span><br><span class="line"><span class="attr">      ddl-auto:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">    generate-ddl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    database-platform:</span> <span class="string">org.hibernate.dialect.H2Dialect</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    root:</span> <span class="string">INFO</span></span><br><span class="line">    <span class="string">org.hibernate:</span> <span class="string">INFO</span></span><br><span class="line">    <span class="string">org.hibernate.type.descriptor.sql.BasicBinder:</span> <span class="string">TRACE</span></span><br><span class="line">    <span class="string">org.hibernate.type.descriptor.sql.BasicExtractor:</span> <span class="string">TRACE</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:1001/eureka/</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    instance-id:</span> <span class="string">$&#123;spring.cloud.client.ipAddress&#125;:$&#123;spring.application.name&#125;:$&#123;server.port&#125;</span> <span class="comment"># 自定义微服务的 `instance-id`,当前配置的默认值$&#123;spring.cloud.client.ipAddress&#125;:$&#123;spring.application.name&#125;:$&#123;server.port&#125;</span></span><br><span class="line"><span class="comment">#    prefer-ip-address: true</span></span><br><span class="line"><span class="comment">#    lease-expiration-duration-in-seconds: 30</span></span><br><span class="line"><span class="comment">#    lease-renewal-interval-in-seconds: 10</span></span><br></pre></td></tr></table></figure>
<h2 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a>Entity</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"tbl_book"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Column</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Column</span></span><br><span class="line">	<span class="keyword">private</span> Double price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Book</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> BookRepository bookRepository;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Book <span class="title">findById</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.bookRepository.findOne(id);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Eureka-常见问题配置参考链接"><a href="#Eureka-常见问题配置参考链接" class="headerlink" title="Eureka 常见问题配置参考链接"></a><code>Eureka</code> 常见问题配置参考链接</h2><p><a href="http://www.itmuch.com/spring-cloud-sum-eureka/" target="_blank">Spring Cloud中，Eureka常见问题总结(周立)</a></p>
<h2 id="实现监控-SpringBoot-Actuator"><a href="#实现监控-SpringBoot-Actuator" class="headerlink" title="实现监控(SpringBoot Actuator)"></a>实现监控(SpringBoot Actuator)</h2><ul>
<li>添加<code>Actutor</code> 监控(SpringBoot 1.x 版本)</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>参考示例: </li>
</ul>
<p><a href="http://www.itmuch.com/spring-cloud/finchley-3/" target="_blank">周立 —— SpringBoot 集成Actutor</a></p>
<p><strong>注：</strong> </p>
<ol>
<li><p><code>SpringBoot 1.x</code>版本访问<code>http://10.18.13.2:2001/health</code>,<code>SpringBoot 2.x</code>访问<code>http://10.18.13.2:2001/actutor/health</code></p>
</li>
<li><p>通过 <code>spring.appliccation.name:server.port</code> 访问 API 时,需要在 <code>C:\Windows\System32\drivers\etc\hosts</code> 文件夹中添加</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1 microsevice-provider-user</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
        <tag>Eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka-Server</title>
    <url>/SpringCloud/Eureka-Server/</url>
    <content><![CDATA[Eureka-Server
<a id="more"></a>
<h1 id="基于-Eureka-搭建高可用-双节点服务注册中心"><a href="#基于-Eureka-搭建高可用-双节点服务注册中心" class="headerlink" title="基于 Eureka 搭建高可用(双节点服务注册中心)"></a>基于 Eureka 搭建高可用(双节点服务注册中心)</h1><p>本项目是一个基于 SpringBoot(1.5.19.RELEASE)、SpringCloud(Dalston.SR5)、Eureka 的服务注册中心</p>
<ul>
<li>配置文件说明 </li>
</ul>
<blockquote>
<p><code>application.yml</code>: </p>
</blockquote>
<p>  单个 <code>Eureka</code> 服务注册中心</p>
<blockquote>
<p><code>application-colony.yml</code>: </p>
</blockquote>
<p>  双节点注册中心示例,实现双向注册从而提高可用性</p>
<ol>
<li>默认使用 <code>application.yml</code> 配置文件;</li>
<li>使用<code>application-conlony.yml</code> 配置文件时,需要指定激活的配置项.(例如启动<code>server-1</code>,需运行<code>java -jar xx.jar --spring.profiles.active=server-1</code>)</li>
</ol>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka服务注册中心</title>
    <url>/SpringCloud/Eureka%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/</url>
    <content><![CDATA[<p>搭建Eureka(Edgware.SR5版本)服务注册中心<br><a id="more"></a></p>
<h1 id="基于-Eureka-搭建高可用-双节点服务注册中心"><a href="#基于-Eureka-搭建高可用-双节点服务注册中心" class="headerlink" title="基于 Eureka 搭建高可用(双节点服务注册中心)"></a>基于 Eureka 搭建高可用(双节点服务注册中心)</h1><blockquote>
<p>添加<code>pom</code>依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.19.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>版本说明 </p>
</blockquote>
<ul>
<li>本项目是一个基于 SpringBoot(1.5.19.RELEASE)、SpringCloud(Edgware.SR5)、Eureka 的服务注册中心</li>
</ul>
<h2 id="启动类-EnableEurekaServer"><a href="#启动类-EnableEurekaServer" class="headerlink" title="启动类 @EnableEurekaServer"></a>启动类 @EnableEurekaServer</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(EurekaServerApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><blockquote>
<p><code>application.yml</code> </p>
</blockquote>
<ul>
<li>单个 <code>Eureka</code> 服务注册中心</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">eureka-server</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    enable-self-preservation:</span> <span class="literal">false</span> <span class="comment"># 设为 false,关闭自我保护</span></span><br><span class="line"><span class="attr">    eviction-interval-timer-in-ms:</span> <span class="number">4000</span>  <span class="comment">#清理间隔(单位毫秒,默认是 60*1000)</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    fetch-registry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>application-colony.yml</code>  </p>
</blockquote>
<ul>
<li>双节点注册中心</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">server-1</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">server-1</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    fetch-registry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="comment">#      defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://server-2:1002/eureka-server</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">1002</span></span><br><span class="line"><span class="attr">  spring:</span></span><br><span class="line"><span class="attr">    profiles:</span> <span class="string">server-2</span></span><br><span class="line"><span class="attr">  eureka:</span></span><br><span class="line"><span class="attr">    instance:</span></span><br><span class="line"><span class="attr">      hostname:</span> <span class="string">server-2</span></span><br><span class="line"><span class="attr">    client:</span></span><br><span class="line"><span class="attr">      register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      fetch-registry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      service-url:</span></span><br><span class="line">        <span class="comment">#      defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="attr">        defaultZone:</span> <span class="attr">http://server-1:1001/eureka-server</span></span><br></pre></td></tr></table></figure>
<p>双节点注册中心示例,实现双向注册从而提高可用性详细可以看<a href="http://www.ityouknow.com/springcloud/2017/05/10/springcloud-eureka.html" target="_blank" rel="noopener">注册中心Eureka</a></p>
<ol>
<li><p>默认使用 <code>application.yml</code> 配置文件;</p>
</li>
<li><p>使用<code>application-conlony.yml</code> 配置文件时,需要指定激活的配置项.(例如启动<code>server-1</code>,需运行<code>java -jar xx.jar --spring.profiles.active=server-1</code>)</p>
</li>
</ol>
<h2 id="配套代码"><a href="#配套代码" class="headerlink" title="配套代码"></a>配套代码</h2><p>GitHub : <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-server" target="_blank">服务注册中心Eureka-Server</a></p>
<blockquote>
<p>推荐阅读</p>
</blockquote>
<ul>
<li>翟永超: <a href="http://blog.didispace.com/springcloud1/" target="_blank">Eureka服务注册与发现</a></li>
<li>周立: <a href="http://www.itmuch.com/spring-cloud/finchley-5/" target="_blank">SpringCloud服务注册与发现Eureka</a></li>
</ul>
<blockquote>
<p>相关文章</p>
</blockquote>
<p><a href="http://www.itmuch.com/spring-cloud/finchley-6/" target="_blank" rel="noopener">周立——Eureka服务注册与发现深入</a></p>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
        <tag>Eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka服务消费者Ribbon</title>
    <url>/SpringCloud/Eureka%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Ribbon/</url>
    <content><![CDATA[<p>Eureka使用Ribbon消费RESTful API<br><a id="more"></a></p>
<h1 id="基于Eureka搭建Ribbon服务消费者"><a href="#基于Eureka搭建Ribbon服务消费者" class="headerlink" title="基于Eureka搭建Ribbon服务消费者"></a>基于Eureka搭建Ribbon服务消费者</h1><blockquote>
<p>添加<code>pom</code></p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-netflix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>..<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">main.basedir</span>&gt;</span>$&#123;basedir&#125;/../..<span class="tag">&lt;/<span class="name">main.basedir</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改启动类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaRibbonApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="meta">@LoadBalanced</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="comment">// Ribbon + RestTemplate 的重试</span></span><br><span class="line">		SimpleClientHttpRequestFactory simpleClientHttpRequestFactory =<span class="keyword">new</span> SimpleClientHttpRequestFactory();</span><br><span class="line">		simpleClientHttpRequestFactory.setConnectTimeout(<span class="number">1000</span>);</span><br><span class="line">		simpleClientHttpRequestFactory.setReadTimeout(<span class="number">1000</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> RestTemplate(simpleClientHttpRequestFactory);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(EurekaRibbonApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>application.yml</code>配置文件</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">3001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">microservice-consumer-ribbon</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    loadbalancer:</span></span><br><span class="line"><span class="attr">      retry:</span></span><br><span class="line"><span class="attr">        enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:1001/eureka/</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    instance-id:</span> <span class="string">$&#123;spring.cloud.client.ipAddress&#125;:$&#123;spring.application.name&#125;:$&#123;server.port&#125;</span></span><br><span class="line"><span class="comment">#    prefer-ip-address: true</span></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line"><span class="attr">  MaxAutoRetries:</span> <span class="number">1</span>                 <span class="comment"># 同一实例最大重试次数,不包括首次调用</span></span><br><span class="line"><span class="attr">  MaxAutoRetriesNextServer:</span> <span class="number">2</span>       <span class="comment"># 重试其他实例的最大重试次数,不包括首次所选的server</span></span><br><span class="line"><span class="attr">  OkToRetryOnAllOperations:</span> <span class="literal">false</span>   <span class="comment"># 是否所有操作都进行重试</span></span><br></pre></td></tr></table></figure>
<ul>
<li>需要向注册到Eureka服务中心</li>
</ul>
<h2 id="相关代码块"><a href="#相关代码块" class="headerlink" title="相关代码块"></a>相关代码块</h2><blockquote>
<p>Entity</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Double price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Service</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RibbonService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">queryUserInfoBy</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.restTemplate.getForObject(<span class="string">"http://microsevice-provider-user/users/"</span>+id, User.class);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Book <span class="title">queryBookInfoById</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.restTemplate.getForObject(<span class="string">"http://microsevice-provider-user/"</span>+id, Book.class);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Controller</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"ribbon"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RibbonController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RibbonService ribbonService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">queryUserInfoById</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.ribbonService.queryUserInfoBy(id);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/book/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Book <span class="title">queryBookInfoById</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.ribbonService.queryBookInfoById(id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注：</strong></p>
<ol>
<li><p>使用<code>RestTemplate</code> 调用 <code>API</code> 时,<code>url</code>为服务提供者的 <code>spring.application.name</code> 而不是 <code>ip:port</code>;</p>
</li>
<li><p>调用的 <code>url</code> 需要确保无误,否则会调用失败.</p>
</li>
</ol>
<ul>
<li>实现了<code>Ribbon + RestTemplate</code> 重试</li>
</ul>
<p>参考 <a href="http://www.itmuch.com/spring-cloud-sum/spring-cloud-retry/" target="_blank">周立-SpringCloud 各组件重试总结</a></p>
<h1 id="配套代码"><a href="#配套代码" class="headerlink" title="配套代码"></a>配套代码</h1><ul>
<li>GitHub: <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-ribbon" target="_blank" rel="noopener">https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-ribbon</a></li>
</ul>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul>
<li><a href="https://blog.battcn.com/2017/07/26/springcloud/dalston/spring-cloud-ribbon/" target="_blank">唐亚峰 —— 服务消费者(Ribbon)</a></li>
<li><a href="http://blog.didispace.com/spring-cloud-starter-dalston-2-2/" target="_blank">程序猿DD —— 服务消费者(Ribbon)[Dalston版]</a></li>
</ul>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka配置中心</title>
    <url>/SpringCloud/Eureka%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</url>
    <content><![CDATA[Eureka配置中心
<a id="more"></a>
<h1 id="SpringCloud-搭建配置中心SpringCloud-config"><a href="#SpringCloud-搭建配置中心SpringCloud-config" class="headerlink" title="SpringCloud 搭建配置中心SpringCloud config"></a><code>SpringCloud</code> 搭建配置中心<code>SpringCloud config</code></h1><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- eureka client start--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- eureka client end--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- config server start --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- config server end --&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>注:</strong> </p>
<ul>
<li><code>JDK version</code>: 1.8</li>
<li><code>SpringBoot version</code>:  <code>2.1.2.RELEASE</code></li>
<li><code>SpringCloud version</code>: <code>Greenwich.RELEASE</code></li>
</ul>
<p><code>SpringCloud</code> 版本兼容 <a href="https://spring.io/projects/spring-cloud" target="_blank"><code>https://spring.io/projects/spring-cloud</code></a></p>
<h2 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置<code>application.yml</code></h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">3001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">microservice-config-server</span></span><br><span class="line">  <span class="comment"># Git configuration</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      server:</span></span><br><span class="line"><span class="attr">        git:</span></span><br><span class="line"><span class="attr">          uri:</span> <span class="attr">https://github.com/forezp/SpringcloudConfig/</span></span><br><span class="line"><span class="attr">          search-paths:</span> <span class="string">respo</span></span><br><span class="line"><span class="attr">          default-label:</span> <span class="string">master</span></span><br><span class="line"><span class="comment">#          uri: https://git.oschina.net/itmuch/spring-cloud-config-repo.git # Git 仓库地址</span></span><br><span class="line"><span class="comment">#          username:  # Git 仓库账号</span></span><br><span class="line"><span class="comment">#          password:  # Git 仓库密码</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>yml</code></p>
</blockquote>
<ul>
<li><code>spring.cloud.config.server.git.uri</code>: 配置<code>GitHub</code>仓库地址(<code>Gitee</code>地址也可以)</li>
<li><code>spring.cloud.config.server.git.search-paths</code>: 配置仓库路径</li>
<li><code>spring.cloud.config.label</code>: 配置仓库的分支</li>
<li><code>spring.cloud.config.server.git.username</code>: 访问<code>GitHub</code>仓库的用户名</li>
<li><p><code>spring.cloud.config.server.git.password</code>: 访问<code>GitHub</code>仓库的用户密码</p>
<blockquote>
<p>路径规则  </p>
</blockquote>
<p><code>Spring Cloud Config Server</code>提供了<code>RESTful API</code>,可用来访问存在<code>Git</code>仓库中的配置文件.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/&#123;application&#125;/&#123;profile&#125;[/&#123;label&#125;]</span></span><br><span class="line"><span class="string">/&#123;application&#125;-&#123;profile&#125;.yml</span></span><br><span class="line"><span class="string">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.yml</span></span><br><span class="line"><span class="string">/&#123;application&#125;-&#123;profile&#125;.properties</span></span><br><span class="line"><span class="string">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.properties</span></span><br></pre></td></tr></table></figure>
<p>其中的{appliation}、{profile}、{label} 都是占位符.</p>
</li>
</ul>
<p><strong>注</strong></p>
<ul>
<li>使用的不同配置仓库,可以更改为自己的<code>GitHub</code>仓库地址</li>
<li>公开仓库不需要账号、密码,私有仓库需要填写(本<code>Demo</code>为公开仓库)。</li>
</ul>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>访问地址: <a href="http://127.0.0.1:3001/foo/dev" target="_blank"><code>http://127.0.0.1:3001/foo/dev</code></a></p>
<h2 id="配套代码"><a href="#配套代码" class="headerlink" title="配套代码"></a>配套代码</h2><ul>
<li>GitHub: <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/springcloud-config-server" target="_blank" rel="noopener">https://github.com/ColorCoinK/springcloud-learning/tree/master/springcloud-config-server</a></li>
</ul>
<p><strong>TIPS</strong> </p>
<ul>
<li>注册到<code>Eureka Server</code>时,需要添加在 <code>application.yml</code> 添加 <code>eureka.client.service-url.defaultZone=http://localhost:1001/eureka/</code>,同时需要在<code>SpringcloudConfigServerApplication</code>(启动类)添加<code>@EnableEurekaClient</code>注解</li>
<li>参考博客 <ol>
<li><a href="http://www.itmuch.com/spring-cloud/finchley-19/" target="_blank">Spring Cloud Config —— 周立(<code>http://www.itmuch.com/spring-cloud/finchley-19/</code>)</a></li>
<li><a href="https://blog.csdn.net/forezp/article/details/81041028" target="_blank">Spring Cloud Config —— 方志朋(<code>https://blog.csdn.net/forezp/article/details/81041028</code>)</a></li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka配置客户端</title>
    <url>/SpringCloud/Eureka%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    <content><![CDATA[Eureka配置客户端
<a id="more"></a>
<h1 id="SpringCloud-Greenwich-版本集成-Config-Client-注册到Eureka-Serever"><a href="#SpringCloud-Greenwich-版本集成-Config-Client-注册到Eureka-Serever" class="headerlink" title="SpringCloud Greenwich 版本集成 Config Client(注册到Eureka Serever)"></a><code>SpringCloud Greenwich</code> 版本集成 <code>Config Client</code>(注册到<code>Eureka Serever</code>)</h1><h2 id="添加相关依赖"><a href="#添加相关依赖" class="headerlink" title="添加相关依赖"></a>添加相关依赖</h2><ul>
<li>加依赖 </li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注册到 Eureka Server 时需要添加的依赖 start --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注册到 Eureka Server 时需要添加的依赖 end --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ConfigClient start --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ConfigClient end --&gt;</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">**注:** 需要添加 `spring-boot-starter-web` 否则启动会失败</span><br><span class="line"></span><br><span class="line">## 添加配置文件</span><br><span class="line"></span><br><span class="line">- 配置 `application.yml`</span><br><span class="line"></span><br><span class="line">```yaml</span><br><span class="line">server:</span><br><span class="line">  port: 3011</span><br></pre></td></tr></table></figure>
<ul>
<li>新建 <code>bootstrap.yml</code></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">microservice-foo</span> <span class="comment"># 对应 config server 所获取的配置文件的 &#123;application&#125;</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      uri:</span> <span class="attr">http://localhost:3001/</span>   <span class="comment"># profile 对应 config server 所获取的配置文件中的 &#123;profile&#125;</span></span><br><span class="line"><span class="attr">      profile:</span> <span class="string">dev</span>                  <span class="comment"># profile 对应 config 所获取的配置文件中的 &#123;profile&#125;</span></span><br><span class="line"><span class="attr">      label:</span> <span class="string">master</span>                 <span class="comment"># 指定Git 仓库的分支,对应 config server 所获取的配置文件的 &#123;label&#125;</span></span><br><span class="line"><span class="comment">#      discovery:</span></span><br><span class="line"><span class="comment">#        enabled: true               # 是否从配置中心读取文件</span></span><br><span class="line"><span class="comment">#        service-id: microservice-config-server    # 服务名</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:1001/eureka/</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>yml</code></p>
</blockquote>
<ul>
<li><code>spring.application.name</code>: 对应的 <code>config server</code> 所获取的配置文件的 <code>{application}</code></li>
<li><code>spring.cloud.uri</code>: 指定<code>Config Server</code>的地址,默认是<code>http://localhost:8888</code></li>
<li><code>spring.cloud.config.profile</code>:<code>profile</code>对应<code>Config Server</code> 所获取配置文件的<code>{profile}</code></li>
<li><code>spring.cloud.config.label</code>:指定<code>Git</code>仓库的分支,对应<code>Config Server</code>所获取配置文件的<code>{label}</code></li>
</ul>
<p>[KEY POINT]:  </p>
<ul>
<li><p>注意属性配置文件,以上属性为<code>bootstrap.yml</code>文件内容而不是<code>application.yml</code>文件.如果配置在<code>application.yml</code>中,改部分配置就不能获取配置的正确值.例如:<code>applicaiton.yml</code>默认<code>spring.cloud.config.uri</code>的默认值是<code>http://localhost:8888</code>,而并非是<code>http://localhost:3011</code></p>
</li>
<li><p><code>SpringCloud</code> 有一个 “引导上下文” 的概念,这是主应用程序上下文(Application Context) 的父上下文。引导上下文负责从配置服务器加载配置属性,一级解密外部配置文件中的属性。和主应用程序加载<code>application.*</code>(yml或properties)中的属性不同,引导上下文加载<code>bootstrap.*</code>中的属性。配置在<code>bootstrap.*</code>中的属性优先级更高,因此默认情况下他们不能被而本地配置覆盖</p>
</li>
</ul>
<h2 id="从API接口验证是否能够正确获取自定义配置"><a href="#从API接口验证是否能够正确获取自定义配置" class="headerlink" title="从API接口验证是否能够正确获取自定义配置"></a>从<code>API</code>接口验证是否能够正确获取自定义配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigClientConfigController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取 Config Server 配置文件中的 spring.cloud.config.profile属性值</span></span><br><span class="line">	<span class="meta">@Value</span>(<span class="string">"$&#123;spring.cloud.config.profile&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> String profile;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/profile"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getProfile</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.profile;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注:</strong> 如果需要注册到<code>Eureka</code>,需要在启动类<code>SpringcloudConfigClientApplication</code>上添加<code>@EnableEurekaClient</code>注解(注册到<code>Eureka Server</code>)</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>访问地址: <a href="http://127.0.0.1:3011/profile" target="_blank"><code>http://localhost:3011/profile</code></a></p>
<h2 id="配套代码"><a href="#配套代码" class="headerlink" title="配套代码"></a>配套代码</h2><ul>
<li>GitHub: <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/springcloud-config-client" target="_blank" rel="noopener">https://github.com/ColorCoinK/springcloud-learning/tree/master/springcloud-config-client</a></li>
</ul>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><ul>
<li><p><a href="http://blog.didispace.com/spring-cloud-starter-dalston-3/" target="_blank">程序猿DD —— 分布式配置中心</a></p>
</li>
<li><p><a href="http://www.ityouknow.com/springcloud/2017/05/25/springcloud-config-eureka.html" target="_blank">纯洁的微笑 —— 配置中心服务化和高可用</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</title>
    <url>/Blog/Intellij%20IDEA%E8%BF%90%E8%A1%8Cweb%E9%A1%B9%E7%9B%AE%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误
<a id="more"></a>
<h1 id="Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误"><a href="#Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误" class="headerlink" title="Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误"></a>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</h1><blockquote>
<p>错误信息</p>
</blockquote>
<p>Intellij IDEA 控制台信息<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">java.io.FileNotFoundException: Could not resolve XML resource [<span class="literal">null</span>] <span class="keyword">with</span> public ID [-<span class="comment">//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN], system ID [http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd] and base URI [jar:file:/D:/Code/IDE-workspace/iptvView/target/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c-1_0-rt.tld] to a known, local entity.</span></span><br><span class="line">at org.apache.tomcat.util.descriptor.LocalResolver.resolveEntity(LocalResolver.java:<span class="number">155</span>)</span><br></pre></td></tr></table></figure></p>
<p>Chrome 浏览器页面信息<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">HTTP Status <span class="number">500</span> - The absolute uri: http:<span class="comment">//java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span></span><br><span class="line">type Exception report</span><br><span class="line"></span><br><span class="line">message The absolute uri: http:<span class="comment">//java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span></span><br><span class="line"></span><br><span class="line">description The server encountered an internal error that prevented it <span class="keyword">from</span> fulfilling <span class="keyword">this</span> request.</span><br><span class="line"></span><br><span class="line">exception</span><br><span class="line"></span><br><span class="line">org.apache.jasper.JasperException: The absolute uri: http:<span class="comment">//java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span></span><br><span class="line">	org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:<span class="number">55</span>)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:<span class="number">277</span>)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:<span class="number">75</span>)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.generateTldResourcePath(TagLibraryInfoImpl.java:<span class="number">250</span>)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.&lt;init&gt;(TagLibraryInfoImpl.java:<span class="number">125</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseTaglibDirective(Parser.java:<span class="number">421</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseDirective(Parser.java:<span class="number">479</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseElements(Parser.java:<span class="number">1435</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parse(Parser.java:<span class="number">139</span>)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.doParse(ParserController.java:<span class="number">227</span>)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.parse(ParserController.java:<span class="number">100</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:<span class="number">201</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:<span class="number">358</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:<span class="number">338</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:<span class="number">325</span>)</span><br><span class="line">	org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:<span class="number">580</span>)</span><br><span class="line">	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:<span class="number">363</span>)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:<span class="number">396</span>)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:<span class="number">340</span>)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">790</span>)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:<span class="number">52</span>)</span><br><span class="line">	org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:<span class="number">238</span>)</span><br><span class="line">	org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:<span class="number">263</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:<span class="number">1208</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:<span class="number">992</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:<span class="number">939</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:<span class="number">856</span>)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:<span class="number">936</span>)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:<span class="number">827</span>)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">687</span>)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:<span class="number">812</span>)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">790</span>)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:<span class="number">52</span>)</span><br><span class="line">note The full stack trace <span class="keyword">of</span> the root cause is available <span class="keyword">in</span> the Apache Tomcat/<span class="number">8.0</span><span class="number">.52</span> logs.</span><br><span class="line"></span><br><span class="line">Apache Tomcat/<span class="number">8.0</span><span class="number">.52</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<ol>
<li>项目 <code>xxx/WEB-INF/lib</code> 中不存在相关<code>jar</code>包;</li>
</ol>
</blockquote>
<p>可以从 <a href="https://mvnrepository.com/artifact/javax.servlet/jstl/1.2" target="_blank">mavenrepository地址</a> 中找到相应<code>jar</code>包,添加相关依赖到<code>pom.xml</code>文件中并重新编译，查看问题是否解决。</p>
<p><strong>注：</strong> 通过添加缺失<code>jar</code>可以解决的就不用往下看了</p>
<blockquote>
<ol start="2">
<li>项目依赖中存在相关依赖,依然无法正常显示页面</li>
</ol>
</blockquote>
<blockquote>
<ol>
<li>找到项目配置的 <code>tomcat</code> 下 <code>xx\apache-tomcat-8.0.52\conf\context.xml</code>文件</li>
</ol>
</blockquote>
<blockquote>
<ol start="2">
<li>修改文件,添加如下内容 </li>
</ol>
</blockquote>
<p> &lt;Context <u> xmlBlockExternal=”false” </u> &gt;</p>
<p><strong>注：</strong> 只需要添加下划线中的 <code>xmlBlockExternal=&quot;false&quot;</code> 到 <code>Context</code> 标签即可</p>
<blockquote>
<p>总结: </p>
</blockquote>
<ol>
<li>出现<code>jsp</code>页面显示错误,一般都是缺少 <code>jar</code> 包所致。可检查在<code>tomcat</code>或编译后的文件夹中是否能够找到相关依赖。</li>
<li><p>上述异常中缺失的<code>jar</code>有,然而本次并不是缺少<code>jar</code>的错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">standard-1.1.2.jar、jstl-1.2.jar、jersey-server-1.9.jar、jstl-impl.jar</span><br></pre></td></tr></table></figure>
</li>
<li><p>本博客无法解决疑问时,可简练相关关键字再搜索。</p>
</li>
</ol>
<blockquote>
<p>参考博客  <a href="https://blog.csdn.net/wb96a1007/article/details/71665683" target="_blank">新版Tomcat无法解析web.xml</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Intellij IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>项目集成 FineBI 应用系统</title>
    <url>/blog/Web-Plugins/FineBI%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>FineBI后台Java集成报表页面<br><a id="more"></a></p>
<h1 id="项目集成-FineBI-应用系统"><a href="#项目集成-FineBI-应用系统" class="headerlink" title="项目集成 FineBI 应用系统"></a>项目集成 FineBI 应用系统</h1><ul>
<li>概述  <ol>
<li>安装 <code>FineBI</code> 客户端,或已有 <code>FineBI</code> 服务端;</li>
<li>使用<code>FineBI Web 页面集成</code>;</li>
</ol>
</li>
</ul>
<blockquote>
<p>前提    </p>
</blockquote>
<ol>
<li><p>安装<code>FIneBi</code> 找到<code>..\FineBI5.0\webapps\webroot</code> 文件夹，复制文件至<code>..\apache-tomcat-9.0.8\webapps\</code>目录下;</p>
</li>
<li><p>复制<code>JDK</code> 1.8 或以上环境中的 <code>D:\Program Files\Java\jdk1.8.0_161\lib\tools.jar</code>文件到 <code>D:\Environment\Tomcat\apache-tomcat-9.0.8\lib</code> 文件夹下;</p>
</li>
<li><p>在<code>dos</code>窗口执行<code>catalina.bat run</code>命令启动<code>tomcat</code> 或执行<code>start.sh</code>;</p>
</li>
<li><p>访问<code>http://127.0.0.1:8080/webroot/decision</code> 出现<code>FineBI</code>登录配置页面.</p>
</li>
</ol>
<ul>
<li>如有变动或启动失败,可以查看官网地址<a href="http://help.finebi.com/doc-view-45" target="_blank">Tomcat 服务器部署</a></li>
</ul>
<h2 id="web-页面集成"><a href="#web-页面集成" class="headerlink" title="web 页面集成"></a>web 页面集成</h2><blockquote>
<p>实现思路</p>
</blockquote>
<ol>
<li>配置登录<code>FineBI</code>系统信息,创建配置文件或设置配置文件到主配置文件中;</li>
<li>创建登录跳转链接 &gt;&gt; 实现通过访问项目地址 &gt;&gt; 返回登录FineBI登录地址,携带登录信息 &gt;&gt; 重定向至<code>FineBI</code>系统</li>
<li>完成集成</li>
</ol>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><blockquote>
<p><code>finebi.properties</code>配置文件内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">finebi.path= webroot/decision/login/cross/domain</span><br><span class="line">finebi.redirect= webroot/decision</span><br><span class="line"></span><br><span class="line">#-------localhost-------</span><br><span class="line">#finebi.ip=xxxx</span><br><span class="line">#finebi.port=xxxx</span><br><span class="line"></span><br><span class="line">#--------online---------</span><br><span class="line">finebi.ip=xxxx</span><br><span class="line">finebi.port=xxxxx</span><br></pre></td></tr></table></figure>
<ul>
<li><code>finebi.path</code>: 登录<code>FineBI</code>接口<code>URL</code></li>
<li><code>finebi.redirect</code>: 登录成功后重定向<code>URL</code></li>
<li><code>finebi.ip</code>: <code>FineBI</code> 服务部署地址</li>
<li><code>finebi.port</code>: <code>FineBI</code> 服务部署端口</li>
</ul>
<blockquote>
<p>实体类获取配置文件内容</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: FineBIProperties</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: FineBI 系统相关配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FineBIProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String ip;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String port;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String path;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String redirect;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="comment">// 读取配置文件</span></span><br><span class="line">		Properties property = <span class="keyword">new</span> Properties();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ClassLoader cl = Thread.currentThread().getContextClassLoader();</span><br><span class="line">			InputStream inputStream = <span class="keyword">new</span> BufferedInputStream(cl.getResourceAsStream(<span class="string">"finebi.properties"</span>));</span><br><span class="line">			property.load(inputStream);</span><br><span class="line">			inputStream.close();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		ip = property.getProperty(<span class="string">"finebi.ip"</span>);</span><br><span class="line">		port = property.getProperty(<span class="string">"finebi.port"</span>);</span><br><span class="line">		path = property.getProperty(<span class="string">"finebi.path"</span>);</span><br><span class="line">		redirect = property.getProperty(<span class="string">"finebi.redirect"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 拼接登录FineBI 系统的登录URL</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">loginFineBI</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String finbiURL = <span class="string">"http://"</span> + ip + <span class="string">":"</span> + port + <span class="string">"/"</span> + path + <span class="string">"?"</span>;</span><br><span class="line">		<span class="keyword">return</span> finbiURL;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 拼接登陆后重定向的URL</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">redirectURL</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String finbiURL = <span class="string">"http://"</span> + ip + <span class="string">":"</span> + port + <span class="string">"/"</span> + redirect;</span><br><span class="line">		<span class="keyword">return</span> finbiURL;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="访问API返回登录FinBI系统登录URL"><a href="#访问API返回登录FinBI系统登录URL" class="headerlink" title="访问API返回登录FinBI系统登录URL"></a>访问API返回登录FinBI系统登录URL</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sanss.finebi.FineBIProperties;</span><br><span class="line"><span class="keyword">import</span> com.sanss.user.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: FineBIController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 接入 FineBI 相关</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/12/05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"finebi"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FineBIController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> Object</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: getLoginUrl</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 获取登录 FineBI 系统的路径,Path</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"getLoginPath"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">getLoginUrl</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">		Map&lt;String, Object&gt; result = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">		FineBIProperties properties = <span class="keyword">new</span> FineBIProperties();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取登录用户信息</span></span><br><span class="line">		User user = <span class="keyword">new</span> User(<span class="string">"张三"</span>,<span class="string">"1234"</span>);</span><br><span class="line">		String userName = user.getUser_name();</span><br><span class="line">		String password = user.getPasswd();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 获取登录 FineBI 的地址</span></span><br><span class="line">		String url = properties.loginFineBI();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 拼接 FineBI 登录 url</span></span><br><span class="line">		StringBuffer str = <span class="keyword">new</span> StringBuffer(url);</span><br><span class="line">		str.append(</span><br><span class="line">				<span class="string">"fine_username="</span> + userName + <span class="string">"&amp;fine_password="</span> + password + <span class="string">"&amp;validity=-1"</span></span><br><span class="line">						+ <span class="string">"&amp;&amp;callback=loginFineBI"</span>);</span><br><span class="line"></span><br><span class="line">		result.put(<span class="string">"url"</span>, str);</span><br><span class="line">		result.put(<span class="string">"redirect"</span>, properties.redirectURL());</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>登录的用户信息获取方式有可能不一样,需要根据自身现状进行调整。</li>
</ul>
<h3 id="FineBI跳转页面"><a href="#FineBI跳转页面" class="headerlink" title="FineBI跳转页面"></a>FineBI跳转页面</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>FineBI 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"jquery/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">html &#123;</span></span><br><span class="line"><span class="undefined">	overflow: hidden;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">html, body, iframe &#123;</span></span><br><span class="line"><span class="undefined">	width: 100%;</span></span><br><span class="line"><span class="undefined">	height: 100%;</span></span><br><span class="line"><span class="undefined">	margin: 0px;</span></span><br><span class="line"><span class="undefined">	padding: 0px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">iframe &#123;</span></span><br><span class="line"><span class="undefined">	border: none;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">scrolling</span>=<span class="string">"no"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="comment">/** 获取项目名称 */</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getProjectName</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> pathName = <span class="built_in">window</span>.document.location.pathname;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> projectName = pathName.substring(<span class="number">0</span>,pathName.substr(<span class="number">1</span>).indexOf(<span class="string">'/'</span>)+<span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> projectName;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">		<span class="comment">//../js/util.js中定义的获取项目名称的方法</span></span></span><br><span class="line"><span class="actionscript">		<span class="keyword">var</span> projectName = getProjectName();</span></span><br><span class="line"><span class="javascript">		$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">			$.getJSON(projectName + <span class="string">'/finebi/getLoginPath.do'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">				$.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">					type : <span class="string">'GET'</span>,</span></span><br><span class="line"><span class="undefined">					url : data.url,</span></span><br><span class="line"><span class="actionscript">					dataType : <span class="string">'jsonp'</span>,</span></span><br><span class="line"><span class="actionscript">					success : <span class="function"><span class="keyword">function</span><span class="params">(token)</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">						loginFineBI(data, token);</span></span><br><span class="line"><span class="undefined">					&#125;</span></span><br><span class="line"><span class="undefined">				&#125;);</span></span><br><span class="line"><span class="undefined">			&#125;);</span></span><br><span class="line"><span class="undefined">		&#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">		<span class="keyword">var</span> loginFineBI = <span class="function"><span class="keyword">function</span><span class="params">(data, token)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">			$(<span class="string">'iframe'</span>).attr(<span class="string">"src"</span>, data.redirect);</span></span><br><span class="line"><span class="undefined">		&#125;</span></span><br><span class="line"><span class="undefined">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="其他的集成方式"><a href="#其他的集成方式" class="headerlink" title="其他的集成方式"></a>其他的集成方式</h3><p><strong>注：</strong>以上方式实现登录需要同步<code>项目连接数据库用户登录相关表</code>与<code>FineBI系统的用户信息表</code>才能实现登录,也可以采用<code>Token</code>或其他方式实现登录,有关其他的详细步骤可以查看官网<a href="http://help.finebi.com/doc-view-372.html" target="_blank">Web页面集成简单例子</a></p>
]]></content>
      <categories>
        <category>blog</category>
        <category>Web Plugins</category>
      </categories>
      <tags>
        <tag>FineBI</tag>
      </tags>
  </entry>
  <entry>
    <title>impala 使用记录</title>
    <url>/blog/Impala/Impala%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[impala 使用记录
<a id="more"></a>
<h1 id="impala-使用记录"><a href="#impala-使用记录" class="headerlink" title="impala 使用记录"></a>impala 使用记录</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><blockquote>
<p>进入 <code>impala</code></p>
</blockquote>
<pre><code>impala-shell    
</code></pre><blockquote>
<p>退出 <code>impala</code>    </p>
</blockquote>
<pre><code>exit;
</code></pre><blockquote>
<p>展示所有表        </p>
</blockquote>
<pre><code>show tables;
</code></pre><blockquote>
<p>描述表结构    </p>
</blockquote>
<pre><code>desc table_name;
</code></pre><p><strong>注:</strong></p>
<ol>
<li>每个<code>SQL</code>语句结束时需要加 ‘;’,当数据量大时可以使用<code>limit</code>;</li>
<li>查询时尽量使用数据分区字段,可以有效减少查询时间时间</li>
</ol>
<h2 id="函数总结"><a href="#函数总结" class="headerlink" title="函数总结"></a>函数总结</h2><blockquote>
<p><code>form_unixtime</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 时间戳转为制定格式的字符串</span></span><br><span class="line"> <span class="keyword">select</span> from_unixtime(<span class="keyword">unix_timestamp</span>()<span class="number">-3</span>*<span class="number">24</span>*<span class="number">3600</span>,<span class="string">'yyyyMMdd'</span>) daytime;</span><br></pre></td></tr></table></figure>
<p>|———-|<br>| daytime  |<br>|———-|<br>| 20200626 |</p>
<blockquote>
<p><code>unix_timestamp</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 获取当前时间戳</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">unix_timestamp</span>() <span class="keyword">as</span> <span class="built_in">time</span>;</span><br></pre></td></tr></table></figure>
<p>|————|<br>| time       |<br>|————|<br>| 1593441066 |</p>
]]></content>
      <categories>
        <category>blog</category>
        <category>Impala</category>
      </categories>
      <tags>
        <tag>Impala</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML log</title>
    <url>/blog/HTML/HTML%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>css设置奇偶行数、跳转、border渐变色、xml转为json、js获取查询参数<br><a id="more"></a></p>
<h1 id="HTML-应用记录"><a href="#HTML-应用记录" class="headerlink" title="HTML 应用记录"></a>HTML 应用记录</h1><h2 id="css获取奇偶行数"><a href="#css获取奇偶行数" class="headerlink" title="css获取奇偶行数"></a><code>css</code>获取奇偶行数</h2><ul>
<li>奇数行：<code>td:nth-child(odd){}</code></li>
<li><p>偶数行：<code>td:nth-child(even){}</code></p>
<p>  <strong>css选择器：</strong><a href="http://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank">参考地址</a> </p>
</li>
</ul>
<h2 id="跳转html页面"><a href="#跳转html页面" class="headerlink" title="跳转html页面"></a>跳转<code>html</code>页面</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">parent.window.location.href = <span class="string">"../main/index.do"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="border设置渐变色"><a href="#border设置渐变色" class="headerlink" title="border设置渐变色"></a><code>border</code>设置渐变色</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.customborder</span> &#123;</span><br><span class="line">	<span class="attribute">border-image</span>: <span class="built_in">-webkit-linear-gradient</span>(#F80, #2ED) <span class="number">20</span> <span class="number">20</span>;</span><br><span class="line">	<span class="attribute">border-image</span>: <span class="built_in">-moz-linear-gradient</span>(#F80, #2ED) <span class="number">20</span> <span class="number">20</span>;</span><br><span class="line">	<span class="attribute">border-image</span>: <span class="built_in">-o-linear-gradient</span>(#F80, #2ED) <span class="number">20</span> <span class="number">20</span>;</span><br><span class="line">	<span class="attribute">border-image</span>: <span class="built_in">linear-gradient</span>(#F80, #2ED) <span class="number">20</span> <span class="number">20</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="数组首尾添加空对象"><a href="#数组首尾添加空对象" class="headerlink" title="数组首尾添加空对象"></a>数组首尾添加空对象</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 头部添加</span></span><br><span class="line">result.unshift(&#123;&#125;);</span><br><span class="line"><span class="comment">// 数组 尾部添加</span></span><br><span class="line">result.push(&#123;&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="将XML字符串转为JSON对象"><a href="#将XML字符串转为JSON对象" class="headerlink" title="将XML字符串转为JSON对象"></a>将XML字符串转为JSON对象</h2><ul>
<li>下载插件<code>http://www.kawa.net/works/js/xml/objtree-e.html#download</code></li>
<li>按照案例实现即可</li>
</ul>
<h2 id="JS函数获取url参数"><a href="#JS函数获取url参数" class="headerlink" title="JS函数获取url参数"></a>JS函数获取url参数</h2><blockquote>
<p>已<code>URL</code>为参数</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getQueryParams</span>(<span class="params">url</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> params = url.split(<span class="string">'?'</span>)[<span class="number">1</span>].split(<span class="string">"&amp;"</span>);</span><br><span class="line">	<span class="keyword">var</span> param = &#123;&#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;params.length;i++) &#123;</span><br><span class="line">		<span class="built_in">console</span>.info(params[i]);</span><br><span class="line">		<span class="keyword">var</span> pair = params[i].split(<span class="string">'='</span>);</span><br><span class="line">		param[pair[<span class="number">0</span>]] = pair[<span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">console</span>.info(<span class="built_in">JSON</span>.stringify(param))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>获取跳转当前页面的参数</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 解析URL 参数,封装为JSON对象</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getParam</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> param = &#123;&#125;;</span><br><span class="line">	<span class="keyword">var</span> params = <span class="built_in">decodeURI</span>(<span class="built_in">window</span>.location.search.substr(<span class="number">1</span>));</span><br><span class="line">	<span class="keyword">var</span> param_arr = params.split(<span class="string">"&amp;"</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; param_arr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">var</span> pair = param_arr[i].split(<span class="string">"="</span>);</span><br><span class="line">		param[pair[<span class="number">0</span>]] = pair[<span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> param;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="转换时间格式"><a href="#转换时间格式" class="headerlink" title="转换时间格式"></a>转换时间格式</h2><blockquote>
<p>当前时间转为时间格式</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleDateString().split(<span class="string">'/'</span>).join(<span class="string">'-'</span>) + <span class="string">' '</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleTimeString(<span class="string">'chinese'</span>,&#123;<span class="attr">hour12</span>: <span class="literal">false</span>&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="常用的正则"><a href="#常用的正则" class="headerlink" title="常用的正则"></a>常用的正则</h2><blockquote>
<p>字符长度</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getChars</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">var</span> c = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">var</span> unicode = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">var</span> len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (str == <span class="literal">null</span> || str == <span class="string">""</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	len = str.length;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">		unicode = str.charCodeAt(i);</span><br><span class="line">		<span class="keyword">if</span> (unicode &lt; <span class="number">127</span>) &#123; <span class="comment">//判断是单字符还是双字符</span></span><br><span class="line">			c += <span class="number">1</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;  <span class="comment">//chinese</span></span><br><span class="line">			c += <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>登录名格式校验(只允许字母、数字、_)</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^[0-9a-zA-Z_]&#123;4,14&#125;$/g</span>;</span><br><span class="line">	<span class="keyword">if</span> (!reg.test(value)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">'用户名不能有特殊字符'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="regexp">/(^\_)|(\__)|(\_+$)/</span>.test(value)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">'用户名首尾不能出现下划线\'_\''</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="regexp">/^\d+\d+\d$/</span>.test(value)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">'用户名不能全为数字'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (is_repeat) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">'用户名不能重复'</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>密码复杂度校验(数字、符号、字母其中两种)</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 必填项不能为空</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"/[\\S]+/"</span>).test(value)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 密码必须6到18位，且不能出现空格</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"/^[\\S]&#123;8,14&#125;$/"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 长度为8~14个字符,字母/数字/标点符号至少包含两种,不允许有空格、中文</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$)(?![\\u4E00-\\u9FFF]).&#123;8,14&#125;$'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不允许包含特殊字符</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"[`~!@#$^&amp;*()=|&#123;&#125;':;',\\[\\].&lt;&gt;《》/?~！@#￥……&amp;*（）\\-|&#123;&#125;【】‘；：”“'。，、？\\%]"</span>);</span><br></pre></td></tr></table></figure>
<h2 id="LayUI组件某些数据行不可选"><a href="#LayUI组件某些数据行不可选" class="headerlink" title="LayUI组件某些数据行不可选"></a><code>LayUI</code>组件某些数据行不可选</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数据加载后禁用批量删除按钮</span></span><br><span class="line">table.render(&#123;</span><br><span class="line">	id: <span class="string">'LAY_ACCOUNT_TABLE'</span>,</span><br><span class="line">	done:<span class="function"><span class="keyword">function</span>(<span class="params">res,curr,count</span>)</span>&#123;</span><br><span class="line">		 $(<span class="string">'#face-del'</span>).addClass(<span class="string">'layui-btn-disabled'</span>);</span><br><span class="line">        <span class="keyword">let</span> _all = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">let</span> data = res.data;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">          <span class="keyword">let</span> status = data[i].enableDelete;</span><br><span class="line">          <span class="keyword">if</span> (!status) &#123;</span><br><span class="line">            <span class="comment">// checkbox 根据条件设置不可选中</span></span><br><span class="line">            $(<span class="string">'div[lay-id=LAY_ACCOUNT_TABLE]&gt;.layui-table-box&gt;.layui-table-body&gt;.layui-table&gt;tbody&gt; tr[data-index='</span> + i</span><br><span class="line">                + <span class="string">'] input[type="checkbox"]'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">true</span>);</span><br><span class="line">            _all = <span class="literal">true</span>;<span class="comment">// 隐藏表头全选判断状态</span></span><br><span class="line">            form.render();<span class="comment">// 重新渲染一下</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (_all) &#123;</span><br><span class="line">          <span class="comment">// 禁用全选 checkbox</span></span><br><span class="line">          $(<span class="string">'th[data-field='</span> + <span class="number">0</span> + <span class="string">'] input[type="checkbox"]'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        form.render(<span class="string">'checkbox'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</title>
    <url>/blog/Intellij-IDEA%E8%BF%90%E8%A1%8Cweb%E9%A1%B9%E7%9B%AE%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误
<a id="more"></a>
<h1 id="Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误"><a href="#Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误" class="headerlink" title="Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误"></a>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</h1><blockquote>
<p>错误信息</p>
</blockquote>
<p>Intellij IDEA 控制台信息<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">java.io.FileNotFoundException: Could not resolve XML resource [<span class="literal">null</span>] <span class="keyword">with</span> public ID [-<span class="comment">//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN], system ID [http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd] and base URI [jar:file:/D:/Code/IDE-workspace/iptvView/target/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c-1_0-rt.tld] to a known, local entity.</span></span><br><span class="line">at org.apache.tomcat.util.descriptor.LocalResolver.resolveEntity(LocalResolver.java:<span class="number">155</span>)</span><br></pre></td></tr></table></figure></p>
<p>Chrome 浏览器页面信息<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">HTTP Status <span class="number">500</span> - The absolute uri: http:<span class="comment">//java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span></span><br><span class="line">type Exception report</span><br><span class="line"></span><br><span class="line">message The absolute uri: http:<span class="comment">//java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span></span><br><span class="line"></span><br><span class="line">description The server encountered an internal error that prevented it <span class="keyword">from</span> fulfilling <span class="keyword">this</span> request.</span><br><span class="line"></span><br><span class="line">exception</span><br><span class="line"></span><br><span class="line">org.apache.jasper.JasperException: The absolute uri: http:<span class="comment">//java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span></span><br><span class="line">	org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:<span class="number">55</span>)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:<span class="number">277</span>)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:<span class="number">75</span>)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.generateTldResourcePath(TagLibraryInfoImpl.java:<span class="number">250</span>)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.&lt;init&gt;(TagLibraryInfoImpl.java:<span class="number">125</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseTaglibDirective(Parser.java:<span class="number">421</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseDirective(Parser.java:<span class="number">479</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseElements(Parser.java:<span class="number">1435</span>)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parse(Parser.java:<span class="number">139</span>)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.doParse(ParserController.java:<span class="number">227</span>)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.parse(ParserController.java:<span class="number">100</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:<span class="number">201</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:<span class="number">358</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:<span class="number">338</span>)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:<span class="number">325</span>)</span><br><span class="line">	org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:<span class="number">580</span>)</span><br><span class="line">	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:<span class="number">363</span>)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:<span class="number">396</span>)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:<span class="number">340</span>)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">790</span>)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:<span class="number">52</span>)</span><br><span class="line">	org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:<span class="number">238</span>)</span><br><span class="line">	org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:<span class="number">263</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:<span class="number">1208</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:<span class="number">992</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:<span class="number">939</span>)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:<span class="number">856</span>)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:<span class="number">936</span>)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:<span class="number">827</span>)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">687</span>)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:<span class="number">812</span>)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:<span class="number">790</span>)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:<span class="number">52</span>)</span><br><span class="line">note The full stack trace <span class="keyword">of</span> the root cause is available <span class="keyword">in</span> the Apache Tomcat/<span class="number">8.0</span><span class="number">.52</span> logs.</span><br><span class="line"></span><br><span class="line">Apache Tomcat/<span class="number">8.0</span><span class="number">.52</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<ol>
<li>项目 <code>xxx/WEB-INF/lib</code> 中不存在相关<code>jar</code>包;</li>
</ol>
</blockquote>
<p>可以从 <a href="https://mvnrepository.com/artifact/javax.servlet/jstl/1.2" target="_blank">mavenrepository地址</a> 中找到相应<code>jar</code>包,添加相关依赖到<code>pom.xml</code>文件中并重新编译，查看问题是否解决。</p>
<p><strong>注：</strong> 通过添加缺失<code>jar</code>可以解决的就不用往下看了</p>
<blockquote>
<ol start="2">
<li>项目依赖中存在相关依赖,依然无法正常显示页面</li>
</ol>
</blockquote>
<blockquote>
<ol>
<li>找到项目配置的 <code>tomcat</code> 下 <code>xx\apache-tomcat-8.0.52\conf\context.xml</code>文件</li>
</ol>
</blockquote>
<blockquote>
<ol start="2">
<li>修改文件,添加如下内容 </li>
</ol>
</blockquote>
<p> &lt;Context <u> xmlBlockExternal=”false” </u> &gt;</p>
<p><strong>注：</strong> 只需要添加下划线中的 <code>xmlBlockExternal=&quot;false&quot;</code> 到 <code>Context</code> 标签即可</p>
<blockquote>
<p>总结: </p>
</blockquote>
<ol>
<li>出现<code>jsp</code>页面显示错误,一般都是缺少 <code>jar</code> 包所致。可检查在<code>tomcat</code>或编译后的文件夹中是否能够找到相关依赖。</li>
<li><p>上述异常中缺失的<code>jar</code>有,然而本次并不是缺少<code>jar</code>的错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">standard-1.1.2.jar、jstl-1.2.jar、jersey-server-1.9.jar、jstl-impl.jar</span><br></pre></td></tr></table></figure>
</li>
<li><p>本博客无法解决疑问时,可简练相关关键字再搜索。</p>
</li>
</ol>
<blockquote>
<p>参考博客  <a href="https://blog.csdn.net/wb96a1007/article/details/71665683" target="_blank">新版Tomcat无法解析web.xml</a></p>
</blockquote>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Intellij IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</title>
    <url>/Blog/Intellij%20IDEA%E9%83%A8%E7%BD%B2web%E9%A1%B9%E7%9B%AEweb.xml%E8%A7%A3%E6%9E%90%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误
<a id="more"></a>
<h1 id="Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误"><a href="#Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误" class="headerlink" title="Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误"></a>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</h1><blockquote>
<p>背景    </p>
</blockquote>
<ol>
<li><p>intellij IDEA 将应用打成<code>war</code>包可以正常运行及显示 </p>
</li>
<li><p>eclipse 使用同样的<code>tomcat | JDK</code>运行正常 </p>
</li>
<li><p>intellij IDEA 使用<code>tomcat</code>运行失败 </p>
</li>
</ol>
<blockquote>
<p>错误信息    </p>
</blockquote>
<p>Intellij IDEA 控制台信息 </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">java.io.FileNotFoundException: Could not resolve XML resource [null] with public ID [-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN], system ID [http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd] and base URI [jar:file:/D:/Code/IDE-workspace/iptvView/target/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c-1_0-rt.tld] to a known, local entity.</span><br><span class="line">at org.apache.tomcat.util.descriptor.LocalResolver.resolveEntity(LocalResolver.java:155)</span><br></pre></td></tr></table></figure>
<p>Chrome 浏览器页面信息        </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HTTP Status 500 - The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span><br><span class="line">type Exception report</span><br><span class="line"></span><br><span class="line">message The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span><br><span class="line"></span><br><span class="line">description The server encountered an internal error that prevented it from fulfilling this request.</span><br><span class="line"></span><br><span class="line">exception</span><br><span class="line"></span><br><span class="line">org.apache.jasper.JasperException: The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span><br><span class="line">	org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:55)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:277)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:75)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.generateTldResourcePath(TagLibraryInfoImpl.java:250)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.<span class="tag">&lt;<span class="name">init</span>&gt;</span>(TagLibraryInfoImpl.java:125)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseTaglibDirective(Parser.java:421)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseDirective(Parser.java:479)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseElements(Parser.java:1435)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parse(Parser.java:139)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.doParse(ParserController.java:227)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.parse(ParserController.java:100)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:201)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:358)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:338)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:325)</span><br><span class="line">	org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:580)</span><br><span class="line">	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:363)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:396)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:340)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:790)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)</span><br><span class="line">	org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:238)</span><br><span class="line">	org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:263)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1208)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:992)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:939)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:936)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:827)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:687)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:812)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:790)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)</span><br><span class="line">note The full stack trace of the root cause is available in the Apache Tomcat/8.0.52 logs.</span><br><span class="line"></span><br><span class="line">Apache Tomcat/8.0.52</span><br></pre></td></tr></table></figure>
<blockquote>
<p>项目 <code>xxx/WEB-INF/lib</code> 中不存在相关<code>jar</code>包    </p>
</blockquote>
<p>可以从 <a href="https://mvnrepository.com/artifact/javax.servlet/jstl/1.2" target="_blank">mavenrepository地址</a> 中找到相应<code>jar</code>包,添加相关依赖到<code>pom.xml</code>文件中并重新编译，查看问题是否解决。</p>
<p><strong>注：</strong> 通过添加缺失<code>jar</code>可以解决的就不用往下看了</p>
<blockquote>
<p>项目依赖中存在相关依赖,依然无法正常显示页面    </p>
</blockquote>
<blockquote>
<blockquote>
<ol>
<li>找到项目配置的 <code>tomcat</code> 下 <code>xx\apache-tomcat-8.0.52\conf\context.xml</code>文件</li>
</ol>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<ol start="2">
<li>修改文件,添加如下内容 </li>
</ol>
</blockquote>
</blockquote>
<p> &lt;Context <u> xmlBlockExternal=”false” </u> &gt;</p>
<p><strong>注：</strong> 只需要添加下划线中的 <code>xmlBlockExternal=&quot;false&quot;</code> 到 <code>Context</code> 标签即可</p>
<blockquote>
<p>总结：     </p>
</blockquote>
<ol>
<li><p>出现<code>jsp</code>页面显示错误,一般都是缺少 <code>jar</code> 包所致。可检查在<code>tomcat</code>或编译后的文件夹中是否能够找到相关依赖。</p>
</li>
<li><p>上述异常中缺失的<code>jar</code>有,然而本次并不是缺少<code>jar</code>的错误</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">standard-1.1.2.jar、jstl-1.2.jar、jersey-server-1.9.jar、jstl-impl.jar</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>本博客无法解决疑问时,可简练相关关键字再搜索。</li>
</ol>
<blockquote>
<p>参考博客  <a href="https://blog.csdn.net/wb96a1007/article/details/71665683" target="_blank">新版Tomcat无法解析web.xml</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Intellij IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</title>
    <url>/blog/Intellij-IDEA%E9%83%A8%E7%BD%B2web%E9%A1%B9%E7%9B%AEweb.xml%E8%A7%A3%E6%9E%90%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误
<a id="more"></a>
<h1 id="Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误"><a href="#Intellij-IDEA-部署-Web-项目时-web-xml-无法正常解析导致-jsp-显示错误" class="headerlink" title="Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误"></a>Intellij IDEA 部署 Web 项目时,web.xml 无法正常解析导致 jsp 显示错误</h1><blockquote>
<p>背景    </p>
</blockquote>
<ol>
<li><p>intellij IDEA 将应用打成<code>war</code>包可以正常运行及显示 </p>
</li>
<li><p>eclipse 使用同样的<code>tomcat | JDK</code>运行正常 </p>
</li>
<li><p>intellij IDEA 使用<code>tomcat</code>运行失败 </p>
</li>
</ol>
<blockquote>
<p>错误信息    </p>
</blockquote>
<p>Intellij IDEA 控制台信息 </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">java.io.FileNotFoundException: Could not resolve XML resource [null] with public ID [-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN], system ID [http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd] and base URI [jar:file:/D:/Code/IDE-workspace/iptvView/target/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c-1_0-rt.tld] to a known, local entity.</span><br><span class="line">at org.apache.tomcat.util.descriptor.LocalResolver.resolveEntity(LocalResolver.java:155)</span><br></pre></td></tr></table></figure>
<p>Chrome 浏览器页面信息        </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HTTP Status 500 - The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span><br><span class="line">type Exception report</span><br><span class="line"></span><br><span class="line">message The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span><br><span class="line"></span><br><span class="line">description The server encountered an internal error that prevented it from fulfilling this request.</span><br><span class="line"></span><br><span class="line">exception</span><br><span class="line"></span><br><span class="line">org.apache.jasper.JasperException: The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved in either web.xml or the jar files deployed with this application</span><br><span class="line">	org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:55)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:277)</span><br><span class="line">	org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:75)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.generateTldResourcePath(TagLibraryInfoImpl.java:250)</span><br><span class="line">	org.apache.jasper.compiler.TagLibraryInfoImpl.<span class="tag">&lt;<span class="name">init</span>&gt;</span>(TagLibraryInfoImpl.java:125)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseTaglibDirective(Parser.java:421)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseDirective(Parser.java:479)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parseElements(Parser.java:1435)</span><br><span class="line">	org.apache.jasper.compiler.Parser.parse(Parser.java:139)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.doParse(ParserController.java:227)</span><br><span class="line">	org.apache.jasper.compiler.ParserController.parse(ParserController.java:100)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:201)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:358)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:338)</span><br><span class="line">	org.apache.jasper.compiler.Compiler.compile(Compiler.java:325)</span><br><span class="line">	org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:580)</span><br><span class="line">	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:363)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:396)</span><br><span class="line">	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:340)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:790)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)</span><br><span class="line">	org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:238)</span><br><span class="line">	org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:263)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1208)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:992)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:939)</span><br><span class="line">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:936)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:827)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:687)</span><br><span class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:812)</span><br><span class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:790)</span><br><span class="line">	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)</span><br><span class="line">note The full stack trace of the root cause is available in the Apache Tomcat/8.0.52 logs.</span><br><span class="line"></span><br><span class="line">Apache Tomcat/8.0.52</span><br></pre></td></tr></table></figure>
<blockquote>
<p>项目 <code>xxx/WEB-INF/lib</code> 中不存在相关<code>jar</code>包    </p>
</blockquote>
<p>可以从 <a href="https://mvnrepository.com/artifact/javax.servlet/jstl/1.2" target="_blank">mavenrepository地址</a> 中找到相应<code>jar</code>包,添加相关依赖到<code>pom.xml</code>文件中并重新编译，查看问题是否解决。</p>
<p><strong>注：</strong> 通过添加缺失<code>jar</code>可以解决的就不用往下看了</p>
<blockquote>
<p>项目依赖中存在相关依赖,依然无法正常显示页面    </p>
</blockquote>
<blockquote>
<blockquote>
<ol>
<li>找到项目配置的 <code>tomcat</code> 下 <code>xx\apache-tomcat-8.0.52\conf\context.xml</code>文件</li>
</ol>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<ol start="2">
<li>修改文件,添加如下内容 </li>
</ol>
</blockquote>
</blockquote>
<p> &lt;Context <u> xmlBlockExternal=”false” </u> &gt;</p>
<p><strong>注：</strong> 只需要添加下划线中的 <code>xmlBlockExternal=&quot;false&quot;</code> 到 <code>Context</code> 标签即可</p>
<blockquote>
<p>总结：     </p>
</blockquote>
<ol>
<li><p>出现<code>jsp</code>页面显示错误,一般都是缺少 <code>jar</code> 包所致。可检查在<code>tomcat</code>或编译后的文件夹中是否能够找到相关依赖。</p>
</li>
<li><p>上述异常中缺失的<code>jar</code>有,然而本次并不是缺少<code>jar</code>的错误</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">standard-1.1.2.jar、jstl-1.2.jar、jersey-server-1.9.jar、jstl-impl.jar</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>本博客无法解决疑问时,可简练相关关键字再搜索。</li>
</ol>
<blockquote>
<p>参考博客  <a href="https://blog.csdn.net/wb96a1007/article/details/71665683" target="_blank">新版Tomcat无法解析web.xml</a></p>
</blockquote>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Intellij IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Java使用正则表达式仅获取中文</title>
    <url>/Blog/Java/Java%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BB%85%E8%8E%B7%E5%8F%96%E4%B8%AD%E6%96%87/</url>
    <content><![CDATA[<p>Java 使用正则表达式获取字符串中的中文,将字母、数字、下划线等去除.字符串为<code>现网电视剧订购series_order</code><br><a id="more"></a></p>
<h1 id="Java-代码"><a href="#Java-代码" class="headerlink" title="Java 代码"></a>Java 代码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  String jsonStr = <span class="string">"[&#123;\"number\":16,\"name\":\"现网电视剧订购series_order\"&#125;,&#123;\"number\":17,\"name\":\"电影详情页movie_detail\"&#125;,&#123;\"number\":19,\"name\":\"限免专区biz_30127402\"&#125;,&#123;\"number\":19,\"name\":\"综艺详情variety_detail\"&#125;,&#123;\"number\":24,\"name\":\"电视剧记录与收藏series_fav\"&#125;,&#123;\"number\":24,\"name\":\"热门推荐biz_79818028\"&#125;,&#123;\"number\":38,\"name\":\"电影专区biz_17101799\"&#125;,&#123;\"number\":49,\"name\":\"电视剧详情页series_detail\"&#125;,&#123;\"number\":53,\"name\":\"现网电视剧播放series_play\"&#125;,&#123;\"number\":103,\"name\":\"热门推荐biz_87847639\"&#125;]"</span>;</span><br><span class="line">  List&lt;rank&gt; result = JSONArray.parseArray(jsonStr, rank.class);</span><br><span class="line">  System.out.println(result);</span><br><span class="line">  String name = <span class="string">""</span>;</span><br><span class="line">  String regex = <span class="string">"[a-zA-Z]"</span>;</span><br><span class="line">  String[] array = <span class="keyword">new</span> String[<span class="number">3</span>];</span><br><span class="line">  <span class="keyword">for</span> (rank rank : result) &#123;</span><br><span class="line">    name = rank.getname();</span><br><span class="line">    array = name.split(regex);</span><br><span class="line">    rank.setname(array[<span class="number">0</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  System.out.println(result.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Java</tag>
        <tag>Regex</tag>
      </tags>
  </entry>
  <entry>
    <title>Java导出Excel并下载</title>
    <url>/Blog/Java%E5%AF%BC%E5%87%BAExcel%E5%B9%B6%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p>Java使用POI生成Excel、下载文件<br><a id="more"></a></p>
<h1 id="Java查询结果生成多-Sheet-的页-Excel-提供页面导出功能"><a href="#Java查询结果生成多-Sheet-的页-Excel-提供页面导出功能" class="headerlink" title="Java查询结果生成多 Sheet 的页 Excel,提供页面导出功能"></a><h3>Java查询结果生成多 Sheet 的页 Excel,提供页面导出功能</h3></h1><h2 id="查询结果直接导出-Excel"><a href="#查询结果直接导出-Excel" class="headerlink" title="查询结果直接导出 Excel"></a>查询结果直接导出 Excel</h2><ul>
<li>思路: 使用 <code>import javax.servlet.http.HttpServletResponse</code> 获取输出流,将文件写入,实现导出</li>
</ul>
<blockquote>
<p>controller 代码</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"xx"</span> method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchCommonalityQuery</span><span class="params">(HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    String fileName = file.getOriginalFilename();</span><br><span class="line">    <span class="comment">// 文件名称   </span></span><br><span class="line">    String name = <span class="string">"xx.xlsx"</span>;</span><br><span class="line"></span><br><span class="line">    response.setContentType(<span class="string">"application/octet-stream"</span>);</span><br><span class="line">    response.addHeader(<span class="string">"Content-Disposition"</span>,	<span class="string">"attachment;filename=\""</span> + <span class="keyword">new</span> String(name.getBytes(<span class="string">"UTF-8"</span>), <span class="string">"ISO-8859-1"</span>));</span><br><span class="line">    </span><br><span class="line">    OutputStream outputStream = response.getOutputStream();</span><br><span class="line">    </span><br><span class="line">    List&lt;List&lt;UserUrlVO&gt;&gt; list = <span class="keyword">this</span>.commonalityService.batchCommonsQuery(file, outputStream);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>service 代码</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exportExcel</span><span class="params">(List&lt;List&lt;T&gt;&gt; list, List&lt;String&gt; sheetName, String[] header, OutputStream out)</span> </span>&#123;</span><br><span class="line">  HSSFWorkbook workbook = <span class="keyword">new</span> HSSFWorkbook();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">      <span class="comment">// sheet页名</span></span><br><span class="line">      HSSFSheet sheet = workbook.createSheet(sheetName.get(i));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// list内容</span></span><br><span class="line">      List&lt;T&gt; values = list.get(i);</span><br><span class="line">      HSSFRow row;<span class="comment">// = sheet.createRow(values.size());</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置行标题(Excel第一行)</span></span><br><span class="line">      row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> h = <span class="number">0</span>; h &lt; header.length; h++) &#123;</span><br><span class="line">        row.createCell(h).setCellValue(header[h]);</span><br><span class="line">        sheet.autoSizeColumn(h, <span class="keyword">true</span>);</span><br><span class="line">        sheet.setColumnWidth(h, sheet.getColumnWidth(h) * <span class="number">17</span> / <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 写入行 —— 单元格</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; values.size(); j++) &#123;</span><br><span class="line">        row = sheet.createRow(j + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        Object object = values.get(j);</span><br><span class="line">        <span class="comment">// 遍历实体类属性</span></span><br><span class="line">        Field[] fields = object.getClass().getDeclaredFields();</span><br><span class="line">        <span class="comment">// 单元格内容</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; fields.length; k++) &#123;</span><br><span class="line">          Field field = fields[k];</span><br><span class="line">          field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">          row.createCell(k).setCellValue(field.get(object).toString());</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 响应下载</span></span><br><span class="line">    workbook.write(out);</span><br><span class="line">    out.close();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      out.flush();</span><br><span class="line">      out.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="将文件保存到服务器-提供返回下载路径"><a href="#将文件保存到服务器-提供返回下载路径" class="headerlink" title="将文件保存到服务器,提供返回下载路径"></a>将文件保存到服务器,提供返回下载路径</h2><blockquote>
<p>controller 代码</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@RequestMapping</span>(value = <span class="string">"downloadFile"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadFile</span><span class="params">(@RequestParam(value = <span class="string">"filepath"</span>, required = <span class="keyword">true</span>)</span> String filePath,HttpServletResponse response) </span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.commonalityService.downloadFile(filePath, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>service 代码</p>
</blockquote>
<ol>
<li>将文件写入本地</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">static</span> String EXCEL_PATH = System.getProperty(<span class="string">"os.name"</span>).toLowerCase().startsWith(<span class="string">"win"</span>) ? <span class="string">"D:\\fileupload\\excel\\"</span> : <span class="string">"/root/commonality"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将文件写入本地</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeExcel</span><span class="params">(List&lt;List&lt;T&gt;&gt; list, List&lt;String&gt; sheetName, String[] header, String fileName)</span> </span>&#123;</span><br><span class="line">    HSSFWorkbook workbook = <span class="keyword">new</span> HSSFWorkbook();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        <span class="comment">// sheet页名</span></span><br><span class="line">        HSSFSheet sheet = workbook.createSheet(sheetName.get(i));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// list内容</span></span><br><span class="line">        List&lt;T&gt; values = list.get(i);</span><br><span class="line">        HSSFRow row;<span class="comment">// = sheet.createRow(values.size());</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置行标题(Excel第一行)</span></span><br><span class="line">        row = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> h = <span class="number">0</span>; h &lt; header.length; h++) &#123;</span><br><span class="line">          row.createCell(h).setCellValue(header[h]);</span><br><span class="line">          sheet.autoSizeColumn(h, <span class="keyword">true</span>);</span><br><span class="line">          sheet.setColumnWidth(h, sheet.getColumnWidth(h) * <span class="number">17</span> / <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 写入行 —— 单元格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; values.size(); j++) &#123;</span><br><span class="line">          row = sheet.createRow(j + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">          Object object = values.get(j);</span><br><span class="line">          <span class="comment">// 遍历实体类属性</span></span><br><span class="line">          Field[] fields = object.getClass().getDeclaredFields();</span><br><span class="line">          <span class="comment">// 单元格内容</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; fields.length; k++) &#123;</span><br><span class="line">            Field field = fields[k];</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            row.createCell(k).setCellValue(field.get(object).toString());</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 判断文件夹目录是否存在,不存在则创建</span></span><br><span class="line">      File file = <span class="keyword">new</span> File(EXCEL_PATH);</span><br><span class="line">      <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">        <span class="comment">// 创建的是多级目录,file.mkdir(); 只能创建一级目录</span></span><br><span class="line">        file.mkdirs();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 生成文件保存到服务器</span></span><br><span class="line">      String path = EXCEL_PATH + fileName;</span><br><span class="line">      FileOutputStream stream = <span class="keyword">new</span> FileOutputStream(path);</span><br><span class="line">      workbook.write(stream);</span><br><span class="line">      stream.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>下载文件</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadFile</span><span class="params">(String filePath, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">	OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">	FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		response.setContentType(<span class="string">"application/octet-stream"</span>);</span><br><span class="line">		response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">		response.addHeader(<span class="string">"Content-Disposition"</span>,</span><br><span class="line">				<span class="string">"attachment;filename=\""</span> + <span class="keyword">new</span> String(filePath.getBytes(<span class="string">"UTF-8"</span>), <span class="string">"ISO-8859-1"</span>));</span><br><span class="line"></span><br><span class="line">		outputStream = response.getOutputStream();</span><br><span class="line">		fis = <span class="keyword">new</span> FileInputStream(EXCEL_PATH + filePath);</span><br><span class="line">		<span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">		<span class="keyword">int</span> lengtth = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span> ((lengtth = fis.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">			outputStream.write(bytes, <span class="number">0</span>, lengtth);</span><br><span class="line">		&#125;</span><br><span class="line">		outputStream.flush();</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (outputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">				outputStream.close();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (fis != <span class="keyword">null</span>) &#123;</span><br><span class="line">				fis.close();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>公共方法  </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// @描述：是否是2003的excel，返回true是2003</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isExcel2003</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> filePath.matches(<span class="string">"^.+\\.(?i)(xls)$"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @描述：是否是2007的excel，返回true是2007</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isExcel2007</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> filePath.matches(<span class="string">"^.+\\.(?i)(xlsx)$"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">getCellFormatValue</span><span class="params">(Cell cell)</span> </span>&#123;</span><br><span class="line">  Object cellValue = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (cell != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (cell.getCellType()) &#123;</span><br><span class="line">    <span class="keyword">case</span> Cell.CELL_TYPE_NUMERIC:</span><br><span class="line">      cellValue = NumberToTextConverter.toText(cell.getNumericCellValue());</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Cell.CELL_TYPE_STRING:</span><br><span class="line">      cellValue = cell.getRichStringCellValue().getString().trim();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      cellValue = <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    cellValue = <span class="string">""</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> cellValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Java打印log</title>
    <url>/Blog/Java/Java%E6%89%93%E5%8D%B0log/</url>
    <content><![CDATA[<p>初学Java时的Log<br><a id="more"></a></p>
<h1 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h1><blockquote>
<p>代码块</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: multiplicationTable</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 九九乘法表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ReturnType</span>: void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">multiplicationTable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 乘法表</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">			System.out.print(j + <span class="string">" * "</span> + i + <span class="string">" = "</span> + (i * j) + <span class="string">"\t"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出结果</p>
</blockquote>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">2</span> = <span class="number">2</span>	<span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">3</span> = <span class="number">3</span>	<span class="number">2</span> * <span class="number">3</span> = <span class="number">6</span>	<span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">4</span> = <span class="number">4</span>	<span class="number">2</span> * <span class="number">4</span> = <span class="number">8</span>	<span class="number">3</span> * <span class="number">4</span> = <span class="number">12</span>	<span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">5</span> = <span class="number">5</span>	<span class="number">2</span> * <span class="number">5</span> = <span class="number">10</span>	<span class="number">3</span> * <span class="number">5</span> = <span class="number">15</span>	<span class="number">4</span> * <span class="number">5</span> = <span class="number">20</span>	<span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">6</span> = <span class="number">6</span>	<span class="number">2</span> * <span class="number">6</span> = <span class="number">12</span>	<span class="number">3</span> * <span class="number">6</span> = <span class="number">18</span>	<span class="number">4</span> * <span class="number">6</span> = <span class="number">24</span>	<span class="number">5</span> * <span class="number">6</span> = <span class="number">30</span>	<span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">7</span> = <span class="number">7</span>	<span class="number">2</span> * <span class="number">7</span> = <span class="number">14</span>	<span class="number">3</span> * <span class="number">7</span> = <span class="number">21</span>	<span class="number">4</span> * <span class="number">7</span> = <span class="number">28</span>	<span class="number">5</span> * <span class="number">7</span> = <span class="number">35</span>	<span class="number">6</span> * <span class="number">7</span> = <span class="number">42</span>	<span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">8</span> = <span class="number">8</span>	<span class="number">2</span> * <span class="number">8</span> = <span class="number">16</span>	<span class="number">3</span> * <span class="number">8</span> = <span class="number">24</span>	<span class="number">4</span> * <span class="number">8</span> = <span class="number">32</span>	<span class="number">5</span> * <span class="number">8</span> = <span class="number">40</span>	<span class="number">6</span> * <span class="number">8</span> = <span class="number">48</span>	<span class="number">7</span> * <span class="number">8</span> = <span class="number">56</span>	<span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span>	</span><br><span class="line"><span class="number">1</span> * <span class="number">9</span> = <span class="number">9</span>	<span class="number">2</span> * <span class="number">9</span> = <span class="number">18</span>	<span class="number">3</span> * <span class="number">9</span> = <span class="number">27</span>	<span class="number">4</span> * <span class="number">9</span> = <span class="number">36</span>	<span class="number">5</span> * <span class="number">9</span> = <span class="number">45</span>	<span class="number">6</span> * <span class="number">9</span> = <span class="number">54</span>	<span class="number">7</span> * <span class="number">9</span> = <span class="number">63</span>	<span class="number">8</span> * <span class="number">9</span> = <span class="number">72</span>	<span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure>
<h1 id="直角三角形"><a href="#直角三角形" class="headerlink" title="直角三角形"></a>直角三角形</h1><blockquote>
<p>代码块</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: rightAngle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 直角三角形</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> side</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ReturnType</span>: void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">rightTriangle</span><span class="params">(<span class="keyword">int</span> side)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 直角三角形10</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= side; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">			System.out.print(<span class="string">"*"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出结果</p>
</blockquote>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br><span class="line">******</span><br><span class="line">*******</span><br><span class="line">********</span><br><span class="line">*********</span><br><span class="line">**********</span><br></pre></td></tr></table></figure>
<h1 id="镂空直角三角形"><a href="#镂空直角三角形" class="headerlink" title="镂空直角三角形"></a>镂空直角三角形</h1><blockquote>
<p>代码块</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: hollowrightTriangle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 镂空直角三角形</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> side</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ReturnType</span>: void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">hollowRightTriangle</span><span class="params">(<span class="keyword">int</span> side)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= side; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">			<span class="keyword">if</span> (j == <span class="number">1</span> || j == i &amp;&amp; i != side) &#123;</span><br><span class="line">				System.out.print(<span class="string">"*"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (i == side) &#123;</span><br><span class="line">				System.out.print(<span class="string">"*"</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				System.out.print(<span class="string">" "</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出结果</p>
</blockquote>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">* </span><br><span class="line">* * </span><br><span class="line">*  * </span><br><span class="line">*   * </span><br><span class="line">*    * </span><br><span class="line">*     * </span><br><span class="line">*      * </span><br><span class="line">*       * </span><br><span class="line">*        * </span><br><span class="line">***********</span><br></pre></td></tr></table></figure>
<h1 id="平行四边形"><a href="#平行四边形" class="headerlink" title="平行四边形"></a>平行四边形</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: Parallelogram</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 平行四边形</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> side</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ReturnType</span>: void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parallelogram</span><span class="params">(<span class="keyword">int</span> side)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; side; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; side; j++) &#123;</span><br><span class="line">			System.out.print(<span class="string">" "</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = side; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">			System.out.print(<span class="string">"*"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出结果</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">         **********</span><br><span class="line">        **********</span><br><span class="line">       **********</span><br><span class="line">      **********</span><br><span class="line">     **********</span><br><span class="line">    **********</span><br><span class="line">   **********</span><br><span class="line">  **********</span><br><span class="line"> **********</span><br><span class="line">**********</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>print</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 获取 自定义时间格式时间、上周(周一、周日)、上个月(第一天、最后一天)</title>
    <url>/blog/Java/Java%E6%97%A5%E6%9C%9F%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[Java 获取 自定义时间格式时间、上周(周一、周日)、上个月(第一天、最后一天)
<a id="more"></a>
<h1 id="获取时间格式工具类"><a href="#获取时间格式工具类" class="headerlink" title="获取时间格式工具类"></a>获取时间格式工具类</h1><h2 id="获取当前时间格式的时间"><a href="#获取当前时间格式的时间" class="headerlink" title="获取当前时间格式的时间"></a>获取当前时间格式的时间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Title</span>: yyyyMMddCurrentDay</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Description</span>: 获取当前时间为 yyyyMMdd 格式的时间</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">yyyyMMddCurrentDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> getCurrentDate(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> formatStr 格式化样式 例如： yyyyMMdd/yyyyMMddHH/yyyyMMddHHmm</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Title</span>: getCurrentDay</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Description</span>: 获取自定义格式的 Date 字符串</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentDate</span><span class="params">(String formatStr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(formatStr);</span><br><span class="line">	Long today = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> format.format(today);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="当前日期多少天前的时间"><a href="#当前日期多少天前的时间" class="headerlink" title="当前日期多少天前的时间"></a>当前日期多少天前的时间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getBeforeDay</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取自定义格式的 ; 多天前时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> before ：多少天之前,例如：3</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> formatStr:时间格式</span></span><br><span class="line"><span class="comment"> * 	 例如： yyyyMMdd | yyyyMMddHH | yyyyMMddHHmm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getBeforeDay</span><span class="params">(<span class="keyword">int</span> before, String formatStr)</span> </span>&#123;</span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line">	calendar.add(Calendar.DATE, -before);</span><br><span class="line">	SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(formatStr);</span><br><span class="line">	<span class="keyword">return</span> format.format(calendar.getTime());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取当前三天前时间"><a href="#获取当前三天前时间" class="headerlink" title="获取当前三天前时间"></a>获取当前三天前时间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getBefore3Day</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取 三天前的时间： 例如： 当前时间为：2018/11/07;.获取的三天前时间为 20181105</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getBefore3Day</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> getBeforeDay(<span class="number">3</span>, <span class="string">"yyyyMMdd"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取昨天的时间"><a href="#获取昨天的时间" class="headerlink" title="获取昨天的时间"></a>获取昨天的时间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getBeforeDay</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 昨天的日期</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getBeforeDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> getBeforeDay(<span class="number">1</span>, <span class="string">"yyyyMMdd"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取当前日期-指定日期的-上周-周一、周日-时间-List"><a href="#获取当前日期-指定日期的-上周-周一、周日-时间-List" class="headerlink" title="获取当前日期/指定日期的 上周(周一、周日) 时间     List"></a>获取当前日期/指定日期的 上周(周一、周日) 时间     List<string></string></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getLastWeekMondayAndSunday</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取指定日期的 上周:周一、周日 时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date 指定日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * List&lt;String&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getLastWeekMondayAndSunday</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">	List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">	SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获取指定日期的 上个星期周一、周日时间</span></span><br><span class="line">	<span class="keyword">if</span> (date != <span class="keyword">null</span>) &#123;</span><br><span class="line">		calendar.setTime(date);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 一周七天</span></span><br><span class="line">	calendar.add(Calendar.DAY_OF_WEEK, -<span class="number">7</span>);</span><br><span class="line">	<span class="comment">// 设置每周第一天为 周一</span></span><br><span class="line">	calendar.setFirstDayOfWeek(Calendar.MONDAY);</span><br><span class="line"></span><br><span class="line">	calendar.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);</span><br><span class="line">	String monday = df.format(calendar.getTime());</span><br><span class="line">	list.add(monday);</span><br><span class="line"></span><br><span class="line">	calendar.set(Calendar.DAY_OF_WEEK, Calendar.SUNDAY);</span><br><span class="line">	String sunday = df.format(calendar.getTime());</span><br><span class="line">	list.add(sunday);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getLastWeekMondayAndSunday</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取当前时间,上周：周一、周日时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * List&lt;String&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getLastWeekMondayAndSunday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">	SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 一周七天</span></span><br><span class="line">	calendar.add(Calendar.DAY_OF_WEEK, -<span class="number">7</span>);</span><br><span class="line">	<span class="comment">// 设置每周第一天为 周一</span></span><br><span class="line">	calendar.setFirstDayOfWeek(Calendar.MONDAY);</span><br><span class="line"></span><br><span class="line">	calendar.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);</span><br><span class="line">	String monday = df.format(calendar.getTime());</span><br><span class="line">	list.add(monday);</span><br><span class="line"></span><br><span class="line">	calendar.set(Calendar.DAY_OF_WEEK, Calendar.SUNDAY);</span><br><span class="line">	String sunday = df.format(calendar.getTime());</span><br><span class="line">	list.add(sunday);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取当前-指定日期的-上个月-第一天、最后一天-时间-List"><a href="#获取当前-指定日期的-上个月-第一天、最后一天-时间-List" class="headerlink" title="获取当前/指定日期的 上个月(第一天、最后一天) 时间 List"></a>获取当前/指定日期的 上个月(第一天、最后一天) 时间 List<string></string></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getLastMonthFirstDayAndLastDay</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取当前时间,上个月:第一天、最后一天</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * List&lt;String&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getLastMonthFirstDayAndLastDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">	<span class="comment">// 时间格式</span></span><br><span class="line">	SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 上个月的最后一天</span></span><br><span class="line">	calendar.set(Calendar.DAY_OF_MONTH, <span class="number">0</span>);</span><br><span class="line">	String lastDay = df.format(calendar.getTime());</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 上个月的第一天</span></span><br><span class="line">	calendar.set(Calendar.DAY_OF_MONTH, <span class="number">1</span>);</span><br><span class="line">	String firstDay = df.format(calendar.getTime());</span><br><span class="line"></span><br><span class="line">	list.add(firstDay);</span><br><span class="line">	list.add(lastDay);</span><br><span class="line">	<span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getLastMonthFirstDayAndLastDay</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取指定日期,上个月:第一天、最后一天</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date	</span></span><br><span class="line"><span class="comment"> * 	指定日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * List&lt;String&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getLastMonthFirstDayAndLastDay</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">	List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">	<span class="comment">// 时间格式</span></span><br><span class="line">	SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line">	calendar.setTime(date);</span><br><span class="line">	<span class="comment">// 上个月的最后一天</span></span><br><span class="line">	calendar.set(Calendar.DAY_OF_MONTH, <span class="number">0</span>);</span><br><span class="line">	String lastDay = df.format(calendar.getTime());</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 上个月的第一天</span></span><br><span class="line">	calendar.set(Calendar.DAY_OF_MONTH, <span class="number">1</span>);</span><br><span class="line">	String firstDay = df.format(calendar.getTime());</span><br><span class="line"></span><br><span class="line">	list.add(firstDay);</span><br><span class="line">	list.add(lastDay);</span><br><span class="line">	<span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取当前日期-0时0分0秒-时间"><a href="#获取当前日期-0时0分0秒-时间" class="headerlink" title="获取当前日期 0时0分0秒 时间"></a>获取当前日期 0时0分0秒 时间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: todayZero</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取当前日期0时0分0秒时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> formartStr(时间格式:yyyyMMdd等)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTodayZero</span><span class="params">(String formartStr)</span> </span>&#123;</span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line">	calendar.setTime(<span class="keyword">new</span> Date());</span><br><span class="line">	calendar.set(Calendar.HOUR_OF_DAY, <span class="number">0</span>);</span><br><span class="line">	calendar.set(Calendar.MINUTE, <span class="number">0</span>);</span><br><span class="line">	calendar.set(Calendar.SECOND, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(formartStr);</span><br><span class="line">	<span class="keyword">return</span> format.format(calendar.getTime());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="指定日期的N天之后的日期"><a href="#指定日期的N天之后的日期" class="headerlink" title="指定日期的N天之后的日期"></a>指定日期的N天之后的日期</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getAfterMonth</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获取N天之后日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> number</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * Long</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getAfterDay</span><span class="params">(Date date, <span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line">	calendar.setTime(date);</span><br><span class="line">	calendar.add(Calendar.DATE, number);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> calendar.getTime();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取上个月月份"><a href="#获取上个月月份" class="headerlink" title="获取上个月月份"></a>获取上个月月份</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getLastMonth</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 上个月月份</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getLastMonth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMM"</span>);</span><br><span class="line">	Calendar calendar = Calendar.getInstance();</span><br><span class="line">	calendar.add(Calendar.MONTH, -<span class="number">1</span>);</span><br><span class="line">	String month = sdf.format(calendar.getTime());</span><br><span class="line">	<span class="keyword">return</span> month;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Calendar</tag>
        <tag>Date</tag>
      </tags>
  </entry>
  <entry>
    <title>Java操作Linux</title>
    <url>/blog/Java/Java%E6%93%8D%E4%BD%9CLinux/</url>
    <content><![CDATA[Java操作Linux
<a id="more"></a>
<h1 id="Java操作Linux"><a href="#Java操作Linux" class="headerlink" title="Java操作Linux"></a><code>Java</code>操作<code>Linux</code></h1><h3 id="使用java-lang-Runtime操作运行脚本"><a href="#使用java-lang-Runtime操作运行脚本" class="headerlink" title="使用java.lang.Runtime操作运行脚本"></a>使用<code>java.lang.Runtime</code>操作运行脚本</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@Title</span> callCloseCommand</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@Description</span> 执行关闭程序脚本</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callCloseCommand</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  String command = <span class="string">"./server.sh stop"</span>;</span><br><span class="line">  log.error(<span class="string">"高德地理编码API失效,请更新IP地址"</span>, command);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    Runtime.getRuntime().exec(command);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    log.error(<span class="string">"Linux 命令执行错误,&#123;&#125;"</span>, command);</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>注: 也可以根据实际情况调整<code>command</code>内容,更改<code>linux</code>语句。例如:<code>./server.sh restart</code></li>
</ul>
]]></content>
      <categories>
        <category>blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java设计模式</title>
    <url>/Blog/Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<p>设计模式代表有经验的面向对象软件开发人员使用的最佳实践。设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是由许多软件开发人员在相当长的时间内通过试错获得的。设计模式的目的是为了让软件具有更好的代码重用性、可读性、可扩展性、可靠性,同时使程序实现高内聚、低耦合。<br><a id="more"></a></p>
<h2 id="模式类型"><a href="#模式类型" class="headerlink" title="模式类型"></a>模式类型</h2><ul>
<li>在《设计模式-可重用的面向对象软件元素》一书中,阐明一共有<code>23</code>中设计模式。按三类可分为:创造型模式(Creational Patterns)、结构型模式(Structural Patterns)、行为型模式(Behavioral Patterns)。其中还有另一类设计模式: J2EE设计模式。</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>分类名称</th>
<th>说明</th>
<th>包括</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>创造型模式</td>
<td>创造模式提供了一种创建对象而隐藏创建逻辑的方法,并不是直接使用<code>new</code>实例化对象。<br>使程序在决定对于给定的用例需要创建哪些对象时具有更大的灵活性</td>
<td>工厂模式(Factory Pattern) <br>抽象工厂模式(Abstract Factory Pattern) <br> 单例模式(Singleton Pattern)<br> 建造者模式(Builder Pattern) <br>原型模式(Prototype Pattern)</td>
</tr>
<tr>
<td>2</td>
<td>结构型模式</td>
<td>结构型模式关注类和对象的组合。<br>集成的概念被用来组合接口和定义组合对象获得新的功能</td>
<td>适配器模式(Adapter Pattern)<br> 桥接模式(Bridge Pattern)<br>过滤器模式(Filter、Criteria Pattern)<br>组合模式(Composite Pattern)<br>装饰器模式(Decorator Pattern)<br>外观模式(Facade Pattern)<br>享元模式(Flyweight Pattern)<br>代理模式(Proxy Pattern)</td>
</tr>
<tr>
<td>3</td>
<td>行为型模式</td>
<td>行为型模式特别关注对象之间的通信</td>
<td>责任链模式(Chain of Responsibility Pattern)<br>命令模式(Command Pattern)<br>解释器模式(Interpreter Pattern)<br>迭代器模式(Iterator Pattern)<br>中介者模式(Mediator Pattern)<br>备忘录模式(Memento Pattern)<br>观察者模式(Observer Pattern)<br>状态模式(State Pattern)<br>空对象模式(Null Object Pattern)<br>策略模式(Strategy Pattern)<br>模板模式(Template Pattern)<br>访问者模式(Visitor Pattern)<br></td>
</tr>
<tr>
<td>4</td>
<td>J2EE模式</td>
<td>J2EE模式特别关注表示层,是由Sun Java Center 鉴定的。</td>
<td>MVC模式(MVC Pattern)<br>业务代表模式(Business Delegate Pattern)<br>组合实体模式(Composite Entity Pattern)<br>数据访问对象模式(Data Access Object Pattern)<br>前端控制器模式(Front Controller Pattern)<br>拦截过滤器模式(Intercepting Filter Pattern)<br>服务定位器模式(Service Locator Pattern)<br>传输对象模式(Transfer Object Pattern)</td>
</tr>
</tbody>
</table>
<h2 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h2><ul>
<li>提倡<code>Design Pattern</code>原因: 实现代码复用,增加可维护性。</li>
</ul>
<blockquote>
<p>单一职责原则(Single Responsibility Principle SRP)</p>
</blockquote>
<p>注: 详细解释参照百科<a href="https://baike.baidu.com/item/单一职责原则" target="_blank">单一职责原则</a></p>
<ul>
<li>说明: 单一职责原则又称单一功能原则,面向对象五个基本原则(SOLID)之一。</li>
<li>定义: 一个类,只有一个引起它变化的原因。</li>
<li>解释: 所谓职责就是指类变化的原因。如果一个类有多余一个的动机被改变,那么这个类就具有多余一个的职责。而单一职责原则就是指一个类应该有且仅有一个改变的原因。</li>
<li>解决的问题:<ul>
<li>降低类的复杂度</li>
<li>提高类的可读性,提高系统的可维护性</li>
<li>降低变更引起的风险(降低对其他功能的影响)</li>
</ul>
</li>
</ul>
<blockquote>
<p>开闭原则(Open Close Principle OCP)</p>
</blockquote>
<ul>
<li>说明: 在面向对象编程领域中，开闭原则规定<code>软件中的对象(类、模块、函数等)应该对于扩展是开放的,但是对于修改时封闭的。</code></li>
<li>解释: 在程序需要进行扩展的时候,不能去修改原有的代码,实现一个热插拔的效果。简言之,是为了是程序的扩展性好,易于维护和升级。</li>
<li>实现:</li>
</ul>
<blockquote>
<p>里氏代换原则(Liskov Substitution Principle LSP)</p>
</blockquote>
<ul>
<li>定义: 任何基类可以出现的地方,子类一定可以出现。</li>
<li>解释:<br>LSP是继承复用的基石,只有当衍生类可以替换掉基类,软件单位的功能不受到影响时,基类才能真正被复用,而衍生类也能够给在基类的基础上增加新的行为。里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</li>
<li>解决的问题:<ul>
<li>增强程序的健壮性,版本升级时也可以保持非常好的兼容性</li>
<li>提高代码复用率</li>
</ul>
</li>
</ul>
<blockquote>
<p>依赖倒转原则(Dependence Inversion Principle DIP)</p>
</blockquote>
<blockquote>
<p>接口隔离原则(Interface Segregation Principle ISP)</p>
</blockquote>
<blockquote>
<p>合成/聚合复用原则(Composite/Aggregate Reuse Principle CARP)</p>
</blockquote>
<blockquote>
<p>最小知识原则(Principle of Least Knowledge PLK,迪米特法则)</p>
</blockquote>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Ext4.2.4上传文件</title>
    <url>/Blog/Ext/Ext4.2.4%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>使用<code>Ext 4.2.4</code>版本导入<code>.xls、xlsx</code>文件内容到数据库<br><a id="more"></a></p>
<h1 id="页面内容"><a href="#页面内容" class="headerlink" title="页面内容"></a>页面内容</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="js-内容"><a href="#js-内容" class="headerlink" title="js 内容"></a>js 内容</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Ext.onReady(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  Ext.create(<span class="string">'Ext.window.Window'</span>, &#123;</span><br><span class="line">      id: <span class="string">"importInfo"</span>,</span><br><span class="line">      title: <span class="string">"导入广告平台用户"</span>,</span><br><span class="line">      autoShow: <span class="literal">true</span>,</span><br><span class="line">      modal: <span class="literal">true</span>,</span><br><span class="line">      constrainHeader: <span class="literal">true</span>,</span><br><span class="line">      resizable: <span class="literal">false</span>,</span><br><span class="line">      height: <span class="number">250</span>,</span><br><span class="line">      width: <span class="number">550</span>,</span><br><span class="line">      layout: <span class="string">"fit"</span>,</span><br><span class="line">      items: [&#123;</span><br><span class="line">          xtype: <span class="string">'form'</span>,</span><br><span class="line">          width: <span class="number">400</span>,</span><br><span class="line">          bodyPadding: <span class="number">10</span>,</span><br><span class="line">          items: [&#123;</span><br><span class="line">              xtype: <span class="string">'filefield'</span>,</span><br><span class="line">              name: <span class="string">'file'</span>,</span><br><span class="line">              fieldLabel: <span class="string">'文件上传'</span>,</span><br><span class="line">              labelWidth: <span class="number">80</span>,</span><br><span class="line">              msgTarget: <span class="string">'side'</span>,</span><br><span class="line">              allowBlank: <span class="literal">false</span>,</span><br><span class="line">              anchor: <span class="string">'100%'</span>,</span><br><span class="line">              buttonText: <span class="string">'选择文件'</span></span><br><span class="line">          &#125;],</span><br><span class="line">          buttons: [&#123;</span><br><span class="line">              text: <span class="string">'上传'</span>,</span><br><span class="line">              handler: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">var</span> form = <span class="keyword">this</span>.up(<span class="string">'form'</span>).getForm();</span><br><span class="line">                  <span class="keyword">if</span> (form.isValid()) &#123;</span><br><span class="line">                        form.submit(&#123;</span><br><span class="line">                            url: <span class="string">'../user/importADInformation.do'</span>,</span><br><span class="line">                            method: <span class="string">'POST'</span>,</span><br><span class="line">                            waitMsg: <span class="string">'文件正在上传'</span>,</span><br><span class="line">                            success: <span class="function"><span class="keyword">function</span> (<span class="params">form, action</span>) </span>&#123;</span><br><span class="line">                            Ext.Msg.alert(<span class="string">'Success'</span>, <span class="string">'广告用户信息导入成功'</span>);</span><br><span class="line">                              Ext.getCmp(<span class="string">"importInfo"</span>).close();</span><br><span class="line">                            &#125;,</span><br><span class="line">                            failure: <span class="function"><span class="keyword">function</span>(<span class="params">form, action</span>)</span>&#123;</span><br><span class="line">                            <span class="keyword">var</span> result = Ext.JSON.decode(action.response.responseText)</span><br><span class="line">                            Ext.Msg.alert(<span class="string">'Failed'</span>, result.msg);</span><br><span class="line">                              Ext.getCmp(<span class="string">"importInfo"</span>).close();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;]</span><br><span class="line">      &#125;]</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="Java-后端代码"><a href="#Java-后端代码" class="headerlink" title="Java 后端代码"></a>Java 后端代码</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--top</span><br><span class="line">  |</span><br><span class="line">  --Controller</span><br><span class="line">      |</span><br><span class="line">      ---AdvertisingController</span><br><span class="line">  |</span><br><span class="line">  --Repository</span><br><span class="line">        |</span><br><span class="line">        ---AdvertisingUserDao</span><br><span class="line">  |</span><br><span class="line">  --Entity</span><br><span class="line">      |</span><br><span class="line">      ---AdvertisingEntity</span><br><span class="line">      ---AdvertisingModel</span><br><span class="line">  |</span><br><span class="line">  --listeners</span><br><span class="line">      |</span><br><span class="line">      ---ImportAdvertisingUserExcelListener</span><br></pre></td></tr></table></figure>
<h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"importADInformation"</span>, consumes = <span class="string">"multipart/*"</span>, headers = <span class="string">"content-type=multipart/form-data"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="meta">@MethodLog</span>(remark = <span class="string">"批量导入用户数据"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">synchronizationInformation</span><span class="params">(@RequestParam(value = <span class="string">"file"</span>, required = <span class="keyword">false</span>)</span> MultipartFile file) </span>&#123;</span><br><span class="line">  Map&lt;String, Object&gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  result.put(<span class="string">"success"</span>, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 获取Excel 内容,将Excel转换为List</span></span><br><span class="line">  InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    inputStream = <span class="keyword">new</span> BufferedInputStream(file.getInputStream());</span><br><span class="line">    <span class="comment">// 引用 easyexcel jar 代码地址：https://github.com/alibaba/easyexcel/</span></span><br><span class="line">    <span class="comment">// 使用 EasyExcel 读取 excel 文件内容,将 excel 转为 List&lt;Object&gt;</span></span><br><span class="line">    ImportAdvertisingUserExcelListener excelListener = <span class="keyword">new</span> ImportAdvertisingUserExcelListener();</span><br><span class="line">    <span class="comment">// 读excel数据,返回List&lt;Object&gt;.将 地址信息转为 50m 栅格编码,并将结果返回</span></span><br><span class="line">    EasyExcelFactory.readBySax(inputStream, <span class="keyword">new</span> Sheet(<span class="number">1</span>, <span class="number">1</span>, AdvertisingModel.class), excelListener);</span><br><span class="line">    List&lt;Object&gt; data = excelListener.getData();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 获取入库的List</span></span><br><span class="line">    List&lt;AdvertisingEntity&gt; list = JSONArray.parseArray(JSONObject.toJSONString(data), AdvertisingEntity.class);</span><br><span class="line">    System.out.println(JSONObject.toJSONString(list));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.advertisingUserDao.batchSave(list);</span><br><span class="line"></span><br><span class="line">    result.put(<span class="string">"success"</span>, <span class="keyword">true</span>);</span><br><span class="line">    result.put(<span class="string">"msg"</span>, <span class="string">"数据导入成功"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (IllegalArgumentException GDException) &#123;</span><br><span class="line">    result.put(<span class="string">"msg"</span>, <span class="string">"文件格式错误"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    result.put(<span class="string">"msg"</span>, <span class="string">"IO异常"</span>);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      inputStream.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      result.put(<span class="string">"msg"</span>, <span class="string">"IO异常"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      result.put(<span class="string">"msg"</span>, <span class="string">"文件类型错误(应为*.xls或*.xlsx)"</span>);</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchSave</span><span class="params">(List&lt;AdvertisingEntity&gt; list)</span> </span>&#123;</span><br><span class="line">  Session session = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    session = <span class="keyword">this</span>.getSession();</span><br><span class="line">    Transaction transaction = session.beginTransaction();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">      AdvertisingEntity adverst = list.get(i);</span><br><span class="line">      session.saveOrUpdate(adverst);</span><br><span class="line">      <span class="keyword">if</span> (i % <span class="number">100</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        session.flush();</span><br><span class="line">        session.clear();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    transaction.commit();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    session.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
        <category>Ext</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Ext 4.2.4</tag>
      </tags>
  </entry>
  <entry>
    <title>遍历 Java 实体类属性及值</title>
    <url>/blog/Java/Java%E9%81%8D%E5%8E%86%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[遍历 Java 实体类属性及值
<a id="more"></a>
<h1 id="遍历Java实体类属性及值"><a href="#遍历Java实体类属性及值" class="headerlink" title="遍历Java实体类属性及值"></a>遍历<code>Java</code>实体类属性及值</h1><blockquote>
<p>核心代码    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(HcodeRepository.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getPostParams</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 将实体类clazz的属性转换为url参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> clazz	参数实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getPostParams</span><span class="params">(Object clazz)</span> </span>&#123;</span><br><span class="line">	Field[] fields = clazz.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">	StringBuilder requestURL = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">		String property, value;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fields.length; i++) &#123;</span><br><span class="line">			Field field = fields[i];</span><br><span class="line">			<span class="comment">// 允许访问私有变量</span></span><br><span class="line">			field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 属性名</span></span><br><span class="line">			property = field.getName();</span><br><span class="line">			<span class="comment">// 属性值</span></span><br><span class="line">			value = field.get(clazz).toString();</span><br><span class="line"></span><br><span class="line">			System.out.println(property+<span class="string">":"</span>+value);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		logger.error(<span class="string">"用户播放轨迹查询Qos 日志失败,参数为："</span> + clazz.toString());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> requestURL.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>示例    </p>
</blockquote>
<p>将查询参数封装为<code>url</code><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(HcodeRepository.class);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: getPostParams</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 将实体类clazz的属性转换为url参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> clazz	参数实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getPostParams</span><span class="params">(Object clazz)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 遍历属性类、属性值</span></span><br><span class="line">	Field[] fields = clazz.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">	StringBuilder requestURL = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">		String property, value;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fields.length; i++) &#123;</span><br><span class="line">			Field field = fields[i];</span><br><span class="line">			<span class="comment">// 允许访问私有变量</span></span><br><span class="line">			field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 属性名</span></span><br><span class="line">			property = field.getName();</span><br><span class="line">			<span class="comment">// 属性值</span></span><br><span class="line">			value = field.get(clazz).toString();</span><br><span class="line"></span><br><span class="line">			String params = property + <span class="string">"="</span> + value;</span><br><span class="line">			<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">				requestURL.append(params);</span><br><span class="line">				flag = <span class="keyword">false</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				requestURL.append(<span class="string">"&amp;"</span> + params);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		logger.error(<span class="string">"URL参数为："</span> + clazz.toString());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> requestURL.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="获取父类的属性及属性值"><a href="#获取父类的属性及属性值" class="headerlink" title="获取父类的属性及属性值"></a>获取父类的属性及属性值</h1><p><strong>注:</strong> 以下代码中使用<code>Intellij IDEA</code>并使用了<code>lombok</code>,可以使用<code>get/set</code>替代<code>@Data</code>注解;可以重写<code>toString()</code>方法替代<code>@ToString</code>注解;<br>可以使用构造方法,替代<code>@AllArgsConstructor</code>注解。</p>
<blockquote>
<p><code>TextMailDTO</code>父类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> TextMailDTO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> &lt;br/&gt; 文本邮件实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/11/7 9:56</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextMailDTO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 主题</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String subject;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 文本内容</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String text;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 接收者邮箱</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String receiver;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>info</code>子类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> Info</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> &lt;br/&gt; 信息内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/12/3 10:03</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Info</span> <span class="keyword">extends</span> <span class="title">TextMailDTO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Info</span><span class="params">(String subject, String text, String receiver)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(subject, text, receiver);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Info</span><span class="params">(String subject, String text, String receiver, String description)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(subject, text, receiver);</span><br><span class="line">		<span class="keyword">this</span>.description = description;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>实现获取父类属性及属性值的方法代码块</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  获取父类的属性及属性值方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getAllFields</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	Class clazz = object.getClass();</span><br><span class="line"></span><br><span class="line">	List&lt;Field&gt; fieldList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	<span class="keyword">while</span> (clazz != <span class="keyword">null</span>) &#123;</span><br><span class="line">		Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">		fieldList.addAll(<span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(fields)));</span><br><span class="line">		clazz = clazz.getSuperclass();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	StringBuilder requestURL = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">		String property, value;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fieldList.size(); i++) &#123;</span><br><span class="line">			Field field = fieldList.get(i);</span><br><span class="line">			<span class="comment">// 允许访问私有变量</span></span><br><span class="line">			field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 属性名</span></span><br><span class="line">			property = field.getName();</span><br><span class="line">			<span class="comment">// 属性值</span></span><br><span class="line">			value = field.get(object).toString();</span><br><span class="line"></span><br><span class="line">			log.info(property + <span class="string">":\t &#123;&#125;"</span>, value);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		log.error(<span class="string">"参数为:\t&#123;&#125;"</span>, clazz.toString());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> requestURL.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Entity</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 使用记录</title>
    <url>/Blog/Linux/Linux%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[Linux 使用记录
<a id="more"></a>
<h1 id="Linux-命令使用记录"><a href="#Linux-命令使用记录" class="headerlink" title="Linux 命令使用记录"></a><code>Linux</code> 命令使用记录</h1><h2 id="查看已经在使用的端口"><a href="#查看已经在使用的端口" class="headerlink" title="查看已经在使用的端口"></a>查看已经在使用的端口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -nultp</span><br></pre></td></tr></table></figure>
<h2 id="检查端口是否被占用"><a href="#检查端口是否被占用" class="headerlink" title="检查端口是否被占用"></a>检查端口是否被占用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -anp|grep 7090</span><br></pre></td></tr></table></figure>
<h2 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -rf xx</span><br></pre></td></tr></table></figure>
<h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -f xx.log</span><br></pre></td></tr></table></figure>
<h2 id="查看-tomcat-相关的进程"><a href="#查看-tomcat-相关的进程" class="headerlink" title="查看 tomcat 相关的进程"></a>查看 <code>tomcat</code> 相关的进程</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef|grep tomcat</span><br></pre></td></tr></table></figure>
<h2 id="查看-tomcat-实时输出日志"><a href="#查看-tomcat-实时输出日志" class="headerlink" title="查看 tomcat 实时输出日志"></a>查看 <code>tomcat</code> 实时输出日志</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tail -f /opt/tomcat/logs/catalina.out</span><br></pre></td></tr></table></figure>
<h2 id="查看内存信息"><a href="#查看内存信息" class="headerlink" title="查看内存信息"></a>查看内存信息</h2><p><a href="https://blog.csdn.net/zhangliao613/article/details/79021606" target="_blank">参考地址</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 apache-tomcat-8.0.52]# cat /proc/cpuinfo | grep &apos;physical id&apos; | uniq	-- cpu 个数</span><br><span class="line">physical id	: 0</span><br><span class="line">physical id	: 2</span><br><span class="line">[root@CentOS7 apache-tomcat-8.0.52]# cat /proc/cpuinfo | grep &apos;cpu cores&apos; | uniq	 	-- cpu 核数</span><br><span class="line">cpu cores	: 1</span><br><span class="line">[root@CentOS7 apache-tomcat-8.0.52]# cat /proc/cpuinfo | grep &apos;model name&apos; | uniq		-- cpu 型号</span><br><span class="line">model name	: Intel(R) Xeon(R) CPU E7-4809 v2 @ 1.90GHz</span><br><span class="line">[root@CentOS7 apache-tomcat-8.0.52]#</span><br></pre></td></tr></table></figure>
<h2 id="某个进程-CPU-占用"><a href="#某个进程-CPU-占用" class="headerlink" title="某个进程 CPU 占用"></a>某个进程 CPU 占用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">top -p 8104</span><br></pre></td></tr></table></figure>
<h2 id="Linux-下-Tomcat-开启查看-GC-信息"><a href="#Linux-下-Tomcat-开启查看-GC-信息" class="headerlink" title="Linux 下 Tomcat 开启查看 GC 信息"></a><code>Linux</code> 下 <code>Tomcat</code> 开启查看 <code>GC</code> 信息</h2><blockquote>
<ol>
<li>在 tomcat 的安装目录下,找到 <code>bin/catalina.sh</code>文件    </li>
</ol>
</blockquote>
<ul>
<li>修改前：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_OPTS=&apos;-Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxNewSize=512m -XX:MaxPermSize=512m&apos;</span><br></pre></td></tr></table></figure>
<ul>
<li>修改后：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> create gc log monitor</span><br><span class="line"><span class="meta">#</span> OS specific support.  $var _must_ be set to either true or false.</span><br><span class="line">JAVA_OPTS='-Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxNewSize=512m -XX:MaxPermSize=512m -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -Xloggc:/opt/apache-tomcat-8.0.52/logs/tomcat_gc.log'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> OS specific support.  $var _must_ be set to either true or false.</span><br><span class="line">JAVA_OPTS='-Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxNewSize=512m -XX:MaxPermSize=512m -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC'</span><br></pre></td></tr></table></figure>
<h2 id="Linux-下查看-Tomcat-并发数"><a href="#Linux-下查看-Tomcat-并发数" class="headerlink" title="Linux 下查看 Tomcat 并发数"></a><code>Linux</code> 下查看 <code>Tomcat</code> 并发数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -anp|grep 7090|grep ESTABLISHED -c</span><br></pre></td></tr></table></figure>
<h2 id="统计字符串出现次数"><a href="#统计字符串出现次数" class="headerlink" title="统计字符串出现次数"></a>统计字符串出现次数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat ./logs/error.iptv-meshing.log | grep &apos;parameter error&apos; | wc -l</span><br></pre></td></tr></table></figure>
<h2 id="统计端口TCP连接状态数量"><a href="#统计端口TCP连接状态数量" class="headerlink" title="统计端口TCP连接状态数量"></a>统计端口<code>TCP</code>连接状态数量</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -anp|grep 7090 | grep ESTABLISHED -c</span><br></pre></td></tr></table></figure>
<ul>
<li><code>TCP</code>连接状态</li>
</ul>
<h2 id="导入MySQL数据库数据"><a href="#导入MySQL数据库数据" class="headerlink" title="导入MySQL数据库数据"></a>导入<code>MySQL</code>数据库数据</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">1. 连接mysql</span><br><span class="line">mysql  -u用户名  -p密码</span><br><span class="line">2. 连接你要导入的数据库的名字</span><br><span class="line">mysql&gt; use  数据库名</span><br><span class="line">3. 导入sql文件</span><br><span class="line">mysql&gt; source  /tmp/database.sql;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Jquery 使用日志</title>
    <url>/Blog/JQuery/Jquery%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[Jquery 使用日志
<a id="more"></a>
<h1 id="Jquery-使用笔记"><a href="#Jquery-使用笔记" class="headerlink" title="Jquery 使用笔记"></a>Jquery 使用笔记</h1><h2 id="文件加载后进行初始化"><a href="#文件加载后进行初始化" class="headerlink" title="文件加载后进行初始化"></a>文件加载后进行初始化</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="comment">// 本月产品类型</span></span><br><span class="line">	monthTypes();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//本月产品订购次数排名</span></span><br><span class="line">	monthRanked();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//最近24小时订购次数</span></span><br><span class="line">	h24Rank();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//本月产品订购收入排名</span></span><br><span class="line">	mpincomeRank();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 定时刷新数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		setTimeout(monthTypes(), <span class="built_in">Math</span>.random() * <span class="number">100</span>);</span><br><span class="line">		setTimeout(monthRanked(), <span class="built_in">Math</span>.random() * <span class="number">100</span>);</span><br><span class="line">		setTimeout(h24Rank(), <span class="built_in">Math</span>.random() * <span class="number">100</span>);</span><br><span class="line">		setTimeout(mpincomeRank(), <span class="built_in">Math</span>.random() * <span class="number">100</span>);</span><br><span class="line">	&#125;, <span class="number">1000</span> * <span class="number">60</span> * <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="list遍历"><a href="#list遍历" class="headerlink" title="list遍历"></a><code>list</code>遍历</h2><blockquote>
<p><code>each</code></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.each(result, <span class="function"><span class="keyword">function</span>(<span class="params">index, item</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// result[index] = item</span></span><br><span class="line">    <span class="built_in">console</span>.log(index);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>map</code></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">result.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>for</code></p>
</blockquote>
<h2 id="数字滚动插件"><a href="#数字滚动插件" class="headerlink" title="数字滚动插件"></a>数字滚动插件</h2><blockquote>
<p><code>GitHub</code> 地址</p>
</blockquote>
<blockquote>
<p>参照博客<br><a herf="https://segmentfault.com/a/1190000010060162" target="_blank">数字滚动显示插件地址</a></p>
</blockquote>
<h2 id="延迟加载-js文件"><a href="#延迟加载-js文件" class="headerlink" title="延迟加载*.js文件"></a>延迟加载<code>*.js</code>文件</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">downloadJSAtOnload</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> element = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">    element.src = <span class="string">"*.js"</span>;<span class="comment">//相对路径</span></span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(element);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.addEventListener) &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"load"</span>, downloadJSAtOnload, <span class="literal">false</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.attachEvent) &#123;</span><br><span class="line">    <span class="built_in">window</span>.attachEvent(<span class="string">"onload"</span>, downloadJSAtOnload);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.onload = downloadJSAtOnload;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="获取省市联动的中国行政区数据"><a href="#获取省市联动的中国行政区数据" class="headerlink" title="获取省市联动的中国行政区数据"></a>获取省市联动的中国行政区数据</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$.getJSON(<span class="string">'http://datavmap-public.oss-cn-hangzhou.aliyuncs.com/areas/csv/100000_province.json?order=asc&amp;_=1583116330692'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> total = result.total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; total; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> provices = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> name = result.rows[i].name;</span><br><span class="line">        <span class="keyword">let</span> adcode = result.rows[i].adcode;</span><br><span class="line">        <span class="comment">// console.info('name:\t' + name + 'adcode:\t' + adcode);</span></span><br><span class="line">        $.getJSON(<span class="string">'http://datavmap-public.oss-cn-hangzhou.aliyuncs.com/areas/csv/'</span> + adcode + <span class="string">'_city.json?order=asc&amp;_='</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(), <span class="function"><span class="keyword">function</span> (<span class="params">city_result</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> city = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; city_result.total; j++) &#123;</span><br><span class="line">                <span class="keyword">const</span> value = city_result.rows[j];</span><br><span class="line">                <span class="comment">// console.info(value)</span></span><br><span class="line">                <span class="keyword">const</span> city_name = value.name;</span><br><span class="line"></span><br><span class="line">                city.push(&#123;</span><br><span class="line">                    value: city_name,</span><br><span class="line">                    label: city_name</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            provices.push(&#123;</span><br><span class="line">                value: name,</span><br><span class="line">                label: name,</span><br><span class="line">                children: city</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span>(provices.length == total)&#123;</span><br><span class="line">                <span class="built_in">console</span>.info(<span class="built_in">JSON</span>.stringify(provices));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
        <category>JQuery</category>
      </categories>
      <tags>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装基本工具</title>
    <url>/Blog/Linux/Linux%E5%AE%89%E8%A3%85%E5%9F%BA%E6%9C%AC%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[Linux安装基本工具
<a id="more"></a>
<h1 id="Linux初始化安装必要程序"><a href="#Linux初始化安装必要程序" class="headerlink" title="Linux初始化安装必要程序"></a>Linux初始化安装必要程序</h1><h2 id="CentOS-安装yum"><a href="#CentOS-安装yum" class="headerlink" title="CentOS 安装yum"></a><code>CentOS</code> 安装<code>yum</code></h2><ol>
<li>下载最新的 <a href="http://yum.baseurl.org/download/" target="_blank"><code>yum-3.4.3</code></a>解压并下载</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 下载</span><br><span class="line">wget http://yum.baseurl.org/download/3.4/yum-3.4.3.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 解压命令</span><br><span class="line">tar xvf yum-3.4.3.tar.gz</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>进入目录,运行安装  </li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd yum/yum-3.4.3</span><br><span class="line"></span><br><span class="line">yummain.py install yum</span><br></pre></td></tr></table></figure>
<ul>
<li>如果结果提示错误:<code>CRITICAL: yum.cli:Config Error accessing file for config file:///etc/</code>,可能是缺少配置文件。在<code>etc</code>目录下新建<code>yum.conf</code>文件,然后再次运行<code>yummain.py install yum</code>,顺利完成安装。</li>
</ul>
<ol start="3">
<li>更新系统</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum check-update</span><br><span class="line"></span><br><span class="line">yum update</span><br><span class="line"></span><br><span class="line">yum clean all</span><br></pre></td></tr></table></figure>
<h2 id="安装lrzsz使用rz、sz命令"><a href="#安装lrzsz使用rz、sz命令" class="headerlink" title="安装lrzsz使用rz、sz命令"></a>安装<code>lrzsz</code>使用<code>rz、sz</code>命令</h2><blockquote>
<p>安装<code>lrzsz</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install lrzsz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>上传</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rz</span><br></pre></td></tr></table></figure>
<ul>
<li>上传文件较大或出现错误时,使用<code>rz -be</code>命令</li>
<li>上传并替换<code>rz -y</code></li>
</ul>
<blockquote>
<p>下载</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sz</span><br></pre></td></tr></table></figure>
<ul>
<li>上传文件较大或出现错误时,使用<code>sz -be</code>命令</li>
</ul>
<h2 id="Tomcat-关闭时-Kill-进程"><a href="#Tomcat-关闭时-Kill-进程" class="headerlink" title="Tomcat 关闭时 Kill 进程"></a><code>Tomcat</code> 关闭时 <code>Kill</code> 进程</h2><p>可以参照另一篇记录<a href="../Linux/Linux部署war包/" target="_blank">Linux部署war包</a></p>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 手动部署 war 包</title>
    <url>/Blog/Linux/Linux%E9%83%A8%E7%BD%B2war%E5%8C%85/</url>
    <content><![CDATA[<p>执行 <code>shutdown.sh</code> 时关闭 <code>Tomcat</code> 与 进程,<br><a id="more"></a></p>
<h1 id="XShell-连接"><a href="#XShell-连接" class="headerlink" title="XShell 连接"></a>XShell 连接</h1><ul>
<li>安装 lrzsz        </li>
</ul>
<p><code>yum -y install lrzsz</code>    </p>
<ul>
<li>上传 <code>Tomcat</code> 到 <code>linux</code>    </li>
</ul>
<blockquote>
<p>下载 <code>Linux</code> 版本 <code>tomcat</code> </p>
</blockquote>
<p>进入官网<a href="https://tomcat.apache.org/" target="_blank">Tomcat</a>，下载历史版本选择则 Download 中的 Archives选项<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://archive.apache.org/dist/tomcat/tomcat-8/v8.0.52/bin/</span><br></pre></td></tr></table></figure></p>
<p><strong>注：</strong> 文件夹为 <code>bin</code> 而不是 <code>src</code></p>
<blockquote>
<p>上传文件到 <code>linux</code> 当前目录下    </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># rz 打开文件对话框(出现错误)</span><br><span class="line"></span><br><span class="line"># rz -be 能够正确上传</span><br></pre></td></tr></table></figure>
<ul>
<li>解压 <code>tomcat</code> 文件    </li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar zxvf apache-tomcat-8.0.52.tar.gz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>解压<code>xx.tar</code>文件    </p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar xvf xx.tar</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入../bin 目录，执行该命令</span><br><span class="line">chmod u+x *.sh</span><br></pre></td></tr></table></figure>
<blockquote>
<p>清空<code>catalina.out</code>日志文件    </p>
</blockquote>
<p>引用<a href="https://www.cnblogs.com/ainihaozhen/p/9466524.html" target="_blank">linux清空 catalina.out 日志 不需要重启 tomcat</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@CDH46 logs]<span class="comment"># du -h catalina.out  # 查看日志文件大小</span></span><br><span class="line">17M	catalina.out 					   </span><br><span class="line">[root@CDH46 logs]<span class="comment"># &gt;catalina.out  	   # 重定向清空文件</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>分配 <code>JVM</code> 内存空间，记录 <code>GC</code> 日志    </p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">编辑 catalina.sh 文件,增加</span><br><span class="line"><span class="comment"># create gc log monitor</span></span><br><span class="line"><span class="comment"># OS specific support.  $var _must_ be set to either true or false.</span></span><br><span class="line">JAVA_OPTS=<span class="string">'-Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxNewSize=512m -XX:MaxPermSize=512m -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -Xloggc:/opt/apache-tomcat-8.0.52/logs/tomcat_gc.log'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># OS specific support.  $var _must_ be set to either true or false.</span></span><br><span class="line">JAVA_OPTS=<span class="string">'-Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxNewSize=512m -XX:MaxPermSize=512m -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC'</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>指定<code>tomcat</code>依赖的 <code>jdk</code> 版本    </p>
</blockquote>
<ol>
<li>找到 <code>catalina.sh</code> 与 <code>setclasspath.sh</code> 文件路径    </li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@cdh02 bin]<span class="comment"># pwd</span></span><br><span class="line">/opt/iptvOrder/apache-tomcat-8.0.52/bin</span><br><span class="line">[root@cdh02 bin]<span class="comment"># vi ./catalina.sh</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在<code>catalina.sh</code>文件头部加入以下配置,指定 <code>jdk</code> 及 <code>jre</code> 路径</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># specify jdk version</span></span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line">JRE_HOME=/usr/java/jdk1.8.0_101/jre</span><br></pre></td></tr></table></figure>
<blockquote>
<p>shutdown 命令 kill 进程 </p>
</blockquote>
<ol>
<li>修改<code>catalina.sh</code>文件</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=/usr/java/jdk1.8.0_101/jre</span><br><span class="line"><span class="built_in">export</span> CATALINA_HOME=/opt/apache-tomcat-8.0.52</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<ul>
<li>需要注意<code>JAVA_HOME、JRE_HOME、CATALINA_HOME</code>路径配置</li>
</ul>
<ol start="2">
<li>修改<code>catalina.sh</code>文件,设置记录CATALINA_PID(catalina.sh)</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Get standard environment variables</span></span><br><span class="line">PRGDIR=`dirname <span class="string">"<span class="variable">$PRG</span>"</span>`</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$CATALINA_PID</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  CATALINA_PID=<span class="variable">$PRGDIR</span>/CATALINA_PID</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p><strong>注:</strong> </p>
<ul>
<li>设置会在启动时候bin下新建一个CATALINA_PID文件</li>
<li>关闭时候从CATALINA_PID文件找到pid，kill。。。同时删除CATALINA_PID文件</li>
</ul>
<ol start="3">
<li>修改<code>shutdown.sh</code></li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这是 8.0.50 版本最后一行</span></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"<span class="variable">$PRGDIR</span>"</span>/<span class="string">"<span class="variable">$EXECUTABLE</span>"</span> stop -force <span class="string">"<span class="variable">$e</span>@"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是 8.5.38 版本最后一行</span></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"<span class="variable">$PRGDIR</span>"</span>/<span class="string">"<span class="variable">$EXECUTABLE</span>"</span> stop -force <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>War</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux部署jar文件</title>
    <url>/Blog/Linux/Linux%E9%83%A8%E7%BD%B2jar%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>将<code>SpringBoot</code>生成的<code>jar</code>文件,在<code>Linux</code>启动。<br><a id="more"></a></p>
<blockquote>
<p><code>Tips</code></p>
</blockquote>
<ul>
<li><p><code>windows</code>下的换行符为<code>CRLF</code>,在<code>Linux</code>中无法运行。如果在<code>windows</code>中编写,需要将换行符改为<code>LF</code></p>
</li>
<li><p>本博客中的<code>server.sh</code>与<code>xx.jar</code>在同级目录,所以将<code>cd folder</code>的命令注释。看官可依据自身实际情况调整,希望能解决你的问题。</p>
</li>
</ul>
<h1 id="脚本文件"><a href="#脚本文件" class="headerlink" title="脚本文件"></a>脚本文件</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#description:启动重启server服务</span></span><br><span class="line"><span class="comment">#端口号,根据端口号确定PID</span></span><br><span class="line">PORT=7091</span><br><span class="line"><span class="comment">#启动命令所在目录</span></span><br><span class="line"><span class="comment"># HOME=/opt/xx</span></span><br><span class="line"><span class="comment">#启动jar文件名,需要修改为自己jar包的名字</span></span><br><span class="line">APP_NAME=xx.jar</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询出监听了PORT端口TCP协议的程序</span></span><br><span class="line">pid=`netstat -anp|grep <span class="variable">$&#123;PORT&#125;</span>|awk <span class="string">'&#123;printf $7&#125;'</span>|cut -d/ -f 1`</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查程序是否在运行</span></span><br><span class="line"><span class="function"><span class="title">is_exist</span></span>()&#123;</span><br><span class="line">    <span class="comment">#如果不存在返回 1 ,存在返回 0</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$&#123;pid&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">    is_exist</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;APP_NAME&#125;</span> is already running. pid=<span class="variable">$&#123;pid&#125;</span>."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment"># 进去命令所在目录</span></span><br><span class="line">        <span class="comment"># cd $&#123;home&#125; </span></span><br><span class="line">        <span class="comment"># 启动jar文件,设置激活文件为prod。</span></span><br><span class="line">        nohup java -jar <span class="variable">$APP_NAME</span> --spring.profiles.active=prod &amp;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"start at port:<span class="variable">$PORT</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()&#123;</span><br><span class="line">    is_exist</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="variable">$&#123;APP_NAME&#125;</span><span class="string">" is runnig on <span class="variable">$&#123;PORT&#125;</span> : <span class="variable">$&#123;pid&#125;</span>, execute kill - 9 <span class="variable">$&#123;pid&#125;</span>"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;APP_NAME&#125;</span> is not running."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()&#123;</span><br><span class="line">    is_exist</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;APP_NAME&#125;</span> is  runnig on port:<span class="variable">$PORT</span>, pid is <span class="variable">$&#123;pid&#125;</span>"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;APP_NAME&#125;</span> is not runnig."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>()&#123;</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    <span class="string">"start"</span>)</span><br><span class="line">        start</span><br><span class="line">    ;;</span><br><span class="line">    <span class="string">"stop"</span>)</span><br><span class="line">        stop</span><br><span class="line">    ;;</span><br><span class="line">    <span class="string">"restart"</span>)</span><br><span class="line">      restart</span><br><span class="line">    ;;</span><br><span class="line">    <span class="string">"status"</span>)</span><br><span class="line">        status</span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">      usage</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>./server.sh</code>无法执行</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chmod 777 xx.sh</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可执行命令行</p>
</blockquote>
<ul>
<li><code>./server.sh start</code> 启动命令,控制台输出是否启动成功</li>
<li><code>./server.sh stop</code>  关闭命令,控制台输出是否关闭成功</li>
<li><code>./server.sh restart</code> 应用先关闭,后启动。控制台输出是否成功执行该操作</li>
</ul>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Linux</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL解压版安装</title>
    <url>/blog/MySQL%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>MySQL 8.0 版本使用<code>.zip</code>文件安装过程中遇到的一些问题,整理成了文章为同样遇到问题的你提供参考。<br><code>ERROR 1130 (HY000) Host &#39;xx-PC&#39; is not allowed to connect to this MySQL server</code>错误的解决方案<br><a id="more"></a></p>
<h1 id="MySQL解压后遇到的一些问题总结"><a href="#MySQL解压后遇到的一些问题总结" class="headerlink" title="MySQL解压后遇到的一些问题总结"></a><code>MySQL</code>解压后遇到的一些问题总结</h1><ul>
<li><code>MySQL</code>下载路径: <a href="https://dev.mysql.com/downloads/mysql/" target="_blank"> <code>https://dev.mysql.com/downloads/mysql/</code></a></li>
</ul>
<blockquote>
<p>运行环境</p>
</blockquote>
<ul>
<li><code>Windows</code>: <code>Windows 7</code></li>
<li><code>MySQL</code>版本: <code>mysql-8.0.11-winx64</code></li>
</ul>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><blockquote>
<p>文件解压</p>
</blockquote>
<ul>
<li>解压后的路径: <code>D:\Program Files (x86)\mysql-8.0.11-winx64</code></li>
</ul>
<blockquote>
<p><code>系统</code>环境变量</p>
</blockquote>
<ul>
<li>新建<code>MYSQL_HOME</code>:<code>D:\Program Files (x86)\mysql-8.0.11-winx64</code>;</li>
<li>添加<code>PATH</code>:<code>%MYSQL_HOME%\bin;</code></li>
</ul>
<p>或者</p>
<ul>
<li>添加<code>PATH</code>: <code>D:\Program Files (x86)\mysql-8.0.11-winx64\bin</code></li>
</ul>
<p><strong>注:</strong>选择两种方式中的一种都可以(对后续步骤无影响),根据自身喜好决定</p>
<h2 id="MySQL配置"><a href="#MySQL配置" class="headerlink" title="MySQL配置"></a><code>MySQL</code>配置</h2><blockquote>
<p>配置文件</p>
</blockquote>
<ul>
<li>在<code>D:\Program Files (x86)\mysql-8.0.11-winx64</code>(本地<code>MySQL</code>安装路径)下新建<code>my.ini.txt</code>名字的文件(文件名及文件格式需一致)。</li>
</ul>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置端口号</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置MySQL安装路径</span></span><br><span class="line"><span class="attr">basedir</span>=D:\Program Files (x86)\mysql-<span class="number">8.0</span>.<span class="number">11</span>-winx64</span><br><span class="line"><span class="comment"># 设置MySQL数据库的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=D:\Program Files (x86)\mysql-<span class="number">8.0</span>.<span class="number">11</span>-winx64\data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF-8</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用默认的存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="comment"># 使用默认时区为东八区</span></span><br><span class="line"><span class="attr">default-time-zone</span>=<span class="string">'+8:00'</span></span><br><span class="line"><span class="comment"># 密码</span></span><br><span class="line"><span class="comment"># root@localhost: &amp;i4heQcySo;L</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行<code>MySQL</code>安装命令</p>
</blockquote>
<ul>
<li>使用管理员权限运行<code>CMD</code>,进入<code>MySQL</code>安装路径</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqld --install mysql</span><br></pre></td></tr></table></figure>
<p><strong>注：</strong></p>
<ol>
<li>如果之前有安装其他版本的<code>mysql</code>服务器名称,可以使用<code>mysql-version</code>在<code>mysql</code>后添加自定义的版本名称区分开;可选择删除之前的版本,<code>mysqld remove mysql</code>;</li>
<li>安装时会生成初始化密码,密码在<code>root@localhost:</code>的后面(需要及时保存,后续需要登录<code>MySQL</code>修改密码)。</li>
</ol>
<ul>
<li>再次启动服务器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure>
<ul>
<li>如果出现<code>ERROR 1130 (HY000): Host &#39;xx-PC&#39; is not allowed to connect to this MySQL server</code>类似错误,后续有解决方法</li>
</ul>
<blockquote>
<p>修改密码</p>
</blockquote>
<ul>
<li>新开一个<code>CMD</code>窗口,进入安装<code>MySQL_HOME\bin</code>的路径,</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\Program Files (x86)\mysql-8.0.11-winx64\bin&gt;mysql -uroot -p # 使用临时密码登录</span><br><span class="line">Enter password: ****</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 7</span><br><span class="line">Server version: 8.0.11 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; use mysql</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; alter user user() identified by &apos;root&apos;;</span><br></pre></td></tr></table></figure>
<ul>
<li>之后便能使用<code>root@localhost: root</code>账号和密码登录了,当前设置密码为<code>root</code>可以自行修改</li>
</ul>
<h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><blockquote>
<p><code>ERROR 1130 (HY000): Host &#39;xx-PC&#39; is not allowed to connect to this MySQL server</code></p>
</blockquote>
<p>这是因为<code>MySQL</code>用的是电脑的名字登录,而不是数据库初始化默认的<code>localhost</code>地址。</p>
<blockquote>
<blockquote>
<p>解决方法</p>
</blockquote>
</blockquote>
<ul>
<li>管理员启动<code>CMD</code>并进入<code>D:\Program Files (x86)\mysql-8.0.11-winx64\bin&gt;</code>执行下列语句,使用跳过验证的方式启动<code>mysql</code>。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\Program Files (x86)\mysql-8.0.11-winx64\bin&gt;mysqld --console --skip-grant-tables --shared-memory</span><br></pre></td></tr></table></figure>
<ul>
<li><p>新开一个<code>CMD</code>窗口,使用<code>mysql -uroot -p</code>登录;然后修改<code>user</code>表内的<code>root</code>用户信息;将<code>root</code>账号<code>host</code>改为对应的账号名字(有可能你的并不是<code>xx-PC</code>,这个要根据实际情况调整)</p>
</li>
<li><p>执行<code>SQL</code></p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; update user set host='xxx-PC' where user='root';</span><br><span class="line">Query OK, 1 row affected (0.12 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br></pre></td></tr></table></figure>
<p><strong>修改之前</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; select host,user from user;</span><br><span class="line">+<span class="comment">-----------+------------------+</span></span><br><span class="line">| host      | user             |</span><br><span class="line">+<span class="comment">-----------+------------------+</span></span><br><span class="line">| localhost | mysql.infoschema |</span><br><span class="line">| localhost | mysql.session    |</span><br><span class="line">| localhost | mysql.sys        |</span><br><span class="line">| localhost  | root             |</span><br><span class="line">+<span class="comment">-----------+------------------+</span></span><br></pre></td></tr></table></figure>
<p><strong>修改之后</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select host,user from user;</span><br><span class="line">+-----------+------------------+</span><br><span class="line">| host      | user             |</span><br><span class="line">+-----------+------------------+</span><br><span class="line">| localhost | dew              |</span><br><span class="line">| localhost | mysql.infoschema |</span><br><span class="line">| localhost | mysql.session    |</span><br><span class="line">| localhost | mysql.sys        |</span><br><span class="line">| xxx-PC  | root             |</span><br><span class="line">+-----------+------------------+</span><br></pre></td></tr></table></figure>
<ul>
<li>改完之后就能使用<code>net start mysql</code>语句启动后使用<code>root@xxx-PC</code>的方式连接数据库了;可以新建一个账号实现<code>localhost</code>的登录。</li>
</ul>
<blockquote>
<blockquote>
<p>创建数据库登录用户的<code>SQL</code></p>
</blockquote>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'dew'</span>@<span class="string">'localhost'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'root'</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>无法使用新增的账号访问数据库</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- grant all privileges on `数据库名字`.* to `新建账号`@'localhost';</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> dew_boot_learning.* <span class="keyword">to</span> dew@<span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>注:</strong>希望我记录的解决方法能帮到你,如果你在实际过程中遇到其他的问题。可以在文章下留言,我看到后会及时回复。</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 使用笔记</title>
    <url>/blog/Oracle/Oracle%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[Oracle 使用笔记
<a id="more"></a>
<h1 id="Oracle使用笔记"><a href="#Oracle使用笔记" class="headerlink" title="Oracle使用笔记"></a><code>Oracle</code>使用笔记</h1><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><ul>
<li><p>查询 <code>t_device</code>表是否有关联触发器,查 <code>all_triggers</code> 表得到 <code>trigger_name</code>    </p>
<p>  <code>select trigger_name from all_triggers where table_name = &#39;XX&#39;;</code></p>
</li>
<li><p>根据 <code>trigger_name</code> 查询出触发器详细信息        </p>
<p>  <code>select text from all_source where type = &#39;TRIGGER&#39; AND name = &#39;TR_XXX&#39;;</code></p>
</li>
</ul>
<h2 id="SQL查看CLOB类型内容"><a href="#SQL查看CLOB类型内容" class="headerlink" title="SQL查看CLOB类型内容"></a><code>SQL</code>查看<code>CLOB</code>类型内容</h2><p><code>SQL : select dbms_lob.substr(t.boundary_point) from t_station_boundary t;</code></p>
<ul>
<li>说明 :<code>dbms_lob.substr</code>将大文本转换字符类型读出来<blockquote>
<p>引用地址：<a href="https://www.cnblogs.com/Grand-Jon/p/7389427.html" target="_blank">Oracle的CLOB大数据字段类型</a></p>
</blockquote>
</li>
</ul>
<h2 id="SQL按月份统计数据"><a href="#SQL按月份统计数据" class="headerlink" title="SQL按月份统计数据"></a><code>SQL</code>按月份统计数据</h2><blockquote>
<p>引用地址: <a href="https://www.cnblogs.com/ymj126/p/4501061.html" target="_blank">Oracle按月统计数据</a></p>
</blockquote>
<h2 id="Oracle时间转换为5分钟粒度"><a href="#Oracle时间转换为5分钟粒度" class="headerlink" title="Oracle时间转换为5分钟粒度"></a><code>Oracle</code>时间转换为5分钟粒度</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> to_char(watchtime, <span class="string">'yyyy/MM/dd hh24'</span>) || <span class="string">':'</span> ||</span><br><span class="line">       <span class="keyword">lpad</span>(<span class="keyword">floor</span>(to_char(watchtime, <span class="string">'mi'</span>) / <span class="number">5</span>) * <span class="number">5</span>, <span class="number">2</span>, <span class="number">0</span>) watchtime,</span><br><span class="line">       <span class="keyword">num</span></span><br><span class="line">  <span class="keyword">from</span> tm_num_watch <span class="keyword">order</span> <span class="keyword">by</span> watchtime <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Oracle将一个字段拆分为两个字段在同行显示结果"><a href="#Oracle将一个字段拆分为两个字段在同行显示结果" class="headerlink" title="Oracle将一个字段拆分为两个字段在同行显示结果"></a><code>Oracle</code>将一个字段拆分为两个字段在同行显示结果</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 获取行政区中心点坐标</span></span><br><span class="line"><span class="keyword">select</span> station_name,</span><br><span class="line">       regexp_substr(t.central_point, <span class="string">'[^,]+'</span>, <span class="number">1</span>, <span class="number">1</span>) lat,</span><br><span class="line">       regexp_substr(t.central_point, <span class="string">'[^,]+'</span>, <span class="number">1</span>, <span class="number">2</span>) lng</span><br><span class="line">  <span class="keyword">from</span> t_station_boundary t;</span><br></pre></td></tr></table></figure>
<p><img src="../../../images/oracle-regexp_substr.png" alt="Oracle使用正则拆分字段值"></p>
<h2 id="时间计算查询"><a href="#时间计算查询" class="headerlink" title="时间计算查询"></a>时间计算查询</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 相差月份查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ceil</span>((months_between(<span class="keyword">sysdate</span>,<span class="string">'26-7月-2014'</span>))) <span class="keyword">months</span> <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 天数查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ceil</span>((<span class="keyword">to_date</span>(<span class="string">'2018/5/24'</span>,<span class="string">'yyyy/mm/dd'</span>) - <span class="keyword">to_date</span>(<span class="string">'2014/7/26'</span>,<span class="string">'yyyy/mm/dd'</span>))) <span class="keyword">days</span> <span class="keyword">from</span> dual    </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 小时查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ceil</span>((<span class="keyword">to_date</span>(<span class="string">'2018/5/24'</span>, <span class="string">'yyyy/mm/dd'</span>) - <span class="keyword">to_date</span>(<span class="string">'2014/7/26'</span>, <span class="string">'yyyy/mm/dd'</span>))*<span class="number">24</span>) hoursfrom dual;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 相差时间查询</span></span><br><span class="line"><span class="keyword">select</span> *  <span class="keyword">from</span> (</span><br><span class="line">  (<span class="keyword">select</span> <span class="keyword">ceil</span>((months_between(<span class="keyword">sysdate</span>, <span class="string">'26-7月-2014'</span>))) <span class="keyword">as</span> <span class="string">"相差月数"</span> <span class="keyword">from</span> dual)),</span><br><span class="line">  (<span class="keyword">select</span> <span class="keyword">ceil</span>(<span class="keyword">sysdate</span> - <span class="keyword">to_date</span>(<span class="string">'2014/7/26'</span>, <span class="string">'yyyy/mm/dd'</span>)) <span class="keyword">as</span> <span class="string">"相差天数"</span> <span class="keyword">from</span> dual),</span><br><span class="line">  (<span class="keyword">select</span> <span class="keyword">ceil</span>((<span class="keyword">sysdate</span> - <span class="keyword">to_date</span>(<span class="string">'2014/7/26'</span>, <span class="string">'yyyy/mm/dd'</span>)) * <span class="number">24</span>) <span class="keyword">as</span> <span class="string">"相差小时"</span>  <span class="keyword">from</span> dual);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>引用 [Oracle 两个时间相减][oracle_date_difference]</p>
</blockquote>
<p>[oracle_date_difference][<a href="https://blog.csdn.net/redarmy_chen/article/details/7351410]" target="_blank" rel="noopener">https://blog.csdn.net/redarmy_chen/article/details/7351410]</a></p>
<p><strong>注：</strong></p>
<ol>
<li>Oracle 两个时间相减默认的是天数;</li>
<li>两个时间相减的差 * 24 是得到的是 小时(hours),依次类推得到的相应的时间差.</li>
</ol>
<h2 id="查询加上前缀"><a href="#查询加上前缀" class="headerlink" title="查询加上前缀"></a>查询加上前缀</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- concat 函数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="string">'_'</span>,USER_AD) USER_AD, longitude, latitude, grid_x, grid_y <span class="keyword">from</span> t_advertising;</span><br></pre></td></tr></table></figure>
<h2 id="Oracle使用merge-into"><a href="#Oracle使用merge-into" class="headerlink" title="Oracle使用merge into"></a><code>Oracle</code>使用<code>merge into</code></h2><ul>
<li>索引</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建索引</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> meshing_user_ad_idx <span class="keyword">on</span> T_MESHING(USER_AD);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除索引</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> meshing_user_ad_idx;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>merge into语法</code></li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> t_meshing t1</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">select</span> :<span class="keyword">name</span> user_ad, :longitude longitude, :latitude latitude, :gridX gridX, :gridY gridY</span><br><span class="line">       <span class="keyword">from</span> dual) t2</span><br><span class="line"><span class="keyword">on</span> (t1.user_ad = t2.user_ad)</span><br><span class="line"><span class="keyword">when</span> <span class="keyword">matched</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">update</span></span><br><span class="line">    <span class="keyword">set</span> t1.longitude=t2.longitude,</span><br><span class="line">        t1.latitude = t2.latitude,</span><br><span class="line">        t1.grid_x   = t2.gridx,</span><br><span class="line">        t1.grid_y   = t2.gridy</span><br><span class="line"><span class="keyword">when</span> <span class="keyword">not</span> <span class="keyword">matched</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">insert</span> (t1.user_ad, t1.longitude, t1.latitude, t1.grid_x, t1.grid_y)</span><br><span class="line">    <span class="keyword">values</span> (t2.user_ad, t2.longitude, t2.latitude, t2.gridx, t2.gridy);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis生成唯一主键</title>
    <url>/blog/Java/Redis%E7%94%9F%E6%88%90%E5%94%AF%E4%B8%80%E4%B8%BB%E9%94%AE/</url>
    <content><![CDATA[<p>使用Redis生成<code>自定义前缀/日期格式</code>自增的唯一主键,例如<code>HTG201810120001</code>、<code>201810120001</code>等自增数。同时每天的零点重新开始生成个位为<code>1</code>的主键<br><a id="more"></a></p>
<ul>
<li>参考博客: <a href="https://www.cnblogs.com/jbml-154312/p/7490810.html" target="_blank" rel="noopener">https://www.cnblogs.com/jbml-154312/p/7490810.html</a></li>
</ul>
<blockquote>
<p>前提:</p>
</blockquote>
<ul>
<li>需要连接到<code>Redis</code></li>
</ul>
<h1 id="工具类代码"><a href="#工具类代码" class="headerlink" title="工具类代码"></a>工具类代码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sanss.city.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.support.atomic.RedisAtomicLong;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: RedisGeneratorCode</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 生成日期开头加0001，0002，0003的工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/10/09</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> https://www.cnblogs.com/jbml-154312/p/7490810.html&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisGeneratorCode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(RedisGeneratorCode.class);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">RedisGeneratorCode</span><span class="params">(RedisTemplate&lt;String, Object&gt; redisTemplate)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateCode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 生成自定义前缀的类似 HTG201810120001格式的自增数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key redis中的key值</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> prefix  最后编码的前缀</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> hasExpire redis 是否使用过期时间设置自增id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength redis 生成的自增id的最小长度，如果小于这个长度前面补0</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">generateCode</span><span class="params">(String key, String prefix, <span class="keyword">boolean</span> hasExpire, Integer minLength)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.createGenerateCode(key, prefix, hasExpire, minLength);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateCode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 生成 类似 201810120001格式的自增数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key redis 中的key值</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> hasExpire redis 是否使用过期时间设置自增id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength redis 生成的自增id的最小长度，如果小于这个长度前面补0</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">generateCode</span><span class="params">(String key, <span class="keyword">boolean</span> hasExpire, Integer minLength)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.createGenerateCode(key, <span class="string">""</span>, hasExpire, minLength);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateCode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 组装符合自己规则的id并设置过期时间</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key	redis中的key值</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> prefix	最后编码的前缀</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> hasExpire	redis 是否使用过期时间设置自增id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength	redis生成的自增id的最小长度，如果小于这个长度前面补0</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">createGenerateCode</span><span class="params">(String key, String prefix, <span class="keyword">boolean</span> hasExpire, Integer minLength)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Date date = <span class="keyword">null</span>;</span><br><span class="line">			Long id = <span class="keyword">null</span>;</span><br><span class="line">			Calendar calendar = Calendar.getInstance();</span><br><span class="line">			<span class="keyword">if</span> (hasExpire) &#123;</span><br><span class="line">				calendar.set(Calendar.HOUR_OF_DAY, <span class="number">23</span>);</span><br><span class="line">				calendar.set(Calendar.MINUTE, <span class="number">59</span>);</span><br><span class="line">				calendar.set(Calendar.SECOND, <span class="number">59</span>);</span><br><span class="line">				calendar.set(Calendar.MILLISECOND, <span class="number">9999</span>);</span><br><span class="line">				date = calendar.getTime();</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				calendar.set(Calendar.MINUTE, calendar.get(Calendar.MINUTE) + <span class="number">10</span>);</span><br><span class="line">				date = calendar.getTime();</span><br><span class="line">			&#125;</span><br><span class="line">			id = <span class="keyword">this</span>.generateId(key, date);</span><br><span class="line">			<span class="keyword">if</span> (id != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">this</span>.format(id, prefix, minLength);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			logger.info(<span class="string">"error --&gt; redis 生成自增id出现异常"</span>);</span><br><span class="line">			logger.error(e.getMessage(), e);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 使用RedisAtomicLong自增</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key redis中的key值</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> date 过期时间</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * Long</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> Long <span class="title">generateId</span><span class="params">(String key, Date date)</span> </span>&#123;</span><br><span class="line">		RedisAtomicLong counter = <span class="keyword">new</span> RedisAtomicLong(key, redisTemplate.getConnectionFactory());</span><br><span class="line">		<span class="comment">// 通过key获取自增并设定过期时间</span></span><br><span class="line">		counter.expireAt(date);</span><br><span class="line">		<span class="keyword">return</span> counter.incrementAndGet();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: format</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 获取 redis 自增后，生成自定义格式的id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id	redis 获取的 id值</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> prefix	自定义前缀</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength	生成数的长度，不满足时 0 补齐</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> String <span class="title">format</span><span class="params">(Long id, String prefix, Integer minLength)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 拼接的字符串</span></span><br><span class="line">		StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">		<span class="comment">// 当前日期</span></span><br><span class="line">		Date date = <span class="keyword">new</span> Date();</span><br><span class="line">		<span class="comment">// 自定义前缀</span></span><br><span class="line">		sb.append(prefix);</span><br><span class="line">		<span class="keyword">if</span> (date != <span class="keyword">null</span>) &#123;</span><br><span class="line">			DateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">			sb.append(df.format(date));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/* 对不满足长度的id值,使用0补齐 */</span></span><br><span class="line">		<span class="comment">// redis 生成的id值</span></span><br><span class="line">		String strId = String.valueOf(id);</span><br><span class="line">		<span class="comment">// redis 生成id 的长度</span></span><br><span class="line">		<span class="keyword">int</span> length = strId.length();</span><br><span class="line">		<span class="keyword">if</span> (length &lt; minLength) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; minLength - length; i++) &#123;</span><br><span class="line">				sb.append(<span class="string">"0"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			sb.append(strId);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			sb.append(strId);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> sb.toString();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="方法中调用"><a href="#方法中调用" class="headerlink" title="方法中调用"></a>方法中调用</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@Title</span>: getGeneratorId</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@Description</span>: 获取 yyyyMMdd0001格式,的自增工单id，并每天00:23:59 初始化化为0001</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  * Long</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Long <span class="title">getGeneratorId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">  String code = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">    System.err.println(++count);</span><br><span class="line">    code = redisGeneratorCode.generateCode(<span class="string">"worksheet_id"</span>, <span class="string">""</span>, <span class="keyword">true</span>, <span class="number">4</span>);</span><br><span class="line">    flag = code == <span class="keyword">null</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> Long.parseLong(code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="SpringBoot-配置"><a href="#SpringBoot-配置" class="headerlink" title="SpringBoot 配置"></a><code>SpringBoot</code> 配置</h2><blockquote>
<p>依赖项(也可以使用<code>jedis</code>)</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">&gt; 配置`RedisConnection `和`RedisConnectionFactory`</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">package com.dew.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.data.redis.connection.RedisStandaloneConfiguration;</span><br><span class="line">import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @ClassName RedisConfig</span><br><span class="line"> * @Description <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"> *  TODO</span><br><span class="line"> * @Date 2020/7/17 13:20</span><br><span class="line"> * @Version 1.0</span><br><span class="line"> **/</span><br><span class="line">@Configuration</span><br><span class="line">public class RedisConfig &#123;</span><br><span class="line"></span><br><span class="line">	@Bean</span><br><span class="line">	public LettuceConnectionFactory redisConnectionFactory() &#123;</span><br><span class="line">		// hostName: 可以配置为ip地址(redis是修改host文件后的名称,127.0.0.1 redis)</span><br><span class="line">		return new LettuceConnectionFactory(new RedisStandaloneConfiguration("redis", 6379));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注:</strong><code>SpringBoot</code>增加以上配置后就能正常访问了 </p>
]]></content>
      <categories>
        <category>blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Pom 文件常用配置</title>
    <url>/blog/Maven/Pom%E6%96%87%E4%BB%B6%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[Pom 文件常用配置
<a id="more"></a>
<h1 id="pom-xml-常用的配置值"><a href="#pom-xml-常用的配置值" class="headerlink" title="pom.xml 常用的配置值"></a>pom.xml 常用的配置值</h1><h2 id="properties"><a href="#properties" class="headerlink" title="properties"></a>properties</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="plugin"><a href="#plugin" class="headerlink" title="plugin"></a>plugin</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>blog</category>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
        <tag>pom</tag>
      </tags>
  </entry>
  <entry>
    <title>配置单个 maven 项目 pom 依赖仓库地址</title>
    <url>/Blog/Maven/Pom%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[配置单个 maven 项目 pom 依赖仓库地址
<a id="more"></a>
<h1 id="pom-xml-配置-maven-仓库地址，不需要改-setting"><a href="#pom-xml-配置-maven-仓库地址，不需要改-setting" class="headerlink" title="pom.xml 配置 maven 仓库地址，不需要改 setting"></a><code>pom.xml</code> 配置 <code>maven</code> 仓库地址，不需要改 <code>setting</code></h1><blockquote>
<p><code>pom.xml</code>文件中加入<code>repositories</code>配置    </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置maven阿里云仓库开始,不用去改maven的setting --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>local private nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>local private nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置maven阿里云结束 --&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>impala 使用记录</title>
    <url>/blog/Java/ResultSet%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8F%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/</url>
    <content><![CDATA[impala 使用记录
<a id="more"></a>
<h1 id="大数据量查询-使用-ResultSet-出现-JVM-内存溢出"><a href="#大数据量查询-使用-ResultSet-出现-JVM-内存溢出" class="headerlink" title="大数据量查询,使用 ResultSet 出现 JVM 内存溢出"></a>大数据量查询,使用 <code>ResultSet</code> 出现 <code>JVM</code> 内存溢出</h1><blockquote>
<p>解决方案    </p>
</blockquote>
<ul>
<li>修改前代码    </li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">statement = connection.prepareStatement(sql);</span><br></pre></td></tr></table></figure>
<p>修改后代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">statement = connection.prepareStatement(sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>ResultSet</code>枚举类</p>
</blockquote>
<table>
<thead>
<tr>
<th>枚举值</th>
<th>数值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>FETCH_FORWARD</td>
<td>1000</td>
<td></td>
</tr>
<tr>
<td>FETCH_REVERSE</td>
<td>1001</td>
<td></td>
</tr>
<tr>
<td>FETCH_UNKNOWN</td>
<td>1002</td>
<td></td>
</tr>
<tr>
<td>TYPE_FORWARD_ONLY</td>
<td>1003</td>
<td>只能向前滚动(默认值)</td>
</tr>
<tr>
<td>TYPE_SCROLL_INSENSITIVE</td>
<td>1004</td>
<td></td>
</tr>
<tr>
<td>TYPE_SCROLL_SENSITIVE</td>
<td>1005</td>
<td></td>
</tr>
<tr>
<td>CONCUR_READ_ONLY</td>
<td>1007</td>
<td></td>
</tr>
<tr>
<td>CONCUR_UPDATABLE</td>
<td>1008</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Memory Overflow</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL 常用函数</title>
    <url>/blog/SQL/SQL%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[SQL 常用函数
<a id="more"></a>
<h1 id="SQL-常用函数及错误记录"><a href="#SQL-常用函数及错误记录" class="headerlink" title="SQL 常用函数及错误记录"></a><code>SQL</code> 常用函数及错误记录</h1><blockquote>
<p>获取<code>sysdate</code>前几个月时间 </p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 时间发生在 2019/1/29,查询(ORA-01839:指定月份的日期无效)</span></span><br><span class="line"><span class="comment">-- 关键在于其他之前时间查询都没问题,就1月不行.有待解答</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="keyword">sysdate</span> - <span class="built_in">interval</span> <span class="string">'11'</span> <span class="keyword">month</span>, <span class="string">'yyyy/mm'</span>) <span class="keyword">from</span> dual </span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 替代SQL */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="keyword">sysdate</span> - <span class="built_in">interval</span> <span class="string">'11'</span> <span class="keyword">month</span>, <span class="string">'yyyy/mm'</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<h1 id="MySQL-与Oracle-的函数"><a href="#MySQL-与Oracle-的函数" class="headerlink" title="MySQL 与Oracle 的函数"></a>MySQL 与Oracle 的函数</h1><h2 id="字符串转datetime"><a href="#字符串转datetime" class="headerlink" title="字符串转datetime"></a>字符串转<code>datetime</code></h2><blockquote>
<p>MySQL</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">str_to_date('2020-01-14 15:00:00','%Y-%m-%d %H:%i:%s')</span><br><span class="line"></span><br><span class="line"><span class="comment">-- example</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table_name <span class="keyword">where</span> datetime_column <span class="keyword">between</span> <span class="keyword">str_to_date</span>(<span class="string">'2020-01-13 15:00:00'</span>, <span class="string">'%Y-%m-%d %H:%i:%s'</span>) <span class="keyword">and</span> <span class="keyword">str_to_date</span>(<span class="string">'2020-01-14 15:00:00'</span>, <span class="string">'%Y-%m-%d %H:%i:%s'</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Oracle</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">to_date('2020-01-14 15:00:00','yyyy-mm-dd hh24:mi:ss')</span><br><span class="line"></span><br><span class="line"><span class="comment">-- example</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table_name <span class="keyword">where</span> datetime_column <span class="keyword">between</span> <span class="keyword">to_date</span>(<span class="string">'2020-01-13 15:00:00'</span>,<span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) <span class="keyword">and</span> <span class="keyword">to_date</span>(<span class="string">'2020-01-14 15:00:00'</span>,<span class="string">'yyyy-mm-dd hh24:mi:ss'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="datetime转为指定格式字符串"><a href="#datetime转为指定格式字符串" class="headerlink" title="datetime转为指定格式字符串"></a><code>datetime</code>转为指定格式字符串</h2><blockquote>
<p>MySQL</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">date_format(datetime_column, '%Y-%m-%d %H') </span><br><span class="line"></span><br><span class="line"><span class="comment">-- exmple</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">now</span>(), <span class="string">'%Y-%m-%d %H'</span>)  <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Oracle</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">to_char(datetime_column, 'yyyy-mm-dd hh24') </span><br><span class="line"></span><br><span class="line"><span class="comment">-- exmple</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">now</span>(), <span class="string">'yyyy-mm-dd hh24'</span>)  <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure>
<ul>
<li>注: <ol>
<li><code>%Y-%m-%d %H</code>可以使用其他的格式类型,比如: <code>%Y-%m-%d %H:%i:%s</code></li>
<li><code>yyyy-mm-dd hh24</code> 可以使用其他的格式类型,比如: <code>yyyy-mm-dd hh24:mi:ss</code></li>
</ol>
</li>
</ul>
<h1 id="MySQL-字符串查找函数"><a href="#MySQL-字符串查找函数" class="headerlink" title="MySQL 字符串查找函数"></a>MySQL 字符串查找函数</h1><blockquote>
<p><code>find_in_set</code>与<code>regexp</code>函数</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line">     <span class="keyword">from</span> t_media_resource</span><br><span class="line">     <span class="keyword">where</span> <span class="number">1</span> = <span class="number">1</span></span><br><span class="line">       <span class="keyword">and</span> <span class="keyword">if</span>(<span class="keyword">not</span> find_in_set(<span class="string">'0'</span>, <span class="string">'1,2'</span>), <span class="keyword">instr</span>(<span class="string">'1,2'</span>, media_type), <span class="number">1</span> = <span class="number">1</span>)</span><br><span class="line">       <span class="keyword">and</span> <span class="keyword">if</span>(<span class="string">'综合|KOL推荐'</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>, media_classify regexp (<span class="string">'综合|KOL推荐'</span>), <span class="number">1</span> = <span class="number">1</span>)</span><br><span class="line">       <span class="keyword">and</span> <span class="keyword">if</span>(<span class="string">'大表哥'</span> != <span class="string">''</span>, media_name regexp (<span class="string">'大表哥'</span>), <span class="number">1</span> = <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<h1 id="MySQL-拼接多个字符串"><a href="#MySQL-拼接多个字符串" class="headerlink" title="MySQL 拼接多个字符串"></a>MySQL 拼接多个字符串</h1><ul>
<li>可以自定义拼接的字符,例如: <code>|</code></li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat_ws</span>(<span class="string">'|'</span>, column_1, column_2,...) MESSAGE <span class="keyword">from</span> t_tablename;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell log</title>
    <url>/blog/Shell/Shell%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[Shell log
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">you_name=<span class="string">"runoob.com"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Hello : "</span><span class="variable">$&#123;you_name&#125;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只读变量的值不能被改变</span></span><br><span class="line">myUrl=<span class="string">"http://www.baidu.com"</span>;</span><br><span class="line"><span class="built_in">readonly</span> myUrl;</span><br><span class="line"><span class="comment"># myUrl="http://runoob.com";</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除变量</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> you_name;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;you_name&#125;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取字符串长度</span></span><br><span class="line">string=<span class="string">"abcd"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#string&#125;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找子字符串</span></span><br><span class="line">string=<span class="string">"runoob is a great site"</span>;</span><br><span class="line"><span class="built_in">echo</span> `expr index <span class="string">"<span class="variable">$&#123;string&#125;</span>"</span> sg`;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义数组</span></span><br><span class="line">track=(<span class="string">"min"</span> <span class="string">"mid"</span> <span class="string">"max"</span>);</span><br><span class="line">track[5]=<span class="string">"io流"</span>;</span><br><span class="line">valuen=<span class="variable">$&#123;track[5]&#125;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;valuen&#125;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#track[@]&#125;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 基础</title>
    <url>/SpringBoot/SpringBoot%E5%9F%BA%E7%A1%80%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[SpringBoot 基础
<a id="more"></a>
<h1 id="参数校验"><a href="#参数校验" class="headerlink" title="参数校验"></a>参数校验</h1><h1 id="统一用户认证-token-session"><a href="#统一用户认证-token-session" class="headerlink" title="统一用户认证(token | session)"></a>统一用户认证(token | session)</h1><h1 id="返回结果统一"><a href="#返回结果统一" class="headerlink" title="返回结果统一"></a>返回结果统一</h1><h1 id="数据库访问"><a href="#数据库访问" class="headerlink" title="数据库访问"></a>数据库访问</h1><h1 id="多数据源"><a href="#多数据源" class="headerlink" title="多数据源"></a>多数据源</h1><h1 id="前后端分离-前端页面展示"><a href="#前后端分离-前端页面展示" class="headerlink" title="前后端分离(前端页面展示)"></a>前后端分离(前端页面展示)</h1><h1 id="文件上传-本地-七牛云"><a href="#文件上传-本地-七牛云" class="headerlink" title="文件上传(本地 | 七牛云)"></a>文件上传(本地 | 七牛云)</h1><h1 id="富文本编辑器"><a href="#富文本编辑器" class="headerlink" title="富文本编辑器"></a>富文本编辑器</h1><h1 id="分页组件"><a href="#分页组件" class="headerlink" title="分页组件"></a>分页组件</h1><h1 id="表格、表单"><a href="#表格、表单" class="headerlink" title="表格、表单"></a>表格、表单</h1>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot多数据源——impala连接</title>
    <url>/SpringBoot/SpringBoot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E4%BD%BF%E7%94%A8impala%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<p>SpringBoot 2.0 + Impala 多数据源 JDBCTemplate<br>SpringBoot 2.0 + Impala 多数据源 Named<br><a id="more"></a></p>
<h1 id="SpringBoot-配置多数据源-Hikari连接池-连接Impala"><a href="#SpringBoot-配置多数据源-Hikari连接池-连接Impala" class="headerlink" title="SpringBoot 配置多数据源(Hikari连接池)连接Impala"></a>SpringBoot 配置多数据源(Hikari连接池)连接Impala</h1><blockquote>
<p>注释:</p>
</blockquote>
<p>Impala:</p>
<h2 id="SpringBoot使用默认的Hikari连接池-连接Impala"><a href="#SpringBoot使用默认的Hikari连接池-连接Impala" class="headerlink" title="SpringBoot使用默认的Hikari连接池,连接Impala"></a>SpringBoot使用默认的Hikari连接池,连接Impala</h2><ol>
<li>增加依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Impala start --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 有可能下载不到该Jar, 可以到该地址下载相应版本：https://www.cloudera.com/downloads/connectors/impala/jdbc/2-6-3.html --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.cloudera/ImpalaJDBC41 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cloudera<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ImpalaJDBC41<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;impala.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Impala end --&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>配置<code>application.yml</code>文件</li>
</ol>
<ul>
<li>该配置文件为多环境配置,可以参考 <a href="../SpringBoot多环境配置">SpringBoot多环境配置</a></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">7001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">  servlet:</span></span><br><span class="line"><span class="attr">    multipart:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mvc:</span></span><br><span class="line"><span class="attr">    view:</span></span><br><span class="line"><span class="attr">      prefix:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">      suffix:</span> <span class="string">.html</span></span><br><span class="line"><span class="attr">    favicon:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">logback:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">template</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># developer enviroment</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    impala:</span> </span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.cloudera.impala.jdbc41.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:impala://xx:21050/default</span></span><br><span class="line"><span class="attr">    oracle:</span></span><br><span class="line"><span class="attr">      first:</span></span><br><span class="line"><span class="attr">        driver-class-name:</span> <span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line"><span class="attr">        jdbc-url:</span> <span class="attr">jdbc:oracle:thin:@//xx:1521/pdb1.us.oracle.com</span></span><br><span class="line"><span class="attr">        username:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">        password:</span> <span class="string">xx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># developer enviroment</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    impala:</span> </span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.cloudera.impala.jdbc41.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:impala://xx:21050/default</span></span><br><span class="line"><span class="attr">    oracle:</span></span><br><span class="line"><span class="attr">      first:</span></span><br><span class="line"><span class="attr">        driver-class-name:</span> <span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line"><span class="attr">        jdbc-url:</span> <span class="attr">jdbc:oracle:thin:@//xx:1521/pdb1.us.oracle.com</span></span><br><span class="line"><span class="attr">        username:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">        password:</span> <span class="string">xx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># developer enviroment</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">prod</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    impala:</span> </span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.cloudera.impala.jdbc41.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:impala://xx:21050/default</span></span><br><span class="line"><span class="attr">    oracle:</span></span><br><span class="line"><span class="attr">      first:</span></span><br><span class="line"><span class="attr">        driver-class-name:</span> <span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line"><span class="attr">        jdbc-url:</span> <span class="attr">jdbc:oracle:thin:@//xx:1521/pdb1.us.oracle.com</span></span><br><span class="line"><span class="attr">        username:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">        password:</span> <span class="string">xx</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>多数据源连接配置类</li>
</ol>
<ul>
<li>项目目录结构</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">src</span><br><span class="line">├───main</span><br><span class="line">│   ├───java</span><br><span class="line">│   │   └───com</span><br><span class="line">│   │       └───template</span><br><span class="line">│   │           ├───common      # 公共部分</span><br><span class="line">│   │           ├───config      # 配置、数据源</span><br><span class="line">│   │           ├───domain      # DO、DTO、VO</span><br><span class="line">│   │           ├───repository  # 数据库访问层</span><br><span class="line">│   │           ├───service     # 逻辑层</span><br><span class="line">│   │           │   └───impl    # 逻辑具体实现</span><br><span class="line">│   │           ├───util        # 工具类</span><br><span class="line">│   │           └───web         # api 接口</span><br><span class="line">│   └───resources</span><br><span class="line">│       ├───static              # 静态资源文件</span><br><span class="line">│       │   └───js              # 页面依赖的javascript 文件</span><br><span class="line">│       └───templates           # 页面模板文件</span><br><span class="line">└───test</span><br><span class="line">    └───java</span><br><span class="line">        └───com</span><br><span class="line">            └───template</span><br><span class="line">                ├───config</span><br><span class="line">                └───repository</span><br></pre></td></tr></table></figure>
<ul>
<li>多数据源配置类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.template.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"impalaDataSource"</span>)</span><br><span class="line">    <span class="meta">@Qualifier</span>(value = <span class="string">"impalaDataSource"</span>)</span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.impala"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"jdbcTemplateImpala"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">jdbcTemplateImpala</span><span class="params">(@Qualifier(<span class="string">"impalaDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"namedJdbcTemplateImpala"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> NamedParameterJdbcTemplate <span class="title">namedJdbcTemplateImpala</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @Qualifier(<span class="string">"impalaDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> NamedParameterJdbcTemplate(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"secondOracleDataSource"</span>)</span><br><span class="line">    <span class="meta">@Qualifier</span>(value = <span class="string">"secondOracleDataSource"</span>)</span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.oracle.first"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">firstOracleDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"jdbcTemplateOracle1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">jdbcTemplateOracle1</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @Qualifier(<span class="string">"secondOracleDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>测试类</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.template.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplateImpala;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testImpalaJdbcTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"impala jdbctemplate connection start:"</span>);</span><br><span class="line">        String sql = <span class="string">"select count(1) from t_info_iptvorder"</span>;</span><br><span class="line">        Integer count = jdbcTemplateImpala.queryForObject(sql, Integer.class);</span><br><span class="line">        log.info(<span class="string">"impalaJdbcTemplate query result :\t"</span> + count);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 多环境配置</title>
    <url>/SpringBoot/SpringBoot%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[SpringBoot 多环境配置
<a id="more"></a>
<h1 id="SpringBoot-多环境配置"><a href="#SpringBoot-多环境配置" class="headerlink" title="SpringBoot 多环境配置"></a><h3>SpringBoot 多环境配置</h3></h1><p>在开发环境、生产环境、测试环境中使用的配置也许有些不同，使用同一个配置文件时每次<code>package</code>前都需要修改成指定的环境配置。写该笔记已解决上述困，坑又被填平了一个….真好。    </p>
<p><strong>当前开发环境:</strong> <code>SpringBoot</code><br><strong>适用场景:</strong> 多环境指定配置参数    </p>
<blockquote>
<p>划重点</p>
</blockquote>
<ol>
<li>命名规范<code>application-xx.properties</code>或<code>appliction-xx.yml</code></li>
<li>使用当前配置构建的 <code>jar</code> 文件包含多环境的配置文件，可以通过<code>java -jar xx.jar  --spring.profiles.active=prod</code>命令加载指定的配置文件</li>
</ol>
<h2 id="多配制文件-推荐"><a href="#多配制文件-推荐" class="headerlink" title="多配制文件(推荐)"></a>多配制文件(推荐)</h2><p><strong>主文件</strong>    </p>
<p><code>application.yml</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev #指定应用`pacakage`时加载的文件名</span><br><span class="line">  mvc:</span><br><span class="line">    static-path-pattern: /**</span><br><span class="line">    view:</span><br><span class="line">      prefix: /WEB-INF/jsp/</span><br><span class="line">      suffix: .jsp</span><br><span class="line">  resources:</span><br><span class="line">    static-locations:</span><br><span class="line">    -  classpath:/static,classpath:/templates,file:$&#123;web.upload-path&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>开发环境</strong>        </p>
<p><code>application-dev.yml</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8090</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: oracle.jdbc.driver.OracleDriver</span><br><span class="line">    url: jdbc:oracle:thin:@192.168.203.158:1521/test</span><br><span class="line">    username: test</span><br><span class="line">    password: test</span><br><span class="line">  jpa:</span><br><span class="line">    hibernate:</span><br><span class="line">      ddl-auto: validate</span><br><span class="line">    show-sql: true</span><br></pre></td></tr></table></figure></p>
<p><strong>生产环境</strong>    </p>
<p><code>application-prod.yml</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8090</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: oracle.jdbc.driver.OracleDriver</span><br><span class="line">    url: jdbc:oracle:thin:@127.0.0.1:1521/test</span><br><span class="line">    username: 数据库用户名</span><br><span class="line">    password: 数据库密码</span><br><span class="line">  jpa:</span><br><span class="line">    hibernate:</span><br><span class="line">      ddl-auto: validate</span><br><span class="line">    show-sql: true</span><br></pre></td></tr></table></figure></p>
<h2 id="单配置文件"><a href="#单配置文件" class="headerlink" title="单配置文件"></a>单配置文件</h2><blockquote>
<p><code>application-conlony.yml</code> </p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">server-1</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">server-1</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    fetch-registry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="comment">#      defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://server-2:1002/eureka-server</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">1002</span></span><br><span class="line"><span class="attr">  spring:</span></span><br><span class="line"><span class="attr">    profiles:</span> <span class="string">server-2</span></span><br><span class="line"><span class="attr">  eureka:</span></span><br><span class="line"><span class="attr">    instance:</span></span><br><span class="line"><span class="attr">      hostname:</span> <span class="string">server-2</span></span><br><span class="line"><span class="attr">    client:</span></span><br><span class="line"><span class="attr">      register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      fetch-registry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      service-url:</span></span><br><span class="line">        <span class="comment">#      defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="attr">        defaultZone:</span> <span class="attr">http://server-1:1001/eureka-server</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动  </p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">使用`application-conlony.yml`</span> <span class="string">配置文件时,需要指定激活的配置项.(例如启动`server-1`,需运行`java</span> <span class="bullet">-jar</span> <span class="string">xx.jar</span> <span class="bullet">--spring.profiles.active=server-1`)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>properties</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 配置定时任务</title>
    <url>/SpringBoot/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[SpringBoot 配置定时任务
<a id="more"></a>
<h1 id="SpringBoot-创建定时任务"><a href="#SpringBoot-创建定时任务" class="headerlink" title="SpringBoot 创建定时任务"></a>SpringBoot 创建定时任务</h1><p><strong>要求</strong></p>
<pre><code>* 已创建SpringBoot项目
* JDK 版本 1.8 及以上(非必须)
* Maven 版本 3.2+
</code></pre><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>注: 进行 <code>选中项目右键 &gt; Maven &gt; Update Project</code> 操作后如果 JDK 版本被修改，在<code>pom.xml</code>中添加</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="启动类添加注解"><a href="#启动类添加注解" class="headerlink" title="启动类添加注解"></a>启动类添加注解</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定时任务注解</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(Application.class, args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建定时任务实现类"><a href="#创建定时任务实现类" class="headerlink" title="创建定时任务实现类"></a>创建定时任务实现类</h2><ol>
<li>定时任务  </li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SyncingTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Scheduled</span>(cron = <span class="string">"*/6 * * * * ?"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"this is scheduler task runing"</span> + (count++));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>定时任务  </li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Scheduled</span>(fixedRate = <span class="number">6000</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reportCurrentTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"现在时间："</span> + sdf.format(<span class="keyword">new</span> Date()));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>运行程序即可在控制台看到类似输出        </li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2018</span>-<span class="number">07</span>-<span class="number">16</span> <span class="number">16</span>:<span class="number">44</span>:<span class="number">57.045</span>  INFO <span class="number">9352</span> --- [  restartedMain] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found <span class="keyword">for</span> scheduled processing</span><br><span class="line">现在时间：<span class="number">16</span>:<span class="number">44</span>:<span class="number">57</span></span><br><span class="line"><span class="number">2018</span>-<span class="number">07</span>-<span class="number">16</span> <span class="number">16</span>:<span class="number">44</span>:<span class="number">57.045</span>  INFO <span class="number">9352</span> --- [  restartedMain] com.learning.Application  : Started Application in <span class="number">0.49</span> seconds (JVM running <span class="keyword">for</span> <span class="number">0.931</span>)</span><br><span class="line"><span class="keyword">this</span> is scheduler task runing0</span><br><span class="line">现在时间：<span class="number">16</span>:<span class="number">45</span>:<span class="number">03</span></span><br><span class="line"><span class="keyword">this</span> is scheduler task runing1</span><br><span class="line">现在时间：<span class="number">16</span>:<span class="number">45</span>:<span class="number">09</span></span><br><span class="line"><span class="keyword">this</span> is scheduler task runing2</span><br><span class="line">现在时间：<span class="number">16</span>:<span class="number">45</span>:<span class="number">15</span></span><br><span class="line"><span class="keyword">this</span> is scheduler task runing3</span><br><span class="line">现在时间：<span class="number">16</span>:<span class="number">45</span>:<span class="number">21</span></span><br></pre></td></tr></table></figure>
<ul>
<li>示例可参见官方地址    <a href="http://spring.io/guides/gs/scheduling-tasks/" target="_blank">Scheduling Tasks</a></li>
</ul>
<h2 id="Scheduled注解说明"><a href="#Scheduled注解说明" class="headerlink" title="@Scheduled注解说明"></a><code>@Scheduled</code>注解说明</h2><ul>
<li><code>@Scheduled(fixedRate = 5000)</code>：上次开始执行时间点之后5秒再执行</li>
<li><code>@Scheduled(fixedDelay = 5000)</code>：上次执行完毕时间点之后5秒再执行</li>
<li><code>@Scheduled(initialDelay = 1000, fixedRate = 5000)</code>：第一次延迟1秒后执行，之后按<code>fixedRate</code>的规则每5秒执行一次</li>
<li><code>@Scheduled(cron = &quot;*/6 * * * * *&quot;)</code>：通过<a href="https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html" target="_blank"> cron </a> 表达式定义规则</li>
</ul>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>EnableScheduling</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 图片上传</title>
    <url>/SpringBoot/SpringBoot%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[SpringBoot 图片上传
<a id="more"></a>
<h1 id="SpringBoot-实现图片上传功能"><a href="#SpringBoot-实现图片上传功能" class="headerlink" title="SpringBoot 实现图片上传功能"></a>SpringBoot 实现图片上传功能</h1><blockquote>
<p>SpringBoot 是为了简化Spring应用的创建、运行、测试、调试、部署等一系列问题而诞生的产物，自动装配的特性让我们可以更好的关注业务本事而不是外部的xml配置，我们只需遵循规范，引入相关的依赖就可以轻易搭建出一个web工程 </p>
</blockquote>
<p><strong>说明</strong></p>
<ul>
<li>文件上传控件较多，本文以引用<code>LayUI</code>图片上传控件为例</li>
<li>页面上传插件使用Layui的图片上传控件，<a href="http://www.layui.com/demo/upload.html" target="_blank">点击跳转</a>    </li>
<li>文件上传使用JQuery 的Ajax请求对应图片上传API，API返回包含图片路径格式的JSON数据    </li>
<li>上传图片路径并非在项目文件夹中，需配置静态资源文件路径    </li>
</ul>
<h2 id="配置文件上传控件"><a href="#配置文件上传控件" class="headerlink" title="配置文件上传控件"></a>配置文件上传控件</h2><blockquote>
<p>第一步：添加 <code>Layui</code> 的文件上传控件    </p>
</blockquote>
<ol>
<li><p>将<code>Layui</code>库添加进项目的静态资源文件夹中，在<code>src/main/resources/satic</code>文件夹下创建<code>layui</code>文件夹存放<code>Layui</code>库等资源文件;    </p>
</li>
<li><p><code>HTML</code>页面引用js及css文件，图片上传控件需要用到的资源有<code>jquery.mini.js/jquery.js、layer.js、layui.js、layui.css</code>。相关资源文件路径需要配置为项目具体引用路径或使用在线配置路径<code>layui</code>，详细内容可到<a href="http://www.layui.com" target="_blank"><code>layui官网</code></a>查看。</p>
</li>
<li><p>初始化插件及样式    </p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">layui.use(<span class="string">'upload'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $ = layui.jquery, upload = layui.upload;</span><br><span class="line">	<span class="comment">//普通图片上传</span></span><br><span class="line">	<span class="keyword">var</span> uploadInst = upload.render(&#123;</span><br><span class="line">		url : <span class="string">'../picture/uploadImg'</span><span class="comment">//图片上传action路径配置</span></span><br><span class="line">		,<span class="attr">data</span> : &#123;</span><br><span class="line">			folder : <span class="string">'hotel/'</span></span><br><span class="line">		&#125;,</span><br><span class="line">		before : <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">			<span class="comment">//预读本地文件示例，不支持ie8</span></span><br><span class="line">			obj.preview(<span class="function"><span class="keyword">function</span>(<span class="params">index, file,</span></span></span><br><span class="line"><span class="function"><span class="params">					result</span>) </span>&#123;</span><br><span class="line">				$(<span class="string">'#imgSrc'</span>).attr(<span class="string">'src'</span>, result); <span class="comment">//图片链接（base64）,显示缩略图</span></span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;,</span><br><span class="line">		done : <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (data.data.message == <span class="string">'success'</span>) &#123;</span><br><span class="line">				$(<span class="string">'#hotelPicture'</span>).val(</span><br><span class="line">						data.data.picUrl);<span class="comment">//设置图片相对路径，表单提交时提交图片url</span></span><br><span class="line">				<span class="keyword">return</span> layer.msg(<span class="string">'上传成功!'</span>)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">		error : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">			<span class="comment">//演示失败状态，并实现重传</span></span><br><span class="line">			<span class="keyword">var</span> demoText = $(<span class="string">'#demoText'</span>);</span><br><span class="line">			demoText</span><br><span class="line">					.html(<span class="string">'&lt;span style="color: #FF5722;"&gt;上传失败&lt;/span&gt; &lt;a class="layui-btn layui-btn-mini demo-reload"&gt;重试&lt;/a&gt;'</span>);</span><br><span class="line">			demoText.find(<span class="string">'.demo-reload'</span>).on(</span><br><span class="line">					<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">						uploadInst.upload();</span><br><span class="line">					&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">```	</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">##  修改配置文件 </span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&gt; 第二步: 修改配置文件 </span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">```properties</span></span><br><span class="line"><span class="regexp"># file write static resource path</span></span><br><span class="line"><span class="regexp">web.upload-path=F:/</span>temp/springboot/</span><br><span class="line"></span><br><span class="line">spring.mvc.static-path-pattern=<span class="comment">/**</span></span><br><span class="line"><span class="comment">spring.resources.static-locations=classpath:/templates/,classpath:/META-INF/resources/,classpath:/resources/,\</span></span><br><span class="line"><span class="comment">  classpath:/static/,classpath:/public/,file:$&#123;web.upload-path&#125;</span></span><br></pre></td></tr></table></figure>
<p>注： web.upload-path 为图片保存路径，若使用linux系统部署需要将绝对路径替换为相对路径。    例如：</p>
<h2 id="API-接口"><a href="#API-接口" class="headerlink" title="API 接口"></a>API 接口</h2><ul>
<li>在<code>SpringBoot 2.x</code>版本中,<a href="## 页面显示配置    ">页面静态资源配置</a>无法实现。故采用配置文件的方式实现了，可以忽略本文中的<code>页面显示配置</code>或采用其他的方式。</li>
</ul>
<blockquote>
<p>第三步：文件上传API    </p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置外部文件夹可通过HTTP访问图片,即配置静态资源路径</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  mvc:</span></span><br><span class="line">		<span class="attr">static-path-pattern:</span> <span class="string">/**</span></span><br><span class="line">	<span class="attr">web:</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="attr">      static-locations:</span> <span class="attr">classpath:/static/,file:/temp/fileupload/image</span></span><br><span class="line"><span class="comment"># 上传文件路径配置</span></span><br><span class="line"><span class="attr">web:</span></span><br><span class="line"><span class="attr">  upload:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">/temp/fileupload/image</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;web.upload.image&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String imageUrl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Title</span> uploading &lt;br&gt;</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Description</span> 上传背景图片&lt;br&gt;</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">	*</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> groupId</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span> java.lang.Object</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="meta">@PostMapping</span>(value = <span class="string">"uploading"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">uploading</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 图片保存到数据库的相对路径</span></span><br><span class="line">	String filePath = <span class="keyword">this</span>.saveImages(file);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 根据实际情况修改返回值</span></span><br><span class="line">	Map&lt;String ,Object&gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">	s.put(<span class="string">"filePath"</span>,filePath)</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> ResponseDTO&lt;&gt;(Boolean.TRUE, result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Title</span> saveImages &lt;br&gt;</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Description</span> 保存视频文件 &lt;br&gt;</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">	*</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> image</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span> java.lang.String 例如(image/20210122/20210122130940421.jpg)</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">saveImages</span><span class="params">(MultipartFile image)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获取原文件名</span></span><br><span class="line">	String name = image.getOriginalFilename();</span><br><span class="line">	<span class="comment">// 获取文件后缀</span></span><br><span class="line">	String subffix = name.substring(name.lastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>, name.length());</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 日期文件夹</span></span><br><span class="line">	String nowFolder = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>).format(<span class="keyword">new</span> Date());</span><br><span class="line">	<span class="comment">// 新的文件名以日期命名:</span></span><br><span class="line">	String fileName = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMddHHmmssSSS"</span>).format(<span class="keyword">new</span> Date()) + <span class="string">"."</span> + subffix;</span><br><span class="line">	<span class="comment">// 获取项目路径到webapp</span></span><br><span class="line">	String filepath = imageUrl + <span class="string">"/"</span> + nowFolder;</span><br><span class="line">	File file = <span class="keyword">new</span> File(filepath);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 文件路径不存在时,创建文件夹(可创建多层文件夹)</span></span><br><span class="line">	<span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">		file.mkdirs();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 实际保存路径</span></span><br><span class="line">	filepath += (<span class="string">"/"</span> + fileName);</span><br><span class="line">	<span class="comment">// 保存文件</span></span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		image.transferTo(<span class="keyword">new</span> File(filepath));</span><br><span class="line">	&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 保存数据库的相对路径</span></span><br><span class="line">	String relativePath = <span class="string">"image/"</span> + nowFolder + <span class="string">"/"</span> + fileName;</span><br><span class="line">	<span class="keyword">return</span> relativePath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="页面显示配置"><a href="#页面显示配置" class="headerlink" title="页面显示配置"></a>页面显示配置</h2><blockquote>
<p>第四步：图片在前端页面显示路径配置，不配置显示不了图片    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebAppConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;web.upload.image&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String imgPath;<span class="comment">//application.properties中的文件资源位置</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片访问方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(imgPath.equals(<span class="string">""</span>) || imgPath.equals(<span class="string">"$&#123;web.upload.image&#125;"</span>))&#123;</span><br><span class="line">            String imagesPath = WebAppConfig.class.getClassLoader().getResource(<span class="string">""</span>).getPath();</span><br><span class="line">            <span class="keyword">if</span>(imagesPath.indexOf(<span class="string">".jar"</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                imagesPath = imagesPath.substring(<span class="number">0</span>, imagesPath.indexOf(<span class="string">".jar"</span>));</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(imagesPath.indexOf(<span class="string">"classes"</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                imagesPath = <span class="string">"file:"</span>+imagesPath.substring(<span class="number">0</span>, imagesPath.indexOf(<span class="string">"classes"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            imagesPath = imagesPath.substring(<span class="number">0</span>, imagesPath.lastIndexOf(<span class="string">"/"</span>))+<span class="string">"/images/"</span>;</span><br><span class="line">            imgPath = imagesPath;</span><br><span class="line">        &#125;</span><br><span class="line">        LoggerFactory.getLogger(WebAppConfig.class).info(<span class="string">"imagesPath="</span>+imgPath);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/images/**"</span>).addResourceLocations(imgPath);</span><br><span class="line">        <span class="keyword">super</span>.addResourceHandlers(registry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>EnableScheduling</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 整合在线API(Swagger2)</title>
    <url>/SpringBoot/Swagger2/SpringBoot%E6%95%B4%E5%90%88Swagger2/</url>
    <content><![CDATA[SpringBoot 整合在线API(Swagger2)
<a id="more"></a>
<h1 id="SpringBoot-整合-Swagger2"><a href="#SpringBoot-整合-Swagger2" class="headerlink" title="SpringBoot 整合 Swagger2"></a>SpringBoot 整合 Swagger2</h1><h2 id="创建SpringBoot-项目"><a href="#创建SpringBoot-项目" class="headerlink" title="创建SpringBoot 项目"></a>创建SpringBoot 项目</h2><blockquote>
<p>第一步：创建SpringBoot项目，启动应用看是否能够启动    </p>
</blockquote>
<blockquote>
<p>第二步：修改 pom.xml 为项目增加Swagger2支持   </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="配置类"><a href="#配置类" class="headerlink" title="配置类"></a>配置类</h2><blockquote>
<p>第三步：配置 Swagger2 配置类     </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger2</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置需要扫描的注解包路径</span></span><br><span class="line"><span class="keyword">private</span> String basePackage=<span class="string">"com.swagger.learing.controller"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Docket <span class="title">creatRestApi</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">.apiInfo(apiInfo())</span><br><span class="line">.select()</span><br><span class="line">.apis(RequestHandlerSelectors.basePackage(<span class="keyword">this</span>.basePackage))</span><br><span class="line">.paths(PathSelectors.any())</span><br><span class="line">.build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 文档创建描述</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">			.title(<span class="string">"API文档标题"</span>)</span><br><span class="line">			.description(<span class="string">"xx相关API"</span>)</span><br><span class="line">			.termsOfServiceUrl(<span class="string">"http://127.0.0.1:xx/swagger-ui.html"</span>;)</span><br><span class="line">			.contact(<span class="keyword">new</span>  Contact(<span class="string">"name"</span>,<span class="string">"url"</span>;,<span class="string">"email"</span>))</span><br><span class="line">				.version(<span class="string">"版本号"</span>)</span><br><span class="line">			.build();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注解说明：</strong>    </p>
<ul>
<li><p><code>@Configuration</code>    声明类为配置类    </p>
</li>
<li><p><code>@EnableSwagger2</code>    用于开启Swagger注解    </p>
</li>
</ul>
<h2 id="设置-Controller-层注解"><a href="#设置-Controller-层注解" class="headerlink" title="设置 Controller 层注解"></a>设置 Controller 层注解</h2><blockquote>
<p>第四步: 为UserVo(返回结果实体)类添加 Swagger2 注解    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.swagger.learing.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModel</span>(value = <span class="string">"用户模型实体类"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"账户"</span>, required = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">private</span> String account;</span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"姓名"</span>, required = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>, required = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">private</span> String nickName;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserVo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserVo</span><span class="params">(String account, String name, String nickName)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.account = account;</span><br><span class="line">	<span class="keyword">this</span>.name = name;</span><br><span class="line">	<span class="keyword">this</span>.nickName = nickName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccount</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.account = account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getNickName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> nickName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickName</span><span class="params">(String nickName)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.nickName = nickName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"UserVo&#123;"</span> +</span><br><span class="line">	<span class="string">"account='"</span> + account + <span class="string">'\''</span> +</span><br><span class="line">	<span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">	<span class="string">", nickName='"</span> + nickName + <span class="string">'\''</span> +</span><br><span class="line">	<span class="string">'&#125;'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>第五步：为Controller添加 Swagger2 生成在线API文档注解 </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.swagger.learing.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.swagger.learing.domain.UserVo;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"user"</span>)</span><br><span class="line"><span class="meta">@Api</span>(<span class="string">"userController相关Api"</span>)</span><br><span class="line"><span class="meta">@EnableSwagger</span>2 <span class="comment">// 设置可被swagger识别显示</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 获取用户list</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(<span class="string">"获取用户相关信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"userName"</span>, dataType = <span class="string">"String"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户的姓名"</span>, defaultValue = <span class="string">"张飞"</span>),</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"password"</span>, dataType = <span class="string">"String"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户的密码"</span>, defaultValue = <span class="string">"wangga"</span>) &#125;)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径没有或者页面跳转路径错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"/getUser"</span>, method = RequestMethod.POST)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;UserVo&gt; <span class="title">getUser</span><span class="params">(@RequestParam(<span class="string">"userName"</span>)</span> String userName, @<span class="title">RequestParam</span><span class="params">(<span class="string">"password"</span>)</span> String password) </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">"logger.in:getUser---------"</span>);</span><br><span class="line">		UserVo info = <span class="keyword">new</span> UserVo(<span class="string">"test01"</span>, <span class="string">"测试账户一"</span>, <span class="string">"士兵"</span>);</span><br><span class="line">		UserVo info2 = <span class="keyword">new</span> UserVo(<span class="string">"test02"</span>, <span class="string">"测试账户二"</span>, <span class="string">"将领"</span>);</span><br><span class="line">		UserVo info3 = <span class="keyword">new</span> UserVo(<span class="string">"test03"</span>, <span class="string">"测试账户三"</span>, <span class="string">"元帅"</span>);</span><br><span class="line"></span><br><span class="line">		List&lt;UserVo&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		list.add(info);</span><br><span class="line">		list.add(info2);</span><br><span class="line">		list.add(info3);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> list;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 查询用户详细信息</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(value = <span class="string">"查询用户详细信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"path"</span>, name = <span class="string">"id"</span>, dataType = <span class="string">"long"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户id"</span>, defaultValue = <span class="string">"1"</span>)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径没有或者页面跳转路径错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"queryUserInfo/&#123;id&#125;"</span>, method = RequestMethod.POST)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> UserVo <span class="title">queryUserInfo</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Long id) </span>&#123;</span><br><span class="line">		UserVo info = <span class="keyword">new</span> UserVo(<span class="string">"test"</span> + id, <span class="string">"00"</span> + id, <span class="string">"鼠标"</span> + id);</span><br><span class="line">		<span class="keyword">return</span> info;</span><br><span class="line">	&#125;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 修改用户信息</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> userVo</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(value = <span class="string">"修改用户信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"id"</span>, dataType = <span class="string">"long"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户id"</span>, defaultValue = <span class="string">"1"</span>),</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"body"</span>, name = <span class="string">"User"</span>, dataType = <span class="string">"User"</span>, value = <span class="string">"修改的用户信息"</span>) &#125;)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径没有或者跳转页面错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"modifyUserInfo"</span>, method = RequestMethod.POST)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">modifyUserInfo</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span> Long id, @RequestBody UserVo userVo) </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">"-----------modifyUserInfo:"</span> + userVo.toString());</span><br><span class="line">		userVo.setAccount(++id + <span class="string">""</span>);</span><br><span class="line">		<span class="keyword">return</span> JSON.toJSONString(userVo);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 删除用户信息</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(value = <span class="string">"删除用户信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"path"</span>, name = <span class="string">"id"</span>, dataType = <span class="string">"long"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户id"</span>, defaultValue = <span class="string">"1"</span>)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径异常,或者跳转页面错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"delUserById/&#123;id&#125;"</span>, method = RequestMethod.DELETE)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">delUserById</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>, required = <span class="keyword">true</span>)</span> Long id) </span>&#123;</span><br><span class="line">		System.err.print(<span class="string">"-----del"</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>按上述步骤配置，项目启动后访问地址：<a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html</a></p>
<p>页面访问效果如下：</p>
]]></content>
      <categories>
        <category>SpringBoot</category>
        <category>Swagger2</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Swagger2</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 在线文档地址</title>
    <url>/SpringBoot/SpringBoot%E6%96%87%E6%A1%A3%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[SpringBoot 在线文档地址
<a id="more"></a>
<h1 id="SpringBoot-在线文档地址"><a href="#SpringBoot-在线文档地址" class="headerlink" title="SpringBoot 在线文档地址"></a>SpringBoot 在线文档地址</h1><p><a href="https://docs.spring.io/spring-boot/docs/1.5.14.RELEASE/reference/htmlsingle/" target="_blank">英文版</a><br><a href>中文版</a></p>
<h2 id="15-1-在main函数类中使用-Import注解"><a href="#15-1-在main函数类中使用-Import注解" class="headerlink" title="15.1 在main函数类中使用@Import注解"></a>15.1 在<code>main</code>函数类中使用<code>@Import</code>注解</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You need not put all your @Configuration into a single class. The @Import annotation can be used to import additional configuration classes. Alternatively, you can use @ComponentScan to automatically pick up all Spring components, including @Configuration classes.</span><br></pre></td></tr></table></figure>
<p>释义：<br>  您无需将所有@Configuration放入单个类中。 @Import注释可用于导入其他配置类。或者，您可以使用@ComponentScan自动获取所有Spring组件，包括@Configuration类。         </p>
<h2 id="24-56-使用Java类加载-配置文件参数值"><a href="#24-56-使用Java类加载-配置文件参数值" class="headerlink" title="24.56 使用Java类加载 配置文件参数值"></a>24.56 使用<code>Java</code>类加载 配置文件参数值</h2><blockquote>
<p>配置类    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="meta">@ConfigurationProperties</span>(<span class="string">"foo"</span>)</span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FooProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;MyPojo&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	    <span class="function"><span class="keyword">public</span> List&lt;MyPojo&gt; <span class="title">getList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	        <span class="keyword">return</span> <span class="keyword">this</span>.list;</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	&#125;	</span><br><span class="line">```	</span><br><span class="line">* 注: 推荐使用构造函数的方式注入属性值</span><br><span class="line"></span><br><span class="line">&gt; 配置文件 	</span><br><span class="line"></span><br><span class="line">```yml</span><br><span class="line">foo:</span><br><span class="line">  list:</span><br><span class="line">    - name: my name</span><br><span class="line">      description: my description</span><br><span class="line">---</span><br><span class="line">spring:</span><br><span class="line">  profiles: dev</span><br><span class="line">foo:</span><br><span class="line">  list:</span><br><span class="line">    - name: my another name</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Document</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot Log</title>
    <url>/SpringBoot/SpringBoot%E7%88%AC%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[SpringBoot Log
<a id="more"></a>
<blockquote>
<p><code>Transactional</code>事务回滚        </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法上增加注解</span></span><br><span class="line"><span class="meta">@Transactional</span>(rollbackOn = Exception.class)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">example</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		<span class="comment">// 设置异常时执行回滚</span></span><br><span class="line">		TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置类序列化失败        </p>
</blockquote>
<p>问题描述：</p>
<pre><code>将配置类使用 JackSon 序列化时，出现序列化异常
</code></pre><blockquote>
<p><code>SpringBoot</code>请求跨域    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learnning.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: CustomCORSConfiguration</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 配置跨域请求访问失败的问题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/11/21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomCORSConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> CorsConfiguration <span class="title">buildConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		CorsConfiguration corsConfiguration = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">		corsConfiguration.addAllowedOrigin(<span class="string">"*"</span>);</span><br><span class="line">		corsConfiguration.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line">		corsConfiguration.addAllowedMethod(<span class="string">"*"</span>);</span><br><span class="line">		<span class="keyword">return</span> corsConfiguration;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> CorsFilter <span class="title">corsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">		source.registerCorsConfiguration(<span class="string">"/**"</span>, buildConfig());</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> CorsFilter(source);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>注: 引用链接: <a href="http://www.itmuch.com/work/cors/" target="_blank">周立解决方案</a>        </li>
</ul>
<blockquote>
<p><code>SpringBoot JPA</code>查询传参    </p>
</blockquote>
<ol>
<li>使用占位符<code>?</code>    </li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select account_id,user_name,validity from t_account where account_id = ?"</span>, nativeQuery = <span class="keyword">true</span>)</span><br><span class="line"><span class="function">User <span class="title">findByAccount_id</span><span class="params">(Long account_id)</span></span>;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>使用命名化参数<code>:name</code> </li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select account_id,user_name,validity from t_account where account_id =:id"</span>, nativeQuery = <span class="keyword">true</span>)</span><br><span class="line"><span class="function">User <span class="title">findByAccount_id</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Long account_id)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>注: 参考<a href="http://www.spring4all.com/article/464" target="_blank">Spring Data JPA系列: 使用@Query注解（Using @Query）</a></li>
</ul>
<blockquote>
<p>自定义<code>SpringBoot web</code>页面图标</p>
</blockquote>
<ol>
<li><p>将图标放在<code>/src/main/resources/static/</code>目录下(推荐使用<code>favicon.ico</code>名字,符合<code>*.ico</code>即可)</p>
</li>
<li><p>在需要替换图标的页面加入以下标签</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"icon"</span> type=<span class="string">"image/x-icon"</span> th:href=<span class="string">"@&#123;/favicon.ico&#125;"</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>注:</strong>该方式为最简单的实现,可以根据自身情况做调整。更改相应的相对路径即可,可自行尝试。</p>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Apply</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot + logback 日志配置</title>
    <url>/SpringBoot/SpringBoot%E9%85%8D%E7%BD%AElogback/</url>
    <content><![CDATA[SpringBoot + logback 日志配置
<a id="more"></a>
<h1 id="SpringBoot-使用-logback-spring-xml-生成日志文件"><a href="#SpringBoot-使用-logback-spring-xml-生成日志文件" class="headerlink" title="SpringBoot 使用 logback-spring.xml 生成日志文件"></a><code>SpringBoot</code> 使用 <code>logback-spring.xml</code> 生成日志文件</h1><ul>
<li>注: </li>
</ul>
<p><a href="https://blog.csdn.net/inke88/article/details/75007649" target="_blank">参考配置1</a><br><a href="https://blog.battcn.com/2018/04/23/springboot/v2-config-logs" target="_blank">参考配置2</a></p>
<h2 id="logback配置文件命名"><a href="#logback配置文件命名" class="headerlink" title="logback配置文件命名"></a><code>logback</code>配置文件命名</h2><blockquote>
<p>自定义日志配置        </p>
</blockquote>
<ul>
<li>创建名为 <code>logback.xml</code>、<code>logback-xxx.xml</code>的文件,需要在 <code>application.yml/application.properties</code>文件中指定加载的配置文件路径        </li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  config:</span> <span class="attr">classpath:logback.xml</span></span><br></pre></td></tr></table></figure>
<ul>
<li>注：官方推荐将<code>logback-spring.xml</code>放在根目录下,可以省略上述步骤. </li>
</ul>
<h2 id="logback-spring-xml配置"><a href="#logback-spring-xml配置" class="headerlink" title="logback-spring.xml配置"></a><code>logback-spring.xml</code>配置</h2><ol>
<li>在<code>application.yml</code>中指定日志文件输出路径、文件名        </li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">logback:</span> </span><br><span class="line"><span class="attr">  logdir:</span> <span class="attr">D:/project/logs</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">project</span></span><br></pre></td></tr></table></figure>
<ul>
<li>注: 当前环境为<code>window</code>为包含盘符的绝对路径,<code>linux</code>环境需要修改为不含盘符的绝对路径</li>
</ul>
<ol start="2">
<li><code>logback-spring.xml</code>配置文件内容    </li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"tue"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- application.yml 传递参数，不能使用logback 自带的&lt;property&gt;标签 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 日志输出路径,在yml文件中配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"logdir"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">source</span>=<span class="string">"logback.logdir"</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 文件名 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"logName"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">source</span>=<span class="string">"logback.name"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 输出到控制台 Consoleappender --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"consoleLog"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 展示格式 layout --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.PatternLayout"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy/MM/dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- infoLog 输出 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"fileInfoLog"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 如果只是想要 info 级别的日志,只是过滤 info 还是会输出 error 日志,因为 Error 的日志级别更高。 使用下面的策略,可以避免输出 </span></span><br><span class="line"><span class="comment">			Error 日志 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 过滤 Error --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 匹配到就禁止 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 没有匹配到就允许 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 日志名称,如果没有 File 属性,name只会使用FileNamePattern的文件路径规则 如果同时又&lt;File&gt;和&lt;FileNamePattern&gt;,那么当天日志时&lt;File&gt;.明天会自动把今天的日志名改为今天的日期 </span></span><br><span class="line"><span class="comment">			即：&lt;File&gt; 的日志都是当天的。 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logdir&#125;/info.$&#123;logName&#125;.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 滚动策略,按照时间滚动 TimeBasedRollingPolicy --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">rollingPolicy</span></span></span><br><span class="line"><span class="tag">			<span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 文件路径,定义了日志的切分方式 把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;logdir&#125;/info.$&#123;logName&#125;.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 设置 日志保留时间 30天 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 用来指定日志文件的上限大小,到上限之后会删除旧日志 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;totalSizeCap&gt;1GB&lt;/totalSizeCap&gt; --&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 日志输出编码格式化 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy/MM/dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Error 级别日志文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"fileErrorLog"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 如果只是想要 Error 级别的日志,那么需要过滤一下.默认是info 级别的,ThresholdFilter --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">level</span>&gt;</span>Error<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 日志名称,如果没有 File 属性,name只会使用FileNamePattern的文件路径规则 如果同时又&lt;File&gt;和&lt;FileNamePattern&gt;,那么当天日志时&lt;File&gt;.明天会自动把今天的日志名改为今天的日期 </span></span><br><span class="line"><span class="comment">			即：&lt;File&gt; 的日志都是当天的。 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logdir&#125;/error.$&#123;logName&#125;.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 滚动策略,按照时间滚动 TimeBasedRollingPolicy --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">rollingPolicy</span></span></span><br><span class="line"><span class="tag">			<span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 文件路径,定义了日志的切分方式 把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;logdir&#125;/error.$&#123;logName&#125;.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 设置 日志保留时间 30天 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 用来指定日志文件的上限大小,到上限之后会删除旧日志 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;totalSizeCap&gt;1GB&lt;/totalSizeCap&gt; --&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 日志输出编码格式化 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy/MM/dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 开发环境日志级别为DEBUG ,可以使用逗号分隔列表指定多个配置文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"dev"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"consoleLog"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileInfoLog"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileErrorLog"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"test,prod"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"consoleLog"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileInfoLog"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileErrorLog"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="配置文件标签说明"><a href="#配置文件标签说明" class="headerlink" title="配置文件标签说明"></a>配置文件标签说明</h3><blockquote>
<ol>
<li>根节点<code>&lt;configuration&gt;</code>包含的属性    </li>
</ol>
</blockquote>
<ul>
<li>scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。</li>
<li>scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。</li>
<li>debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。        </li>
</ul>
<ul>
<li>注:  依照本文配置,可在指定路径中生成自定义的日志文件名(<code>info</code>与<code>error</code>日志分开,默认当前日志为<code>application.yml</code>中的<code>logging.name</code>作为文件名可自行定义)。历史日志文件名 增加日期格式 </li>
</ul>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Logback</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot配置文件详解</title>
    <url>/SpringBoot/SpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<p>SpringBoot自定义配置文件内容获取<br><a id="more"></a></p>
<h1 id="SpringBoot配置文件内容获取"><a href="#SpringBoot配置文件内容获取" class="headerlink" title="SpringBoot配置文件内容获取"></a><code>SpringBoot</code>配置文件内容获取</h1><blockquote>
<p>前提</p>
</blockquote>
<ol>
<li>添加以下依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="新建实体类获取application-yml-applicaiton-properties配置文件内容"><a href="#新建实体类获取application-yml-applicaiton-properties配置文件内容" class="headerlink" title="新建实体类获取application.yml/applicaiton.properties配置文件内容"></a>新建实体类获取<code>application.yml/applicaiton.properties</code>配置文件内容</h2><ol>
<li><code>@Component</code>、<code>@ConfigurationProperties</code> 注解</li>
</ol>
<blockquote>
<h5><code>application.yml</code>配置文件</h5>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">9099</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">markdown</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h5>实体类</h5>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserConfig</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String age;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 省略get/set 方法 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<h5>测试类</h5>
</blockquote>
<ul>
<li>测试是否能够正确获取配置文件内容</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> UserConfig properties;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">propertiesTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(properties.name() + <span class="string">"\t"</span> + properties.getAge());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><code>@Component</code>、<code>@Value</code> 注解</li>
</ol>
<ul>
<li><code>application.yml/application.properties</code> 文件内容不变</li>
</ul>
<blockquote>
<h5>实体类</h5>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User2Config</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Value</span>(value = <span class="string">"$&#123;user.url&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Value</span>(value = <span class="string">"$&#123;user.age&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> String age;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 省略get/set 方法 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<h5>测试类</h5>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User2ConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> User2Config properties;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">propertiesTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(properties.name() + <span class="string">"\t"</span> + properties.getAge());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建实体类获取自定义-xx-properties-配置文件内容"><a href="#创建实体类获取自定义-xx-properties-配置文件内容" class="headerlink" title="创建实体类获取自定义(xx.properties)配置文件内容"></a>创建实体类获取自定义(<code>xx.properties</code>)配置文件内容</h2><ul>
<li>注: 自定义配置文件最好还是使用<code>.properties</code>格式的文件,注解方式还不支持手动加载<code>.yml</code>格式文件的功能</li>
</ul>
<ol>
<li><code>@Configuration</code>注解替换<code>@Component</code>注解,<code>@PropertySource(&quot;classpath:xx.properties&quot;)</code></li>
</ol>
<blockquote>
<h5>创建自定义配置文件<code>my.properties</code></h5>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 高德——地理编码</span><br><span class="line">geo.url= http://restapi.amap.com/v3/geocode/geo</span><br><span class="line">geo.key= 11111</span><br></pre></td></tr></table></figure>
<blockquote>
<h5>实体类</h5>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:geocode.properties"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeocodingProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Value</span>(value = <span class="string">"$&#123;geo.url&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Value</span>(value = <span class="string">"$&#123;geo.key&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*省略get/set方法*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<h5>测试类</h5>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeoCodingUtilTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> GeocodingProperties properties;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">propertiesTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(properties.getKey() + <span class="string">"\t"</span> + properties.getUrl());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>配置文件可创建在<code>resource</code>中的文件夹下,使用相对根目录的文件夹即可(默认<code>resources/</code>为根目录)</li>
</ul>
<h2 id="Configuration、-PropertySource、-ConfigurationProperties"><a href="#Configuration、-PropertySource、-ConfigurationProperties" class="headerlink" title="@Configuration、@PropertySource、@ConfigurationProperties"></a><code>@Configuration</code>、<code>@PropertySource</code>、<code>@ConfigurationProperties</code></h2><ul>
<li>注: 使用<code>@configuration</code>与<code>@ConfigurationProperties</code>注解时,需要在启动类(<code>Application.java</code>)中增加<code>@EnableConfigurationProperties(PhoneProperties.class)</code>注解。</li>
</ul>
<blockquote>
<p>配置文件</p>
</blockquote>
<ul>
<li>配置文件路径<code>resources/properties/phone.properties&quot;)</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">phone.model= iPhone <span class="number">8</span> Plus</span><br><span class="line">phone.price= <span class="number">5266</span></span><br><span class="line">phone.system= iOS <span class="number">12.2</span>.x</span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动类    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(PhoneProperties.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(Application.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置文件实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource</span>(value = <span class="string">"classpath:properties/phone.properties"</span>)</span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"phone"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PhoneProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String model;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Double price;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String system;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*省略get/set、toString()方法*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>测试类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PhonePropertiesTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> PhoneProperties phoneProperties;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">phonePropertiesTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(phoneProperties.toString());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用Environment方法获取配置文件的值"><a href="#使用Environment方法获取配置文件的值" class="headerlink" title="使用Environment方法获取配置文件的值"></a>使用<code>Environment</code>方法获取配置文件的值</h2><blockquote>
<p>注解说明  </p>
</blockquote>
<ul>
<li><p><code>@Component</code></p>
<ol>
<li><p>将普通的<code>pojo</code>实例化到<code>Spring</code>容器中,相当于<code>xml</code>配置文件中的<code>&lt;bean id=&quot;&quot; class=&quot;&quot;/&gt;</code>;</p>
</li>
<li><p>泛指组件,当组件不好归类的的时候,可以使用这个组件。</p>
</li>
</ol>
</li>
<li><p><code>@Configutration</code></p>
<ol>
<li><p>用于定义配置类;</p>
</li>
<li><p><code>@Configuration</code> 中所有带<code>@Bean</code>注解的方法都会被动态代理,因此调用该方法返回的都是同一个实例。</p>
</li>
<li><p><code>@Component</code> 与 <code>@Component</code> 区别详细介绍,<a href="https://blog.csdn.net/isea533/article/details/78072133" target="_blank"><code>Spring @Configuration 和 @Component</code>区别</a></p>
</li>
</ol>
</li>
<li><p><code>@PropertySource</code></p>
<ol>
<li>通过注解的方式将<code>properties</code>配置文件中的值存储到<code>Spring</code>的<code>Enviroment</code>中,<code>Environment</code>接口提供方法去读取配置文件中的值,参数时<code>properties</code>文件中定义的<code>key</code>值。</li>
</ol>
</li>
<li><p><code>@ConfigurationProperties</code></p>
<ol>
<li><p>将同类的配置信息封装成实体类;</p>
</li>
<li><p>与<code>@ConfigurationProperties</code>一起使用时,需要在启动类增加<code>@EnableConfigurationProperties</code>注解并制定该实体类为配置类 或 使用<code>@Component</code>注解替代<code>@Configuration</code>注解。</p>
</li>
</ol>
</li>
<li><p><code>@Value</code></p>
<ol>
<li><p><code>@value</code>属性名,在属性名上添加该注解;</p>
</li>
<li><p>默认读取的配置文件是<code>application.yml/application.properties</code>,可在<code>@RestController/@Controller</code>中获取配置。</p>
</li>
</ol>
</li>
</ul>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="在非Controller-中无法获取配置类-或-注入相应注解"><a href="#在非Controller-中无法获取配置类-或-注入相应注解" class="headerlink" title="在非Controller 中无法获取配置类 或 注入相应注解"></a><h5>在非<code>Controller</code> 中无法获取配置类 或 注入相应注解</h5></h3><ul>
<li>在工具类中,获取<code>RestTemplate</code>注解以及自定义配置文件为例</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Point 1: 使用类注解`@Conponent`</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeoCodingUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> GeocodingProperties properties;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Point 2: 将本类设置为属性</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> GeoCodingUtil geoCodingUtil;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@PostConstruct</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		geoCodingUtil = <span class="keyword">this</span>;</span><br><span class="line">		geoCodingUtil.properties = <span class="keyword">this</span>.properties;</span><br><span class="line">		geoCodingUtil.restTemplate = <span class="keyword">this</span>.restTemplate;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 调用示例</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getProperties</span><span class="params">()</span></span>&#123;</span><br><span class="line">		System.out.println(geoCodingUtil.properties.getUrl());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注解说明</p>
</blockquote>
<ul>
<li><p><code>@PostConstruct</code></p>
<ol>
<li>被<code>@PostConstruct</code>修饰的方法会在服务器加载<code>Servlet</code>的时候运行,并且只会被服务器调用一次，类似于<code>Servlet</code>的<code>init()</code>方法。被<code>@PostContruct</code>修饰的方法会在构造函数之后,<code>init()</code>方法之前运行。</li>
<li><code>@PostContruct</code> 注释的<code>init()</code>方法,会在<code>@Configuration</code>配置之前运行。例如: 在执行预加载函数前,需要加载配置项则需要<code>implements CommandLineRunner</code>接口,若使用<code>@PostContruct</code>则只有在<code>init()</code>方法执行完才能获取<code>@Configuration</code>注解的自定义配置项。</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot配置https(xx.Jar、xx.war)</title>
    <url>/SpringBoot/SpringBoot%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8https%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[SpringBoot配置https(xx.Jar、xx.war)
<a id="more"></a>
<h1 id="SpringBoot配置https-与-War包配置https"><a href="#SpringBoot配置https-与-War包配置https" class="headerlink" title="SpringBoot配置https 与 War包配置https"></a>SpringBoot配置https 与 War包配置https</h1><p>参考地址：<a href="https://blog.csdn.net/u012702547/article/details/53790722" target="_blank" rel="noopener">https://blog.csdn.net/u012702547/article/details/53790722</a></p>
<h2 id="SpringBoot-项目配置-jar"><a href="#SpringBoot-项目配置-jar" class="headerlink" title="SpringBoot 项目配置 *.jar"></a>SpringBoot 项目配置 *.jar</h2><blockquote>
<p>第一步：生成加密证书     </p>
</blockquote>
<ul>
<li>方法：使用Java自带的命令,在cmd中执行以下语句  </li>
</ul>
<p><code>keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650</code></p>
<blockquote>
<p>参数说明    </p>
</blockquote>
<ol>
<li>-storetype    指定秘钥仓库类型    </li>
<li>-keyalg        指定证书生成算法签名，RSA是一种非对称加密算法     </li>
<li>-keysize     证书大小     </li>
<li>-keystore    生成证书文件的存储路径     </li>
<li>-validity    证书有效期     </li>
</ol>
<blockquote>
<p>第二步：修改项目配置 </p>
</blockquote>
<ul>
<li>执行上述命令后，可在当前系统登录用户根目录下找到<code>keystore.p12</code>文件。<u><em>将文件复制到springboot项目根目录下.</em></u><br>同时需要对application.yml文件作出修改，增加如下内容。(也可使用xx.properties文件，文本内容修改为properties文件格式即可) </li>
</ul>
<blockquote>
<p>配置文件修改(.yml格式文件，.properties文件修改只是使用了不同的书写方式如有不懂请自行百度) </p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">	<span class="attr">ssl:</span></span><br><span class="line">		<span class="attr">key-store:</span> <span class="string">keystore.p12</span></span><br><span class="line">		<span class="attr">key-store-password:</span> <span class="number">111111</span></span><br><span class="line">		<span class="attr">key-store-type:</span> <span class="string">PKCS12</span></span><br><span class="line">		<span class="attr">key-alias:</span> <span class="string">tomcat</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Tomcat-部署-SpringBoot-war-文件"><a href="#Tomcat-部署-SpringBoot-war-文件" class="headerlink" title="Tomcat 部署 SpringBoot *.war 文件"></a>Tomcat 部署 SpringBoot *.war 文件</h2><blockquote>
<p>第一步：生成加密证书</p>
</blockquote>
<ul>
<li>方法：使用Java自带的命令,在cmd中执行以下语句  </li>
</ul>
<p><code>keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650</code></p>
<blockquote>
<p>第二步：  </p>
</blockquote>
<ol>
<li>注释 8080 (tomcat默认端口为8080,如果修改为其他端口则注释修改后的端口)  </li>
</ol>
<p><code>&lt;!-- &lt;Connector port=&quot;7090&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot;   redirectPort=&quot;8443&quot; /&gt; --&gt;</code></p>
<ol start="2">
<li>取消注释 8433 端口配置,并修改为 443 端口(访问可不加端口设置)，修改tomcat中<br><code>D:\Environment\Tomcat\apache-tomcat-8.0.50\conf\server.xml</code> 需做如下配置。(tomcat路径为发布war文件的server.xml)</li>
</ol>
<p><code>keystoreFile=&quot;D:\Environment\Tomcat\apache-tomcat-8.5.31\conf\keystore.p12&quot;     keystorePass=&quot;111111&quot;</code></p>
<ul>
<li>注：修改后如下</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"443"</span> <span class="attr">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span> <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">keystoreFile</span>=<span class="string">"D:\Environment\Tomcat\apache-tomcat-8.5.31\conf\keystore.p12"</span> <span class="attr">keystorePass</span>=<span class="string">"111111"</span> &gt;</span>   </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;SSLHostConfig&gt;</span></span><br><span class="line"><span class="comment">            &lt;Certificate certificateKeystoreFile="conf/localhost-rsa.jks" type="RSA" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;/SSLHostConfig&gt;</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Connector</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 修改8443端口为443 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8009"</span> <span class="attr">protocol</span>=<span class="string">"AJP/1.3"</span> <span class="attr">redirectPort</span>=<span class="string">"443"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Https</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud在线文档之SwaggerGateWay</title>
    <url>/SpringCloud/SpringCloud%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E4%B9%8BSwaggerGateWay/</url>
    <content><![CDATA[<p>使用SpringCloud构建分布式在线文档<br><a id="more"></a></p>
<h1 id="Swagger-service-a"><a href="#Swagger-service-a" class="headerlink" title="Swagger-service-a"></a>Swagger-service-a</h1><blockquote>
<p>依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Swagger start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spring4all<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Swagger end --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>Dalston.SR1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置文件</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">10010</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">swagger-service-a</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:1001/eureka/</span></span><br><span class="line"><span class="attr">swagger:</span></span><br><span class="line"><span class="attr">  base-package:</span> <span class="string">com.learning</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableSwagger</span>2Doc</span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerServiceAApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(SwaggerServiceAApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Controller</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"service-a"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">dc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String services = <span class="string">"Services:"</span> + discoveryClient.getServices();</span><br><span class="line">		System.out.println(services);</span><br><span class="line">		<span class="keyword">return</span> services;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>代码地址: <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/swagger-service-a" target="_blank" rel="noopener">https://github.com/ColorCoinK/springcloud-learning/tree/master/swagger-service-a</a></li>
</ul>
<h1 id="Swagger-service-b"><a href="#Swagger-service-b" class="headerlink" title="Swagger-service-b"></a>Swagger-service-b</h1><ul>
<li>在简化的情况下,代码与<code>Swagger-service-a</code>一致,通过<code>@GetMappning</code>的标识区分两个不同服务</li>
</ul>
<ul>
<li>代码地址: <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/swagger-service-b" target="_blank" rel="noopener">https://github.com/ColorCoinK/springcloud-learning/tree/master/swagger-service-b</a></li>
</ul>
<h1 id="网关整合-SpringCloud-Dalston-SR5-版本-集成-Swagger-API-文档配置类"><a href="#网关整合-SpringCloud-Dalston-SR5-版本-集成-Swagger-API-文档配置类" class="headerlink" title="网关整合 SpringCloud(Dalston.SR5 版本) 集成 Swagger API 文档配置类"></a>网关整合 SpringCloud(Dalston.SR5 版本) 集成 Swagger API 文档配置类</h1><ul>
<li>需要启动 Eureka-Server 服务注册中心</li>
<li>采用<code>Spring4all社区版的自定义Swagger包</code>,其他版本依赖可能与当前使用方法不一致,请查找其他资料</li>
</ul>
<h2 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h2><ol>
<li>创建<code>SpringBoot</code>项目,本示例选择<code>spring-boot-starter-parent 1.5.12.RELEASE</code>、<code>spring-cloud-dependencies Dalston.SR5</code>;</li>
<li>使用<code>Eureka</code>做服务注册中心</li>
<li>使用<code>zuul</code> 路由配置</li>
</ol>
<h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spring4all<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="启动类增加注解"><a href="#启动类增加注解" class="headerlink" title="启动类增加注解"></a>启动类增加注解</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableSwagger</span>2Doc</span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="meta">@SpringCloudApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiGatewayApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(ApiGatewayApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建配置文件类-配置API文档"><a href="#创建配置文件类-配置API文档" class="headerlink" title="创建配置文件类,配置API文档"></a>创建配置文件类,配置<code>API</code>文档</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * API 网关整合 Swagger API 文档配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: DocumentationConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by Dew on 2018/07/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DocumentationConfig</span> <span class="keyword">implements</span> <span class="title">SwaggerResourcesProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"unchecked"</span>, <span class="string">"rawtypes"</span>&#125;)</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;SwaggerResource&gt; <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		List resources = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		resources.add(swaggerResource(<span class="string">"service-a"</span>, <span class="string">"/swagger-service-a/v2/api-docs"</span>, <span class="string">"2.0"</span>));</span><br><span class="line">		resources.add(swaggerResource(<span class="string">"service-b"</span>, <span class="string">"/swagger-service-b/v2/api-docs"</span>, <span class="string">"2.0"</span>));</span><br><span class="line">		<span class="keyword">return</span> resources;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> SwaggerResource <span class="title">swaggerResource</span><span class="params">(String name, String location, String version)</span> </span>&#123;</span><br><span class="line">		SwaggerResource swaggerResource = <span class="keyword">new</span> SwaggerResource();</span><br><span class="line">		swaggerResource.setName(name);</span><br><span class="line">		swaggerResource.setLocation(location);</span><br><span class="line">		swaggerResource.setSwaggerVersion(version);</span><br><span class="line">		<span class="keyword">return</span> swaggerResource;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置文件-设置注册中心-项目端口等"><a href="#配置文件-设置注册中心-项目端口等" class="headerlink" title="配置文件,设置注册中心,项目端口等"></a>配置文件,设置注册中心,项目端口等</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">api-gateway</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1101</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:1001/eureka/</span></span><br></pre></td></tr></table></figure>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="http://blog.didispace.com/Spring-Cloud-Zuul-use-Swagger-API-doc/" target="_blank" rel="noopener">程序猿DD —— Spring Cloud Zuul中使用Swagger汇总API接口文档</a></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
        <tag>Swagger</tag>
        <tag>GateWay</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot + Redis 自定义主键增长策略</title>
    <url>/SpringBoot/Springboot%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%94%AE%E5%A2%9E%E9%95%BF%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[SpringBoot + Redis 自定义主键增长策略
<a id="more"></a>
<h1 id="SpringBoot-使用-Redis-生成yyyyMMdd-0001-格式id"><a href="#SpringBoot-使用-Redis-生成yyyyMMdd-0001-格式id" class="headerlink" title="SpringBoot 使用 Redis 生成yyyyMMdd + 0001 格式id"></a><h3>SpringBoot 使用 Redis 生成yyyyMMdd + 0001 格式id</h3></h1><blockquote>
<p>开发环境 </p>
</blockquote>
<ul>
<li>当前开发环境:    <code>SpringBoot + redis</code>，应该可以用于其他同样使用<code>Redis</code>的环境生成唯一<code>id</code>环境(未曾亲自实践)</li>
<li>适用场景: 单个服务的唯一<code>id</code>生成工具类    </li>
</ul>
<blockquote>
<p>如果之前未引入<code>Redis</code>则需要增加依赖    </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在<code>.properties</code>文件中增加<code>Redis</code>配置    </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># REDIS的配置信息</span><br><span class="line"># Redis数据库索引（默认为0）</span><br><span class="line">spring.redis.database=0  </span><br><span class="line"># 指定Redis服务器地址，多环境/注释实现(本文有参考链接)</span><br><span class="line">spring.redis.host=127.0.0.1</span><br><span class="line"># Redis服务器连接端口</span><br><span class="line">spring.redis.port=6379</span><br><span class="line"># 用户缓存超时时间</span><br><span class="line">spring.redis.expireTime=1800</span><br><span class="line"># Redis服务器连接密码（默认为空）</span><br><span class="line">#spring.redis.password=foobared</span><br><span class="line"># 连接池最大连接数（使用负值表示没有限制）</span><br><span class="line">spring.redis.jedis.pool.max-active=8  </span><br><span class="line"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span><br><span class="line">spring.redis.jedis.pool.max-wait=-1  </span><br><span class="line"># 连接池中的最大空闲连接</span><br><span class="line">spring.redis.jedis.pool.max-idle=8  </span><br><span class="line"># 连接池中的最小空闲连接</span><br><span class="line">spring.redis.jedis.pool.min-idle=0  </span><br><span class="line"># 连接超时时间（毫秒）</span><br><span class="line">spring.redis.timeout=12000</span><br></pre></td></tr></table></figure>
<ul>
<li>注: SpringBoot多环境配置[^多环境配置]     </li>
</ul>
<blockquote>
<p>工具类代码片段    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar; </span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.support.atomic.RedisAtomicLong;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: RedisGeneratorCode</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 生成日期开头加0001，0002，0003的工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/10/09</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> https://www.cnblogs.com/jbml-154312/p/7490810.html&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisGeneratorCode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(RedisGeneratorCode.class);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">RedisGeneratorCode</span><span class="params">(RedisTemplate&lt;String, Object&gt; redisTemplate)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateCode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 生成自定义前缀的类似 HTG201810120001格式的自增数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> prefix</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> hasExpire</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">generateCode</span><span class="params">(String key, String prefix, <span class="keyword">boolean</span> hasExpire, Integer minLength)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.createGenerateCode(key, prefix, hasExpire, minLength);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateCode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 生成 类似 201810120001格式的自增数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> hasExpire</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">generateCode</span><span class="params">(String key, <span class="keyword">boolean</span> hasExpire, Integer minLength)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.createGenerateCode(key, <span class="string">""</span>, hasExpire, minLength);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateCode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 组装符合自己规则的id并设置过期时间</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key	redis中的key值</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> prefix	最后编码的前缀</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> hasExpire	redis 是否使用过期时间设置自增id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength	redis生成的自增id的最小长度，如果小于这个长度前面补0</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">createGenerateCode</span><span class="params">(String key, String prefix, <span class="keyword">boolean</span> hasExpire, Integer minLength)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Date date = <span class="keyword">null</span>;</span><br><span class="line">			Long id = <span class="keyword">null</span>;</span><br><span class="line">			Calendar calendar = Calendar.getInstance();</span><br><span class="line">			<span class="keyword">if</span> (hasExpire) &#123;</span><br><span class="line">				calendar.set(Calendar.HOUR_OF_DAY, <span class="number">23</span>);</span><br><span class="line">				calendar.set(Calendar.MINUTE, <span class="number">59</span>);</span><br><span class="line">				calendar.set(Calendar.SECOND, <span class="number">59</span>);</span><br><span class="line">				calendar.set(Calendar.MILLISECOND, <span class="number">9999</span>);</span><br><span class="line">				date = calendar.getTime();</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				calendar.set(Calendar.MINUTE, calendar.get(Calendar.MINUTE) + <span class="number">10</span>);</span><br><span class="line">				date = calendar.getTime();</span><br><span class="line">			&#125;</span><br><span class="line">			id = <span class="keyword">this</span>.generateId(key, date);</span><br><span class="line">			<span class="keyword">if</span> (id != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">this</span>.format(id, prefix, minLength);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			logger.info(<span class="string">"error --&gt; redis 生成自增id出现异常"</span>);</span><br><span class="line">			logger.error(e.getMessage(), e);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: generateId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 使用RedisAtomicLong自增</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * Long</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> Long <span class="title">generateId</span><span class="params">(String key, Date date)</span> </span>&#123;</span><br><span class="line">		RedisAtomicLong counter = <span class="keyword">new</span> RedisAtomicLong(key, redisTemplate.getConnectionFactory());</span><br><span class="line">		<span class="comment">// 通过key获取自增并设定过期时间</span></span><br><span class="line">		counter.expireAt(date);</span><br><span class="line">		<span class="keyword">return</span> counter.incrementAndGet();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: format</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 获取 redis 自增后，生成自定义格式的id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id	redis 获取的 id值</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> prefix	自定义前缀</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> minLength	生成数的长度，不满足时 0 补齐</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> String <span class="title">format</span><span class="params">(Long id, String prefix, Integer minLength)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 拼接的字符串</span></span><br><span class="line">		StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">		<span class="comment">// 当前日期</span></span><br><span class="line">		Date date = <span class="keyword">new</span> Date();</span><br><span class="line">		<span class="comment">// 自定义前缀</span></span><br><span class="line">		sb.append(prefix);</span><br><span class="line">		<span class="keyword">if</span> (date != <span class="keyword">null</span>) &#123;</span><br><span class="line">			DateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">			sb.append(df.format(date));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/* 对不满足长度的id值,使用0补齐 */</span></span><br><span class="line">		<span class="comment">// redis 生成的id值</span></span><br><span class="line">		String strId = String.valueOf(id);</span><br><span class="line">		<span class="comment">// redis 生成id 的长度</span></span><br><span class="line">		<span class="keyword">int</span> length = strId.length();</span><br><span class="line">		<span class="keyword">if</span> (length &lt; minLength) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; minLength - length; i++) &#123;</span><br><span class="line">				sb.append(<span class="string">"0"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			sb.append(strId);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			sb.append(strId);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> sb.toString();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>测试工具类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisGeneratorCode redisGeneratorCode;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createGenerateCodeTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">// String code = primaryGenerater.generateCode("worksheet_id", "", true, 4);</span></span><br><span class="line">	<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">	String code = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (flag) &#123;</span><br><span class="line">		code = redisGeneratorCode.generateCode(<span class="string">"worksheet_id"</span>, <span class="string">""</span>, <span class="keyword">true</span>, <span class="number">4</span>);</span><br><span class="line">		flag = code == <span class="keyword">null</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考链接:    </p>
</blockquote>
<ol>
<li><a href="https://www.cnblogs.com/jbml-154312/p/7490810.html" target="_blank">java生成自增流水号，并从每月第一天重新清零计数将业务流水号添加到数据库(原创)</a></li>
<li><a href="https://blog.csdn.net/UnknownZYB/article/details/78334250?locationNum=5&fps=1" target="_blank">使用redis生成全局唯一id</a></li>
<li><a href="https://www.cnblogs.com/haitao-xie/p/6323423.html" target="_blank">SpringBoot集成Redis</a></li>
</ol>
<blockquote>
<p>脚注    </p>
</blockquote>
<p>[^多环境配置]: <a href="../SprinBoot多环境配置/#more" target="_blank">参考另一篇博客<code>SpringBoot</code>多环境配置</a></p>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat服务器端部署配置案例</title>
    <url>/blog/Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[Tomcat服务器端部署配置案例
<a id="more"></a>
<h2 id="执行shutdown-sh的同时kill-9-PID简化"><a href="#执行shutdown-sh的同时kill-9-PID简化" class="headerlink" title="执行shutdown.sh的同时kill -9 PID简化"></a>执行<code>shutdown.sh</code>的同时<code>kill -9 PID</code>简化</h2><blockquote>
<p>修改<code>$TOMCAT_HOME/bin/catalina.sh</code>配置</p>
</blockquote>
<ul>
<li>配置<code>Tomcat</code>运行的<code>JDK</code>路径</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=#设置为服务器的JDK路径 /jdk1.8.0_101</span><br><span class="line">export JRE_HOME=#设置为服务器的JRE路径 /jdk1.8.0_101/jre</span><br><span class="line">export CATALINA_HOME=/apache-tomcat-8.5.40</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> OS specific support.  <span class="variable">$var</span> _must_ be <span class="built_in">set</span> to either <span class="literal">true</span> or <span class="literal">false</span>.</span></span><br><span class="line">JAVA_OPTS='-Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxNewSize=512m -XX:MaxPermSize=512m -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> specify jdk version</span></span><br><span class="line">JAVA_HOME=# JDK路径 /jdk1.8.0_101</span><br><span class="line">JRE_HOME=# JRE 路径 /usr/java/jdk1.8.0_101/jre</span><br></pre></td></tr></table></figure>
<p><strong>查询服务器JDK路径</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo $JAVA_HOME</span><br></pre></td></tr></table></figure>
<ul>
<li>生成<code>Tomcat</code>运行时的进程文件,关闭时不需要执行<code>kill -9 pid</code>命令(也是在<code>catalina.sh</code>文件内,注释的近几十行找到<code>#Get standard environment variables</code>就可以了)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Get standard environment variables</span></span><br><span class="line">PRGDIR=`dirname "$PRG"`</span><br><span class="line">if [ -z "$CATALINA_PID" ]; then</span><br><span class="line">  CATALINA_PID=$PRGDIR/CATALINA_PID</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改<code>$TOMCAT_HOME/bin/shutdown.sh</code>文件</p>
</blockquote>
<ul>
<li><code>shutdown.sh</code>文件的最后一行,修改后变成如下所示(增加<code>-force</code>)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exec "$PRGDIR"/"$EXECUTABLE" stop -force "$@"</span><br></pre></td></tr></table></figure>
<h2 id="多个项目部署为不同Tomcat时可以通过修改-TOMCAT-HOME-conf-server-xml中的8005端口只关闭指定端口"><a href="#多个项目部署为不同Tomcat时可以通过修改-TOMCAT-HOME-conf-server-xml中的8005端口只关闭指定端口" class="headerlink" title="多个项目部署为不同Tomcat时可以通过修改$TOMCAT_HOME/conf/server.xml中的8005端口只关闭指定端口"></a>多个项目部署为不同<code>Tomcat</code>时可以通过修改<code>$TOMCAT_HOME/conf/server.xml</code>中的<code>8005</code>端口只关闭指定端口</h2><ul>
<li>首行</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;Server port="1005" shutdown="SHUTDOWN"&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>自定义端口</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;Connector port="1009" protocol="HTTP/1.1"</span><br><span class="line">              connectionTimeout="20000"</span><br><span class="line">              redirectPort="8443" /&gt;</span><br></pre></td></tr></table></figure>
<h2 id="目录遍历Bug"><a href="#目录遍历Bug" class="headerlink" title="目录遍历Bug"></a>目录遍历Bug</h2><h3 id="方法一：指定自定义目录为Tomcat访问路径-Tomcat通过端口遍历webapps下的文件目录"><a href="#方法一：指定自定义目录为Tomcat访问路径-Tomcat通过端口遍历webapps下的文件目录" class="headerlink" title="方法一：指定自定义目录为Tomcat访问路径(Tomcat通过端口遍历webapps下的文件目录)"></a>方法一：指定自定义目录为<code>Tomcat</code>访问路径(<code>Tomcat</code>通过端口遍历<code>webapps</code>下的文件目录)</h3><ul>
<li>修改<code>$TOMCAT_HOME/conf/server.xml</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;Host name="localhost"  appBase="$DEPLOY_PATH"</span><br><span class="line">            unpackWARs="true" autoDeploy="true"&gt;</span><br><span class="line">&lt;/Host&gt;</span><br></pre></td></tr></table></figure>
<p><strong>注</strong></p>
<ol>
<li><code>$DEPLOY_PATH</code>: <code>WEB</code>程序部署路径</li>
</ol>
<h3 id="方法二-删除-TOMCAT-HOME-webapps-文件夹下的非项目文件-ROOT目录可删可不删"><a href="#方法二-删除-TOMCAT-HOME-webapps-文件夹下的非项目文件-ROOT目录可删可不删" class="headerlink" title="方法二: 删除$TOMCAT_HOME/webapps/文件夹下的非项目文件(ROOT目录可删可不删)"></a>方法二: 删除<code>$TOMCAT_HOME/webapps/</code>文件夹下的非项目文件(ROOT目录可删可不删)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -rf $TOMCAT_HOME/webapps/*</span><br></pre></td></tr></table></figure>
<p><strong>注</strong></p>
<ol>
<li>删除文件需注意所在文件夹位置,可使用<code>pwd</code>命令确认路径是否正确</li>
</ol>
<h2 id="中间件版本泄露漏洞"><a href="#中间件版本泄露漏洞" class="headerlink" title="中间件版本泄露漏洞"></a>中间件版本泄露漏洞</h2><blockquote>
<p>将<code>Tomcat</code>中的<code>catalina.jar</code>解压</p>
</blockquote>
<ul>
<li><code>unzipi $TOMCAT_HOME/lib/catalina.jar</code></li>
<li>得到<code>META-INF、org</code>两个文件夹</li>
</ul>
<blockquote>
<blockquote>
<p>修改<code>Tomcat</code>中的<code>/opt/tomcat-iptvview/apache-tomcat-8.5.56/lib/org/apache/catalina/util/ServerInfo.properties</code></p>
</blockquote>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@CDH44 bin]# pwd</span><br><span class="line">/opt/tomcat-iptvview/apache-tomcat-8.5.56/bin</span><br><span class="line">[root@CDH44 bin]# vi /opt/tomcat-iptvview/apache-tomcat-8.5.56/lib/org/apache/catalina/util/ServerInfo.properties</span><br></pre></td></tr></table></figure>
<blockquote>
<blockquote>
<p>修改后的文件内容</p>
</blockquote>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server.info=Apache Tomcat</span><br><span class="line">server.number=0.0.0.0</span><br><span class="line">server.built=Jun 3 2020 20:18:30 UTC</span><br></pre></td></tr></table></figure>
<p><strong>注:</strong> 修改了<code>server.info</code>后的版本号;<code>server.number</code>的版本号为<code>0.0.0.0</code></p>
<blockquote>
<p>将修改后的信息压缩回<code>jar</code>包</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@CDH44 lib]# vi ./org/apache/catalina/util/ServerInfo.properties </span><br><span class="line">[root@CDH44 lib]# pwd</span><br><span class="line">/opt/tomcat-iptvview/apache-tomcat-8.5.56/lib</span><br><span class="line">[root@CDH44 lib]# jar uvf catalina.jar ./org/apache/catalina/util/ServerInfo.properties </span><br><span class="line">adding: org/apache/catalina/util/ServerInfo.properties(in = 885) (out= 513)(deflated 42%)</span><br><span class="line">[root@CDH44 lib]#</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/all/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>maven安装jar到本地仓库</title>
    <url>/Blog/maven%E5%AE%89%E8%A3%85jar%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<p>在使用Maven开发过程中,难免会遇到jar包无法从中央仓库下载的窘境。本博客介绍一种方法,也许能解决遇到的问题。<br><a id="more"></a></p>
<h1 id="使用Maven将pom-xml中下载失败的jar安装到本地仓库或私有仓库"><a href="#使用Maven将pom-xml中下载失败的jar安装到本地仓库或私有仓库" class="headerlink" title="使用Maven将pom.xml中下载失败的jar安装到本地仓库或私有仓库"></a>使用<code>Maven</code>将<code>pom.xml</code>中下载失败的<code>jar</code>安装到本地仓库或私有仓库</h1><ul>
<li>以<code>impalaJDBC41</code>文件为例</li>
</ul>
<blockquote>
<p>下载相应的<code>jar</code>文件</p>
</blockquote>
<ul>
<li>原先只需要在maven中增加对<code>ImpalaJDBC41</code>的依赖配置即可</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">impala.version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">impala.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 有可能下载不到该Jar, 可以到该地址下载相应版本：https://www.cloudera.com/downloads/connectors/impala/jdbc/2-6-3.html --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.cloudera/ImpalaJDBC41 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cloudera<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ImpalaJDBC41<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;impala.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>不知为何,配置的<code>阿里云镜像库</code>无法下载该<code>jar</code></li>
</ul>
<p>改为从<a href="https://www.cloudera.com/downloads/connectors/impala/jdbc/2-6-3.html" target="_blank">下载相应的版本及<code>jar</code>文件</a></p>
<blockquote>
<p>打开Dos窗口,使用如下命令</p>
</blockquote>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=com.cloudera -DartifactId=ImpalaJDBC41 -Dversion=<span class="number">2</span>.<span class="number">6</span>.<span class="number">3</span> -Dpackaging=jar -Dfile=./ImpalaJDBC41-<span class="number">2</span>.<span class="number">6</span>.<span class="number">3</span>.jar</span><br></pre></td></tr></table></figure>
<ul>
<li><code>DgroupId</code>: <code>pom.xml</code>配置中<code>groupId</code>的值</li>
<li><code>DartifactId</code>: <code>pom.xml</code>配置中<code>artifactId</code>的值</li>
<li><code>Dversion</code>: 版本号</li>
<li><code>Dpackaging</code>: 文件类型</li>
<li><code>Dfile</code>: 文件路径</li>
</ul>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>页面传参中文参数乱码</title>
    <url>/blog/HTML/url%E4%BC%A0%E5%8F%82%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[页面传参中文参数乱码
<a id="more"></a>
<h1 id="页面传递中文参数乱码解决"><a href="#页面传递中文参数乱码解决" class="headerlink" title="页面传递中文参数乱码解决"></a>页面传递中文参数乱码解决</h1><blockquote>
<p>方案一: 接收端设置编码格式    </p>
</blockquote>
<ol>
<li>使用 <code>request.setCharacterEncoding(&#39;utf-8&#39;);</code></li>
<li>使用 <code>request.getParameter(&quot;handlerType&quot;).getBytes(&quot;ISO-8859-1&quot;),&quot;utf-8&quot;)</code> 接受传递的参数值</li>
</ol>
]]></content>
      <categories>
        <category>blog</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>CharacterEncoding</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat 多端口部署 web 项目</title>
    <url>/blog/Tomcat/%E5%8D%95%E4%B8%AATomcat%E5%A4%9A%E7%AB%AF%E5%8F%A3%E9%83%A8%E7%BD%B2web%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[Tomcat 多端口部署 web 项目
<a id="more"></a>
<h1 id="单个-Tomcat-运行多个实例、分配不同端口"><a href="#单个-Tomcat-运行多个实例、分配不同端口" class="headerlink" title="单个 Tomcat 运行多个实例、分配不同端口"></a><h3>单个 <code>Tomcat</code> 运行多个实例、分配不同端口</h3></h1><blockquote>
<p>第一种方式：更改 <code>Connector</code> 中的端口号    </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Server</span> <span class="attr">port</span>=<span class="string">"8005"</span> <span class="attr">shutdown</span>=<span class="string">"SHUTDOWN"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.startup.VersionLoggerListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.AprLifecycleListener"</span> <span class="attr">SSLEngine</span>=<span class="string">"on"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.JreMemoryLeakPreventionListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.ThreadLocalLeakPreventionListener"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">name</span>=<span class="string">"UserDatabase"</span> <span class="attr">auth</span>=<span class="string">"Container"</span> <span class="attr">type</span>=<span class="string">"org.apache.catalina.UserDatabase"</span> <span class="attr">description</span>=<span class="string">"User database that can be updated and saved"</span> <span class="attr">factory</span>=<span class="string">"org.apache.catalina.users.MemoryUserDatabaseFactory"</span> <span class="attr">pathname</span>=<span class="string">"conf/tomcat-users.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Service</span> <span class="attr">name</span>=<span class="string">"Catalina"</span>&gt;</span></span><br><span class="line">    	<span class="comment">&lt;!-- 第一个项目端口号 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 第二个端口号 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"7090"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span> <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">maxSpareThreads</span>=<span class="string">"75"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8009"</span> <span class="attr">protocol</span>=<span class="string">"AJP/1.3"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">"Catalina"</span> <span class="attr">defaultHost</span>=<span class="string">"localhost"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.realm.LockOutRealm"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.realm.UserDatabaseRealm"</span> <span class="attr">resourceName</span>=<span class="string">"UserDatabase"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Realm</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span> <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">reloadable</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"logs"</span> <span class="attr">prefix</span>=<span class="string">"localhost_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span> <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Engine</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Server</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="多个-Tomcat-部署"><a href="#多个-Tomcat-部署" class="headerlink" title="多个 Tomcat 部署"></a><h3>多个 <code>Tomcat</code> 部署</h3></h1><h2 id="上传多个不同版本-tomcat-tomcat-部署多个实例"><a href="#上传多个不同版本-tomcat-tomcat-部署多个实例" class="headerlink" title="上传多个不同版本 tomcat/tomcat 部署多个实例"></a>上传多个不同版本 tomcat/tomcat 部署多个实例</h2><h2 id="修改-server-xml"><a href="#修改-server-xml" class="headerlink" title="修改 server.xml"></a>修改 <code>server.xml</code></h2><p>默认 server.xml 配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Server</span> <span class="attr">port</span>=<span class="string">"8005"</span> <span class="attr">shutdown</span>=<span class="string">"SHUTDOWN"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.startup.VersionLoggerListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.AprLifecycleListener"</span> <span class="attr">SSLEngine</span>=<span class="string">"on"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.JreMemoryLeakPreventionListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.ThreadLocalLeakPreventionListener"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">name</span>=<span class="string">"UserDatabase"</span> <span class="attr">auth</span>=<span class="string">"Container"</span> <span class="attr">type</span>=<span class="string">"org.apache.catalina.UserDatabase"</span> <span class="attr">description</span>=<span class="string">"User database that can be updated and saved"</span> <span class="attr">factory</span>=<span class="string">"org.apache.catalina.users.MemoryUserDatabaseFactory"</span> <span class="attr">pathname</span>=<span class="string">"conf/tomcat-users.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Service</span> <span class="attr">name</span>=<span class="string">"Catalina"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8009"</span> <span class="attr">protocol</span>=<span class="string">"AJP/1.3"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">"Catalina"</span> <span class="attr">defaultHost</span>=<span class="string">"localhost"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.realm.LockOutRealm"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.realm.UserDatabaseRealm"</span> <span class="attr">resourceName</span>=<span class="string">"UserDatabase"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Realm</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span> <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">reloadable</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"logs"</span> <span class="attr">prefix</span>=<span class="string">"localhost_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span> <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Engine</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Server</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 修改 shutdown 端口,如果同样使用 8005 那么关闭其中一个时另外的 shutdown.port= 7005 的tomcat 也会被关闭 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Server</span> <span class="attr">port</span>=<span class="string">"7005"</span> <span class="attr">shutdown</span>=<span class="string">"SHUTDOWN"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.startup.VersionLoggerListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.AprLifecycleListener"</span> <span class="attr">SSLEngine</span>=<span class="string">"on"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.JreMemoryLeakPreventionListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Listener</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.core.ThreadLocalLeakPreventionListener"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">name</span>=<span class="string">"UserDatabase"</span> <span class="attr">auth</span>=<span class="string">"Container"</span> <span class="attr">type</span>=<span class="string">"org.apache.catalina.UserDatabase"</span> <span class="attr">description</span>=<span class="string">"User database that can be updated and saved"</span> <span class="attr">factory</span>=<span class="string">"org.apache.catalina.users.MemoryUserDatabaseFactory"</span> <span class="attr">pathname</span>=<span class="string">"conf/tomcat-users.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">GlobalNamingResources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Service</span> <span class="attr">name</span>=<span class="string">"Catalina"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 修改启动端口号 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"7090"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">redirectPort</span>=<span class="string">"7443"</span> <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">maxSpareThreads</span>=<span class="string">"75"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"7009"</span> <span class="attr">protocol</span>=<span class="string">"AJP/1.3"</span> <span class="attr">redirectPort</span>=<span class="string">"7443"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">"Catalina"</span> <span class="attr">defaultHost</span>=<span class="string">"localhost"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.realm.LockOutRealm"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.realm.UserDatabaseRealm"</span> <span class="attr">resourceName</span>=<span class="string">"UserDatabase"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Realm</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span> <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">reloadable</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"logs"</span> <span class="attr">prefix</span>=<span class="string">"localhost_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span> <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Engine</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Server</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="关闭tomcat-时杀死进程"><a href="#关闭tomcat-时杀死进程" class="headerlink" title="关闭tomcat 时杀死进程"></a>关闭tomcat 时杀死进程</h1><blockquote>
<p>修改<code>catalina.sh</code>文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置记录 CATALINA_PID</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 该设置会在启动时在 /bin 目录下新建CATALINA_PID 文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭时从 CATALINA_PID 文件找到 pid,<span class="built_in">kill</span> 同时删除 CATALINA_PID 文件</span></span><br><span class="line">if [ -z "$CATALINA_PID" ]; then</span><br><span class="line">  CATALINA_PID=$PRGDIR/CATALINA_PID</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改<code>shutdown.sh</code>文件,在最后一行加上<code>-force</code></p>
</blockquote>
<p>更新Tomcat版本</p>
<blockquote>
<p>增加catalina.sh 配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line">export JRE_HOME=/usr/java/jdk1.8.0_101/jre</span><br><span class="line">export CATALINA_HOME=/opt/tomcat-iptvview/apache-tomcat-8.5.40</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> specify jdk version</span></span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line">JRE_HOME=/usr/java/jdk1.8.0_101/jre</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>Tomcat</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>康威定律与微服务的关系</title>
    <url>/blog/%E5%BA%B7%E5%A8%81%E5%AE%9A%E5%BE%8B%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[康威定律与微服务的关系
<a id="more"></a>
<h1 id="康威定律与微服务的关系"><a href="#康威定律与微服务的关系" class="headerlink" title="康威定律与微服务的关系"></a>康威定律与微服务的关系</h1><h2 id="康威第一定律"><a href="#康威第一定律" class="headerlink" title="康威第一定律"></a>康威第一定律</h2><p>  人类是复杂的社会动物    </p>
<h2 id="康威第二定律"><a href="#康威第二定律" class="headerlink" title="康威第二定律"></a>康威第二定律</h2><p>罗马不是一天建成的，学会先解决首要问题    </p>
<h2 id="康威第三定律"><a href="#康威第三定律" class="headerlink" title="康威第三定律"></a>康威第三定律</h2><p>创建独立的子系统，减少沟通成本    </p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>前面提到，人类是复杂的社会动物，人与人之间的交流是非常复杂的，当涉及到一个系统时，人们经常选择增加人力去减少复杂性，对于企业来说，该如何处理这样的沟通问题？答案是：分而治之。</p>
<p>看看公司内，一名经理管理的员工一般少于15个，二三线经理管理的员工要更少，因此，大企业通常会将团队拆成一个个小团队或部门减少沟通成本及管理的问题，有一些需要考虑的场景：</p>
<ul>
<li>创业的项目很好，拿到一大笔风投，再招募更多的程序员</li>
<li>人员太多，需要找几个经理进行管理</li>
<li>康威定律好告诉我们，可以从系统设计中看出组织通信的模式，每个经理要对大系统的某一小部分负责，通过这种方式，它们和更大的系统间沟通有了便捷，因此大的系统也会被拆分成一个个小系统。（微服务可以更好地服务于此)    </li>
</ul>
<h2 id="康威定律与微服务"><a href="#康威定律与微服务" class="headerlink" title="康威定律与微服务"></a>康威定律与微服务</h2><p>康威定律是如何在半个世纪前就奠定了微服务理论基础的</p>
<ul>
<li>人与人之间的交流很复杂，每个人的精力都是有限的，因此当问题很复杂需要协调的去解决时，需要将组织划分进而提高沟通效率。    </li>
<li>团队成员工作的系统设计依赖于成员之间的沟通，管理人员可以调整划分模式，实现团队之间的不同沟通方式，这也会影响系统的设计。</li>
<li>如果子系统有清晰的外部通信便捷，那么就可以有效的降低通信成本，相应的设计将更加适合和有效。    </li>
<li>需要不断优化一个复杂的系统，并容错性和故障恢复率的帮助下进行优化，不要期望大而全面额设计或架构，因为它们的开发以迭代的方式发生。</li>
</ul>
<p>具体的实践建议：    </p>
<ul>
<li>利用一切手段提高通信效率，如Slack、GitHub、Wiki，且至于相关人员进行沟通，每个人和每个系统必须有明确的职责，在遇到问题时，知道找谁去解决。    </li>
<li>在<code>MVP</code>模式下设计一套系统，以迭代的方式优化及验证，并确保系统的弹性。    </li>
<li>采用与系统设计相一致的团队，以扁平化和以业务为基准的方式去简化团队，每个小团队之间必须有对应负责的模块，避免模糊的界限，可以在发生问题时定义责任承担者。    </li>
<li>精简团队规模，求精而不将就。人员数量的增加在降低效率的同时也在增加投入成本，亚马逊CEO Jeff Bezos的经验法则：如果两个披萨对于一个团队来说不够，那么这个团队就太大了。互联网公司的产品团队普遍由7-8人组成(包括前端和后端测试、交互和用户体验师，一人可能身兼数职)。    </li>
</ul>
<p>在查看以下微服务标准时，更能体现微服务与康威定律间的关系：    </p>
<ul>
<li>由分布式服务组成的系统    </li>
<li>企业部门的业务线    </li>
<li>开发优秀的产品    </li>
<li>Smart endpoints and dumb pipes    </li>
<li>DevOps    </li>
<li>容错    </li>
<li>快速发展</li>
</ul>
<p><strong>内容来源：</strong><a href="http://blog.didispace.com/康威定律——这个50年前就被提出的微服务概念，你知多少？/" target="_blank">简化自翟永超文章</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
  </entry>
  <entry>
    <title>数据库语法对比</title>
    <url>/blog/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E6%B3%95%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<p>统计了在开发过程中,不同数据库实现相同功能的不同语句。<br><a id="more"></a></p>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>  在开发过程中,需要写一些不同数据库间的相同功能<code>SQL</code> 。今天有时间就特地总结一下,方便自己以后查阅和比对。</p>
<h2 id="分页功能"><a href="#分页功能" class="headerlink" title="分页功能"></a>分页功能</h2><blockquote>
<p><code>Oracle</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询 0,10</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t_demo <span class="keyword">where</span> <span class="keyword">rownum</span> &lt;= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 10,20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (</span><br><span class="line">  <span class="keyword">select</span> *,rn <span class="keyword">from</span> t_demo <span class="keyword">where</span> <span class="keyword">rownum</span> &lt;= <span class="number">20</span></span><br><span class="line">)<span class="keyword">where</span> rn &gt; <span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>SQL Server</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询 0,10</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">10</span> * <span class="keyword">from</span> t_demo ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 10,20</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">20</span> * <span class="keyword">from</span> addressbook <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> top <span class="number">10</span> <span class="keyword">id</span> <span class="keyword">from</span> addressbook)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>MySQL Server</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询 0,10</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t_demo <span class="keyword">limit</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 10,20</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t_demo <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">20</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>Impala</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询 0,10</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t_demo <span class="keyword">limit</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 10,20</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t_demo <span class="keyword">limit</span> <span class="number">20</span> <span class="keyword">offset</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>树_二叉树</title>
    <url>/Blog/%E6%A0%91-%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
    <content><![CDATA[<p>树、二叉树、二叉搜索树<br><a id="more"></a></p>
<blockquote>
<p>引用</p>
</blockquote>
<ol>
<li><a href="https://www.bysocket.com/technique/2337.html" target="_blank" rel="noopener">泥瓦匠BYSocket</a></li>
</ol>
<h1 id="树-amp-二叉树"><a href="#树-amp-二叉树" class="headerlink" title="树 &amp; 二叉树"></a>树 &amp; 二叉树</h1><blockquote>
<p>树</p>
</blockquote>
<ul>
<li>树是由节点和边构成,存储元素的机会。节点是根节点、父节点、子节点的统称。</li>
</ul>
<p>如图:根深:4; 5是根节点; 8与3是父子节点关系。</p>
<p><img src="images/tree.png" alt="树结构"></p>
<blockquote>
<p>二叉树</p>
</blockquote>
<ul>
<li>二叉树(Binary tree),增加了<code>二叉</code>(binary),意思是在树中做区分。每个节点至多有两个子(child),left child &amp; right child。二叉树在很多例子中使用,比如二叉树标识算术表达式。</li>
</ul>
<p>如图:1/8 是左节点; 2/3 是右节点.</p>
<p><img src="/images/binary-tree.png" alt="binary tree"></p>
<h1 id="二叉搜索树-BST-Binary-Search-Tree"><a href="#二叉搜索树-BST-Binary-Search-Tree" class="headerlink" title="二叉搜索树 BST(Binary Search Tree)"></a>二叉搜索树 BST(Binary Search Tree)</h1><blockquote>
<p>二叉搜索树</p>
</blockquote>
<ul>
<li>二叉树上增加搜索限制,其要求: 每个节点比其左子树元素大,比其有子树元素小。</li>
</ul>
<p>如图:每个节点比它左子树的任意节点大,而且比它有子树的任意节点小</p>
<p><img src="/images/binary-search-tree.png" alt="二叉搜索树结构"></p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>普通 Java/Jave Web 转为 Maven 项目</title>
    <url>/blog/Java/%E6%A0%B9%E6%8D%AEjar%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90pom%E4%BE%9D%E8%B5%96/</url>
    <content><![CDATA[普通 Java/Jave Web 转为 Maven 项目
<a id="more"></a>
<h1 id="Jar文件-更改为-pom-xml-依赖"><a href="#Jar文件-更改为-pom-xml-依赖" class="headerlink" title="Jar文件 更改为 pom.xml 依赖"></a>Jar文件 更改为 pom.xml 依赖</h1><blockquote>
<p>只需要运行方法即可    </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sanss.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.jar.JarInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.jar.Manifest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.dom.DOMElement;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: MakePomFromJars</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/06/21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 将jar 包生pom依赖</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MakePomFromJars</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException, IOException </span>&#123;</span><br><span class="line">		Element dependencys = <span class="keyword">new</span> DOMElement(<span class="string">"dependencies"</span>);</span><br><span class="line">		File dir = <span class="keyword">new</span> File(<span class="string">"D:\\Code\\sts-work-workspace\\iptvView\\WebRoot\\WEB-INF\\lib"</span>);<span class="comment">// 生pom文件的lib路径</span></span><br><span class="line"></span><br><span class="line">		System.out.println(<span class="string">"读取文件路径为:\t"</span> + dir.getPath());</span><br><span class="line">		System.out.println(<span class="string">"开始读取文件: &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br><span class="line"></span><br><span class="line">		StringBuffer missJar = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">		<span class="keyword">for</span> (File jar : dir.listFiles()) &#123;</span><br><span class="line">			JarInputStream jis = <span class="keyword">new</span> JarInputStream(<span class="keyword">new</span> FileInputStream(jar));</span><br><span class="line">			Manifest manifest = jis.getManifest();</span><br><span class="line">			jis.close();</span><br><span class="line">			<span class="keyword">if</span> (manifest == <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			String bundleName = manifest.getMainAttributes().getValue(<span class="string">"Bundle-Name"</span>);</span><br><span class="line">			String bundleVersion = manifest.getMainAttributes().getValue(<span class="string">"Bundle-Version"</span>);</span><br><span class="line">			Element element = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">			System.out.println(jar.getName());</span><br><span class="line">			StringBuffer sb = <span class="keyword">new</span> StringBuffer(jar.getName());</span><br><span class="line">			<span class="keyword">if</span> (bundleName != <span class="keyword">null</span>) &#123;</span><br><span class="line">				bundleName = bundleName.toLowerCase().replace(<span class="string">" "</span>, <span class="string">"-"</span>);</span><br><span class="line">				sb.append(bundleName + <span class="string">"\t"</span> + bundleVersion);</span><br><span class="line">				element = getDependices(bundleName, bundleVersion);</span><br><span class="line">				<span class="comment">// System.out.println(sb.toString());</span></span><br><span class="line">				<span class="comment">// System.out.println(element.asXML());</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (element == <span class="keyword">null</span> || element.elements().size() == <span class="number">0</span>) &#123;</span><br><span class="line">				bundleName = <span class="string">""</span>;</span><br><span class="line">				bundleVersion = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">				String[] ns = jar.getName().replace(<span class="string">".jar"</span>, <span class="string">""</span>).split(<span class="string">"-"</span>);</span><br><span class="line">				<span class="keyword">for</span> (String s : ns) &#123;</span><br><span class="line">					<span class="keyword">if</span> (Character.isDigit(s.charAt(<span class="number">0</span>))) &#123;</span><br><span class="line">						bundleVersion += s + <span class="string">"-"</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						bundleName += s + <span class="string">"-"</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (bundleVersion.endsWith(<span class="string">"-"</span>)) &#123;</span><br><span class="line">					bundleVersion = bundleVersion.substring(<span class="number">0</span>, bundleVersion.length() - <span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (bundleName.endsWith(<span class="string">"-"</span>)) &#123;</span><br><span class="line">					bundleName = bundleName.substring(<span class="number">0</span>, bundleName.length() - <span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				element = getDependices(bundleName, bundleVersion);</span><br><span class="line">				sb.setLength(<span class="number">0</span>);</span><br><span class="line">				sb.append(bundleName + <span class="string">"\t"</span>).append(bundleVersion);</span><br><span class="line"></span><br><span class="line">				<span class="comment">// System.out.println(sb.toString());</span></span><br><span class="line">				<span class="comment">// System.out.println(element.asXML());</span></span><br><span class="line">			&#125;</span><br><span class="line">			element = getDependices(bundleName, bundleVersion);</span><br><span class="line">			<span class="keyword">if</span> (element.elements().size() == <span class="number">0</span>) &#123;</span><br><span class="line">				element.add(<span class="keyword">new</span> DOMElement(<span class="string">"groupId"</span>).addText(<span class="string">"not found"</span>));</span><br><span class="line">				element.add(<span class="keyword">new</span> DOMElement(<span class="string">"artifactId"</span>).addText(bundleName));</span><br><span class="line">				element.add(<span class="keyword">new</span> DOMElement(<span class="string">"version"</span>).addText(bundleVersion));</span><br><span class="line"></span><br><span class="line">				missJar.append(bundleName + <span class="string">"\n"</span>);<span class="comment">// 统计缺失的jar名称</span></span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				dependencys.add(element);</span><br><span class="line">				<span class="comment">// System.out.println();</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.err.println(missJar);</span><br><span class="line">		System.out.println(dependencys.asXML());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Element <span class="title">getDependices</span><span class="params">(String key, String ver)</span> </span>&#123;</span><br><span class="line">		Element dependency = <span class="keyword">new</span> DOMElement(<span class="string">"dependency"</span>);</span><br><span class="line">		<span class="comment">// 设置代理</span></span><br><span class="line">		<span class="comment">// System.setProperty("http.proxyHost","127.0.0.1");</span></span><br><span class="line">		<span class="comment">// System.setProperty("http.proxyPort", "8090");</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			String url = <span class="string">"http://search.maven.org/solrsearch/select?q=a%3A%22"</span> + key + <span class="string">"%22%20AND%20v%3A%22"</span> + ver</span><br><span class="line">					+ <span class="string">"%22&amp;rows=3&amp;wt=json"</span>;</span><br><span class="line">			org.jsoup.nodes.Document doc = Jsoup.connect(url).ignoreContentType(<span class="keyword">true</span>).timeout(<span class="number">30000</span>).get();</span><br><span class="line">			String elem = doc.body().text();</span><br><span class="line">			JSONObject response = JSONObject.parseObject(elem).getJSONObject(<span class="string">"response"</span>);</span><br><span class="line">			<span class="keyword">if</span> (response.containsKey(<span class="string">"docs"</span>) &amp;&amp; response.getJSONArray(<span class="string">"docs"</span>).size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				JSONObject docJson = response.getJSONArray(<span class="string">"docs"</span>).getJSONObject(<span class="number">0</span>);</span><br><span class="line">				Element groupId = <span class="keyword">new</span> DOMElement(<span class="string">"groupId"</span>);</span><br><span class="line">				Element artifactId = <span class="keyword">new</span> DOMElement(<span class="string">"artifactId"</span>);</span><br><span class="line">				Element version = <span class="keyword">new</span> DOMElement(<span class="string">"version"</span>);</span><br><span class="line">				groupId.addText(docJson.getString(<span class="string">"g"</span>));</span><br><span class="line">				artifactId.addText(docJson.getString(<span class="string">"a"</span>));</span><br><span class="line">				version.addText(docJson.getString(<span class="string">"v"</span>));</span><br><span class="line"></span><br><span class="line">				dependency.add(groupId);</span><br><span class="line">				dependency.add(artifactId);</span><br><span class="line">				dependency.add(version);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> dependency;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>百万数据秒级入库</title>
    <url>/Blog/Java/%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE%E7%A7%92%E7%BA%A7%E5%85%A5%E5%BA%93/</url>
    <content><![CDATA[<p>在项目中经常遇到大数据入库的需求,详细剖析该问题(指定数组大小拆分List,多线程入库,JDBC批量入库)<br><a id="more"></a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul>
<li>本文章的来自于作者工作中的真实项目,如果看到文章的你有更好的建议,烦请在文章下留言或私信我。</li>
</ul>
<h1 id="将List拆分为指定大小的List"><a href="#将List拆分为指定大小的List" class="headerlink" title="将List拆分为指定大小的List"></a>将List拆分为指定大小的List</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ArrayUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 数组操作工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/4/1 13:53</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayUtil</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> 将List拆分为 groupSize 大小的二维数组</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span> [values 待分组Array 分组, groupSize 分组大小]</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Date</span> 13:54 2019/4/1</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Return</span> java.util.List&lt;T&gt;</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;List&lt;T&gt;&gt; spilitGroup(List&lt;T&gt; values, <span class="keyword">int</span> groupSize) &#123;</span><br><span class="line">		List&lt;List&lt;T&gt;&gt; listGroup = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		<span class="comment">// List 长度</span></span><br><span class="line">		<span class="keyword">int</span> listSize = values.size();</span><br><span class="line">		<span class="keyword">int</span> runSize = (listSize / groupSize) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;T&gt; value = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; runSize; i++) &#123;</span><br><span class="line">			<span class="keyword">int</span> start = i * groupSize;</span><br><span class="line">			<span class="keyword">if</span> (i + <span class="number">1</span> == runSize) &#123;</span><br><span class="line">				<span class="keyword">int</span> end = listSize;</span><br><span class="line">				value = values.subList(start, end);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">int</span> end = (i + <span class="number">1</span>) * groupSize;</span><br><span class="line">				value = values.subList(start, end);</span><br><span class="line">			&#125;</span><br><span class="line">			listGroup.add(value);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> listGroup;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="创建数据入库线程"><a href="#创建数据入库线程" class="headerlink" title="创建数据入库线程"></a>创建数据入库线程</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: BatchSaveThread</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 多线程执行入库操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/03/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BatchSaveThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> List&lt;AdUserGridDo&gt; list;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BatchSaveThread</span><span class="params">(List&lt;AdUserGridDo&gt; list)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.list = list;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (list.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		advertisingUserDao.batchSaveJDBC(list);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="List执行批量入库"><a href="#List执行批量入库" class="headerlink" title="List执行批量入库"></a>List执行批量入库</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchSave</span><span class="params">(List&lt;AdUserGridDo&gt; models, <span class="keyword">int</span> groupSize)</span> </span>&#123;</span><br><span class="line">	List&lt;List&lt;AdUserGridDo&gt;&gt; groupList = <span class="keyword">new</span> ArrayUtil&lt;AdUserGridDo&gt;().spilitGroup(models, groupSize);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建线程数 = 数据总数 / groupList</span></span><br><span class="line">	<span class="keyword">int</span> threadPoolSize = groupList.size();</span><br><span class="line">	<span class="comment">// 最多创建 4 个线程</span></span><br><span class="line">	threadPoolSize = threadPoolSize &gt;= <span class="number">4</span> ? <span class="number">4</span> : threadPoolSize;</span><br><span class="line">	log.info(<span class="string">"##不为空: &#123;&#125; 地址列表,入库创建的线程数: &#123;&#125;"</span>, threadPoolSize);</span><br><span class="line">	ExecutorService executor = Executors.newFixedThreadPool(threadPoolSize);</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// 拆分网格数据</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = groupList.size(); i &lt; length; i++) &#123;</span><br><span class="line">			logger.error(<span class="string">"线程:"</span> + i + <span class="string">"save API"</span>);</span><br><span class="line">			List&lt;AdUserGridDo&gt; list = groupList.get(i);</span><br><span class="line">			BatchSaveThread saveThread = <span class="keyword">new</span> BatchSaveThread(list);</span><br><span class="line">			executor.execute(saveThread);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">	&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">		executor.shutdown();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Spring-项目批量入库"><a href="#Spring-项目批量入库" class="headerlink" title="Spring 项目批量入库"></a>Spring 项目批量入库</h1><ul>
<li>Repository 内调用</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchSaveJDBC</span><span class="params">(List&lt;AdvertisingEntity&gt; list)</span> </span>&#123;</span><br><span class="line">  BatchSave save = <span class="keyword">new</span> BatchSave();</span><br><span class="line">  save.batchSaveAdvertising(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>创建内部类,获取数据连接并执行入库</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">	ClassLoader cl = Thread.currentThread().getContextClassLoader();</span><br><span class="line">	InputStream in = <span class="keyword">new</span> BufferedInputStream(cl.getResourceAsStream(<span class="string">"jdbc.properties"</span>));</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		properties.load(in);</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;	</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				in.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ClassName</span>: BatchSave</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: JDBC 批量入库,解决效率问题</span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2019/03/14</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BatchSave</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 数据库连接驱动</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="keyword">private</span> String JDBC_DRIVER = properties.getProperty(<span class="string">"driverClass"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 连接数据库url</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="keyword">private</span> String JDBC_URL = properties.getProperty(<span class="string">"jdbcUrl"</span>);</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 连接数据库用户</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="keyword">private</span> String JDBC_USER = properties.getProperty(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	* 连接数据库密码</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="keyword">private</span> String JDBC_PASSWORD = properties.getProperty(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">batchSaveAdvertising</span><span class="params">(List&lt;AdvertisingEntity&gt; list)</span> </span>&#123;</span><br><span class="line">		Connection connection = <span class="keyword">null</span>;</span><br><span class="line">		PreparedStatement statement = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Class.forName(JDBC_DRIVER);</span><br><span class="line">			connection = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD);</span><br><span class="line">			String sql = <span class="string">"insert into t_advertising values(?,?,?,?,?)"</span>;</span><br><span class="line">			statement = connection.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">			connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">			AdvertisingEntity value = <span class="keyword">null</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">				value = list.get(i);</span><br><span class="line">				statement.setString(<span class="number">1</span>, value.getName());</span><br><span class="line">				statement.setString(<span class="number">2</span>, value.getLongitude());</span><br><span class="line">				statement.setString(<span class="number">3</span>, value.getLatitude());</span><br><span class="line">				statement.setInt(<span class="number">4</span>, value.getGridX());</span><br><span class="line">				statement.setInt(<span class="number">5</span>, value.getGridY());</span><br><span class="line"></span><br><span class="line">				statement.addBatch();</span><br><span class="line">				<span class="keyword">if</span> (i % <span class="number">100</span> == <span class="number">0</span>) &#123;</span><br><span class="line">					statement.executeBatch();</span><br><span class="line">					statement.clearParameters();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			statement.executeBatch();</span><br><span class="line">			connection.commit();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">					statement.close();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">					connection.close();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e2) &#123;</span><br><span class="line">				<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="SpringBoot-批量入库"><a href="#SpringBoot-批量入库" class="headerlink" title="SpringBoot 批量入库"></a>SpringBoot 批量入库</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InfoRepository</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(InfoRepository.class);</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> NamedParameterJdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> 用户网格数据批量入库</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span> [list 入库的数据]</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Date</span> 14:45 2019/4/1</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Return</span> void</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchSaveAdvertising</span><span class="params">(List&lt;AdUserGridDo&gt; list)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">		String sql = <span class="string">"insert into info values(:name,:longitude,:latitude)"</span>;</span><br><span class="line">		SqlParameterSource[] beanSource = SqlParameterSourceUtils.createBatch(list.toArray());</span><br><span class="line">		secondaryJdbcTemplate.batchUpdate(sql, beanSource);</span><br><span class="line">		<span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">		logger.info(<span class="string">"数据入库:\t"</span> + (end - start) + <span class="string">"ms"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>注:</strong>   </p>
<p>  Point 1. 使用<code>:属性名</code>传参<br>  Point 2. 将百万数据拆分成了<code>2w</code>一组的数据,分批入库减小了数据库压力<br>    Point 3. 入库创建的线程数需要根据服务器的性能进行调整,因为线程数量超过服务器负载能力时会造成不可描述的后果。</p>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>百度地图获取行政区边界坐标</title>
    <url>/blog/HTML/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E8%8E%B7%E5%8F%96%E8%A1%8C%E6%94%BF%E5%8C%BA%E8%BE%B9%E7%95%8C%E5%9D%90%E6%A0%87/</url>
    <content><![CDATA[百度地图获取行政区边界坐标
<a id="more"></a>
<h1 id="输入行政区名称-获取相应的行政区边界坐标"><a href="#输入行政区名称-获取相应的行政区边界坐标" class="headerlink" title="输入行政区名称,获取相应的行政区边界坐标"></a>输入行政区名称,获取相应的行政区边界坐标</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1.0, user-scalable=no"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">              body,</span></span><br><span class="line"><span class="undefined">              html,</span></span><br><span class="line"><span class="css">              <span class="selector-id">#allmap</span> &#123;</span></span><br><span class="line"><span class="undefined">                   width: 100%;</span></span><br><span class="line"><span class="undefined">                   height: 100%;</span></span><br><span class="line"><span class="undefined">                   overflow: hidden;</span></span><br><span class="line"><span class="undefined">                   margin: 0;</span></span><br><span class="line"><span class="undefined">                   font-family: "微软雅黑";</span></span><br><span class="line"><span class="undefined">              &#125;</span></span><br><span class="line"><span class="undefined">          </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=ed696RjHQMSM2nBkDDFFuXtV"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/jquery/2.1.1/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">title</span>&gt;</span>添加行政区划<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"getCity"</span> <span class="attr">style</span>=<span class="string">"margin: 1% 40%;"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入行政区名字"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span>获取行政区边界坐标<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"allmap"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">     <span class="comment">// 百度地图API功能</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> map = <span class="keyword">new</span> BMap.Map(<span class="string">"allmap"</span>);</span></span><br><span class="line"><span class="actionscript">     map.centerAndZoom(<span class="keyword">new</span> BMap.Point(<span class="number">116.403765</span>, <span class="number">39.914850</span>), <span class="number">5</span>);</span></span><br><span class="line"><span class="undefined">     map.enableScrollWheelZoom();</span></span><br><span class="line"><span class="javascript">     $(<span class="string">'#city'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> city = $(<span class="string">':input'</span>).val();</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> bdary = <span class="keyword">new</span> BMap.Boundary();</span></span><br><span class="line"><span class="actionscript">          bdary.get(city, <span class="function"><span class="keyword">function</span><span class="params">(rs)</span> </span>&#123; <span class="comment">//获取行政区域</span></span></span><br><span class="line"><span class="actionscript">              map.clearOverlays(); <span class="comment">//清除地图覆盖物      </span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">var</span> count = rs.boundaries.length; <span class="comment">//行政区域的点有多少个</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">if</span>(count === <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                   alert(<span class="string">'未能获取当前输入行政区域'</span>);</span></span><br><span class="line"><span class="actionscript">                   <span class="keyword">return</span>;</span></span><br><span class="line"><span class="undefined">              &#125;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">var</span> pointArray = [];</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                   <span class="keyword">var</span> ply = <span class="keyword">new</span> BMap.Polygon(rs.boundaries[i], &#123;</span></span><br><span class="line"><span class="undefined">                        strokeWeight: 2,</span></span><br><span class="line"><span class="actionscript">                        strokeColor: <span class="string">"#ff0000"</span></span></span><br><span class="line"><span class="actionscript">                   &#125;); <span class="comment">//建立多边形覆盖物</span></span></span><br><span class="line"><span class="javascript">                   <span class="keyword">var</span> str = <span class="built_in">JSON</span>.stringify(ply.ia); <span class="comment">//将BMap获取的行政区边界经纬度转为字符串</span></span></span><br><span class="line"><span class="undefined">                   spiltStr(str);</span></span><br><span class="line"><span class="actionscript">                   map.addOverlay(ply); <span class="comment">//添加覆盖物</span></span></span><br><span class="line"><span class="undefined">                   pointArray = pointArray.concat(ply.getPath());</span></span><br><span class="line"><span class="undefined">              &#125;</span></span><br><span class="line"><span class="actionscript">              map.setViewport(pointArray); <span class="comment">//调整视野 </span></span></span><br><span class="line"><span class="undefined">          &#125;);</span></span><br><span class="line"><span class="undefined">     &#125;);</span></span><br><span class="line"><span class="actionscript">     <span class="comment">//字符串封装为json</span></span></span><br><span class="line"><span class="actionscript">     <span class="function"><span class="keyword">function</span> <span class="title">spiltStr</span><span class="params">(city)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">//console.log(city+'---')</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> str = <span class="string">"121.34277300108,31.300726938605;121.34023490295,31.30656768649;121.34101430412,31.321852305581;121.34532986852,31.32373744307;121.34507562469,31.326325179418;121.34279680099,31.327430729214;121.33368722478,31.352486594706;121.32863323993,31.355946076452;121.3306342856,31.389518049891;121.32683032531,31.41448550211;121.33644426228,31.420048486776;121.33796679321,31.419826266008;121.33974283911,31.427986737928;121.33898864558,31.440913595385;121.33444416932,31.453434852669;121.32712127167,31.459698918395;121.32359337774,31.475180614573;121.31526712011,31.489321129362;121.31449534014,31.502646507446;121.29513460234,31.511763775428;121.28658896966,31.509453948404;121.27854782016,31.503306859672;121.25459705023,31.498569551283;121.21061795124,31.479894989687;121.20080623465,31.473441396056;121.19227370437,31.461329066124;121.18074389625,31.455132109974;121.17248676891,31.457784975575;121.15417124487,31.449591888376;121.15190698691,31.44485092269;121.16995564339,31.438369269356;121.15641170403,31.42808158186;121.16368200305,31.418036455773;121.15615209913,31.408916433233;121.15389894579,31.396855643986;121.14636752368,31.389519869487;121.1216241984,31.381207905131;121.126436312,31.375522857236;121.11327467502,31.372544843095;121.11504878311,31.358515688821;121.12543166,31.355738088985;121.12517943556,31.350576427542;121.13706169265,31.348468587078;121.13626008815,31.30993641992;121.14684967884,31.308793560918;121.15113791549,31.315474234933;121.16066357022,31.29917558545;121.16692386311,31.291073907869;121.16166696203,31.285625519425;121.16718195826,31.276446521814;121.17544355574,31.279163976083;121.18898716896,31.263877724792;121.20505391684,31.260119976477;121.21562156159,31.267376880475;121.27097267115,31.262577404004;121.27425078362,31.26044885246;121.29337239048,31.249760859417;121.29940623897,31.238478630296;121.32079145614,31.233202075819;121.34077824014,31.238325554883;121.34559319768,31.244083837124;121.3549768665,31.248019413486;121.36690797737,31.246319504389;121.37222869771,31.253136099939;121.3863911862,31.256071762754;121.3808205898,31.26662893588;121.36689179338,31.268484647818;121.36561439598,31.274102752167;121.35038733712,31.278662550346;121.34277300108,31.300726938605"</span>;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> points = [];</span></span><br><span class="line"><span class="javascript">          $.each(str.split(<span class="string">";"</span>), <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">var</span> point = &#123;&#125;;</span></span><br><span class="line"><span class="actionscript">              point.lng = value.split(<span class="string">','</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">              point.lat = value.split(<span class="string">','</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="undefined">              points.push(point);</span></span><br><span class="line"><span class="undefined">          &#125;);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> data = <span class="built_in">JSON</span>.stringify(points);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span>(city == data) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="string">'true'</span>);</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">//console.log(data);</span></span></span><br><span class="line"><span class="undefined">     &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>BMap</tag>
      </tags>
  </entry>
  <entry>
    <title>编程常用函数记录</title>
    <url>/Blog/%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>统计在编程中搜索频率较高的<code>Java</code>常用函数,内容来源于编码日常记录.<br><a id="more"></a></p>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="Math-函数"><a href="#Math-函数" class="headerlink" title="Math 函数"></a>Math 函数</h2><blockquote>
<p>数值向上取整</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: formatRMB</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: `分`|转为`元`;并且向上取整</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> amount</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">formatRMB</span><span class="params">(<span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> num = Math.ceil(amount / <span class="number">100</span>);</span><br><span class="line">		<span class="keyword">if</span> (num % <span class="number">1.0</span> == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> String.valueOf((<span class="keyword">int</span>) num);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> String.valueOf(num);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h2 id="判断（excel）文件类型"><a href="#判断（excel）文件类型" class="headerlink" title="判断（excel）文件类型"></a>判断（excel）文件类型</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Title</span>: isExcel2003</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Description</span>: 是否为2013的excel,返回true是`.xls`文件</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Return</span> boolean</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isExcel2003</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> filePath.matches(<span class="string">"^.+\\.(?i)(xls)$"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Title</span>: isExcelcsv</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Description</span>: 是否为csv,返回true:`.csv`文件</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Return</span> boolean</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isExcelcsv</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> filePath.matches(<span class="string">"^.+\\.(?i)(csv)$"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Title</span>: isExcel2007</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Description</span>: 是否是2007的excel，返回true是2007</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">	* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	* <span class="doctag">@Return</span> boolean</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isExcel2007</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> filePath.matches(<span class="string">"^.+\\.(?i)(xlsx)$"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="限制文本框上传的文件类型"><a href="#限制文本框上传的文件类型" class="headerlink" title="限制文本框上传的文件类型"></a>限制文本框上传的文件类型</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#element input'</span>).attr(<span class="string">'accept'</span>, [<span class="string">'.xls'</span>, <span class="string">'.xlsx'</span>, <span class="string">'.csv'</span>]);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>页面跳转url传参的参数获取</title>
    <url>/Blog/HTML/%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%ACurl%E4%BC%A0%E5%8F%82%E7%9A%84%E5%8F%82%E6%95%B0%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[页面跳转url传参的参数获取
<a id="more"></a>
<p># </p>
]]></content>
      <categories>
        <category>Blog</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>URL</tag>
      </tags>
  </entry>
  <entry>
    <title>高德地理编码</title>
    <url>/api/%E9%AB%98%E5%BE%B7%E5%9C%B0%E7%90%86%E7%BC%96%E7%A0%81/</url>
    <content><![CDATA[<p>Java使用高德地理编码API<br><a id="more"></a></p>
<h1 id="API说明"><a href="#API说明" class="headerlink" title="API说明"></a>API说明</h1><p>地理编码 API是通过 HTTP/HTTPS 协议访问远程服务的接口,提供结构化地址与经纬度之间的相互转化的能力。</p>
<ul>
<li><p>地理编码: 将详细的结构化地址转换为高德经纬度坐标。</p>
</li>
<li><p>注: API地址<a href="https://lbs.amap.com/api/webservice/guide/api/georegeo/" target="_blank">高德 —— 地理编码</a>,同时需要申请key,具体方法查看链接</p>
</li>
</ul>
<h1 id="步骤解析"><a href="#步骤解析" class="headerlink" title="步骤解析"></a>步骤解析</h1><ol>
<li><p><a href="https://lbs.amap.com/dev/key" target="_blank">申请key</a>;</p>
</li>
<li><p>使用<code>RestTemplate</code> 调用<code>RESt API</code>;</p>
</li>
<li><p>返回结果信息,做对应的操作。</p>
</li>
</ol>
<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- lombok 插件,使用注解的方式简化实体类get/set 方法生成 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">  &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- Gson --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h1 id="部分编码"><a href="#部分编码" class="headerlink" title="部分编码"></a>部分编码</h1><ul>
<li>创建外部配置文件,设置申请的 高德<code>key</code>等配置</li>
</ul>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><blockquote>
<p>创建配置文件<code>geocode.properties</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 高德——地理编码</span><br><span class="line">geo.url= http://restapi.amap.com/v3/geocode/geo</span><br><span class="line">geo.key= xxx #自己申请的key</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改启动类,增加该配置类注解</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableConfigurationProperties</span>(GeocodingProperties.class)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>使用实体类,获取配置文件内容</p>
</blockquote>
<ul>
<li><code>SpringMVC</code>项目获取配置文件的方式</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeocodeUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span> &#123;</span><br><span class="line">		ClassLoader cl = Thread.currentThread().getContextClassLoader();</span><br><span class="line">		InputStream in = <span class="keyword">new</span> BufferedInputStream(cl.getResourceAsStream(<span class="string">"gaode.properties"</span>));</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			properties.load(in);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					in.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * API 请求URL</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String GD_URL = properties.getProperty(<span class="string">"gaodeUrl"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 高德地图 key</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String GD_KEY = properties.getProperty(<span class="string">"gaodeKey"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>SpringBoot</code>使用实体类获取自定义配置代码块</li>
</ul>
<blockquote>
<p>配置属性实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sanss.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:geocode.properties"</span>)</span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"geo"</span>)</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeocodingProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String key;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>工具类代码块</p>
</blockquote>
<ul>
<li><p>说明</p>
<ol>
<li>该类中的多个内部实体类,可以独立生成文件;</li>
<li>返回结果获取的实体类属性,可以自己增加或更改成与需求一致;</li>
<li>只是最简单的方式完成请求API,其他操作需根据自身需求进行更改。</li>
</ol>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sanss.util.geocode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sanss.config.GeocodingProperties;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: GeoDto</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 调用高德地理编码API传递的参数实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/03/27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GeoDto</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Boolean batch;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String city;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String key;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GeoDto</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GeoDto</span><span class="params">(List&lt;String&gt; address, String city, Boolean batch, String url, String key)</span> </span>&#123;</span><br><span class="line">		StringBuilder addressSb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = address.size(); i &lt; length; i++) &#123;</span><br><span class="line">			addressSb.append(address.get(i));</span><br><span class="line">			addressSb.append(<span class="string">"|"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">this</span>.address = addressSb.substring(<span class="number">0</span>, addressSb.lastIndexOf(<span class="string">"|"</span>)).toString();</span><br><span class="line">		<span class="keyword">this</span>.city = city;</span><br><span class="line">		<span class="keyword">this</span>.batch = batch;</span><br><span class="line">		<span class="keyword">this</span>.url = url;</span><br><span class="line">		<span class="keyword">this</span>.key = key;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> url + <span class="string">"?batch="</span> + batch + <span class="string">"&amp;key="</span> + key + <span class="string">"&amp;city="</span> + city + <span class="string">"&amp;address="</span> + address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: Geocodes</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 返回结果实体类, 只获取了location:经纬度 API 地址：https://lbs.amap.com/api/webservice/guide/api/georegeo</span></span><br><span class="line"><span class="comment"> * 返回结果示例: &#123;"status":"1","info":"OK","infocode":"10000","count":"1","geocodes":[&#123;"formatted_address":"上海市浦东新区东方明珠","country":"中国","province":"上海市","citycode":"021","city":"上海市","district":"浦东新区","township":[],"neighborhood":&#123;"name":[],"type":[]&#125;,"building":&#123;"name":[],"type":[]&#125;,"adcode":"310115","street":[],"number":[],"location":"121.499740,31.239853","level":"兴趣点"&#125;]&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/03/27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Geocodes</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String location;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Geocode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> status;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> List&lt;Geocodes&gt; geocodes;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: GeoCodingUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 高德地理编码/逆编码(将地址转换为经度,纬度) API: https://lbs.amap.com/api/webservice/guide/api/georegeo/#scene</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/03/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeoCodingUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> GeocodingProperties properties;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> GeoCodingUtil geoCodingUtil;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@PostConstruct</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		geoCodingUtil = <span class="keyword">this</span>;</span><br><span class="line">		geoCodingUtil.properties = <span class="keyword">this</span>.properties;</span><br><span class="line">		geoCodingUtil.restTemplate = <span class="keyword">this</span>.restTemplate;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getShanghaiGeocoding</span><span class="params">(List&lt;String&gt; address, <span class="keyword">boolean</span> batch)</span> </span>&#123;</span><br><span class="line">		List&lt;String&gt; point = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">		System.out.println(geoCodingUtil.properties.toString());</span><br><span class="line"></span><br><span class="line">		GeoDto geoDto = <span class="keyword">new</span> GeoDto(address, <span class="string">"上海"</span>, batch, geoCodingUtil.properties.getUrl(),</span><br><span class="line">				geoCodingUtil.properties.getKey());</span><br><span class="line">		String realUrl = geoDto.toString();</span><br><span class="line">		System.out.println(realUrl);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Geocode geocode = geoCodingUtil.restTemplate.getForObject(realUrl, Geocode.class);</span><br><span class="line">			<span class="keyword">int</span> count = geocode.getCount();</span><br><span class="line">			<span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				List&lt;Geocodes&gt; geocodes = geocode.getGeocodes();</span><br><span class="line">				Iterator&lt;Geocodes&gt; iterator = geocodes.iterator();</span><br><span class="line">				String location;</span><br><span class="line">				<span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">					location = iterator.next().getLocation();</span><br><span class="line">					<span class="keyword">if</span> (location == <span class="keyword">null</span>) &#123;</span><br><span class="line">						point.add(<span class="string">""</span>);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					point.add(location);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> point;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sanss.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sanss.config.GeocodingProperties;</span><br><span class="line"><span class="keyword">import</span> com.sanss.util.geocode.GeoCodingUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeoCodingUtilTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> GeocodingProperties properties;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">propertiesTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(properties.getKey() + <span class="string">"\t"</span> + properties.getUrl());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getShanghaiGeocodingTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 目前最高支持十个地址查询</span></span><br><span class="line">		List&lt;String&gt; address = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">		address.add(<span class="string">"东方明珠广播塔"</span>);</span><br><span class="line">		address.add(<span class="string">"虹口足球场"</span>);</span><br><span class="line">		address.add(<span class="string">"徐家汇地铁站"</span>);</span><br><span class="line">		List&lt;String&gt; points = <span class="keyword">new</span> GeoCodingUtil().getShanghaiGeocoding(address, <span class="keyword">true</span>);</span><br><span class="line">		System.out.println(points);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>打印结果</li>
</ul>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">[121.499740,31.239853, 121.480592,31.271447, 121.438133,31.191698]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>api</category>
      </categories>
      <tags>
        <tag>api</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka服务消费者Feign</title>
    <url>/SpringCloud/Eureka%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign/</url>
    <content><![CDATA[<p>Eureka使用Feign实现调用API<br><a id="more"></a></p>
<h1 id="基于Eureka搭建Feign消费者"><a href="#基于Eureka搭建Feign消费者" class="headerlink" title="基于Eureka搭建Feign消费者"></a>基于Eureka搭建Feign消费者</h1><blockquote>
<p>添加依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.19.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动类增加注解</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaFeignApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="meta">@LoadBalanced</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(EurekaFeignApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>@EnableCircuitBreaker</code>: 服务降级</li>
<li><code>@EnableFeignClients</code>: Feign客户端</li>
<li><code>@EnableDiscoveryClient</code>: 注册到Eureka服务中心</li>
</ul>
<ul>
<li>上三个注解可以使用<code>@SpringCloud</code>注解代替</li>
</ul>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">4001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">microservice-consumer-feign</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:1001/eureka/</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    instance-id:</span> <span class="string">$&#123;spring.cloud.client.ipAddress&#125;:$&#123;spring.application.name&#125;:$&#123;server.port&#125;</span></span><br><span class="line"><span class="comment">#    prefer-ip-address: true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line"><span class="attr">  hystrix:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span>   <span class="comment"># 全局启用 Hystrix,默认禁用</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line"><span class="attr">  endpoint:</span></span><br><span class="line"><span class="attr">    web:</span></span><br><span class="line"><span class="attr">      exposure:</span></span><br><span class="line"><span class="attr">        include:</span> <span class="string">'hystrix.stream'</span></span><br><span class="line"><span class="attr">    health:</span></span><br><span class="line"><span class="attr">      show-details:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">  ribbon:</span></span><br><span class="line"><span class="attr">    eager-load:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      clients:</span> <span class="string">microsevice-provider-user</span></span><br><span class="line"><span class="attr">    MaxAutoRetries:</span> <span class="number">1</span>                 <span class="comment"># 同一实例最大重试次数,不包括首次调用</span></span><br><span class="line"><span class="attr">    MaxAutoRetriesNextServer:</span> <span class="number">2</span>       <span class="comment"># 重试其他实例的最大重试次数,不包括首次所选的server</span></span><br><span class="line"><span class="attr">    OkToRetryOnAllOperations:</span> <span class="literal">false</span>   <span class="comment"># 是否所有操作都进行重试</span></span><br></pre></td></tr></table></figure>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><blockquote>
<p><code>Book</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Double price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>User</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h3><blockquote>
<p><code>BookFeignClient</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@ClassName</span> BookFeignClient</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Description</span> &lt;br/&gt;</span></span><br><span class="line"><span class="comment"> *  获取造成fallback的原因, 同时实现服务降级</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Date</span> 2019/2/15 9:50</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"microsevice-provider-user"</span>,fallbackFactory = BookFeignClientFallbackFactory.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookFeignClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function">Book <span class="title">queryBookInfoById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Long id)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> 获得造成fallback的原因</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="meta">@Component</span></span><br><span class="line">	<span class="meta">@Slf</span>4j</span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">BookFeignClientFallbackFactory</span> <span class="keyword">implements</span> <span class="title">FallbackFactory</span>&lt;<span class="title">BookFeignClient</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> BookFeignClient <span class="title">create</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> BookFeignClient() &#123;</span><br><span class="line">				<span class="meta">@Override</span></span><br><span class="line">				<span class="function"><span class="keyword">public</span> Book <span class="title">queryBookInfoById</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">					log.error(<span class="string">"进入回退逻辑"</span>, cause);</span><br><span class="line">					<span class="keyword">return</span> <span class="keyword">new</span> Book(id, <span class="string">"领域驱动设计"</span>, <span class="number">89.99</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>UserFeignClient</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserFeignClient</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> &lt;br/&gt; </span></span><br><span class="line"><span class="comment"> * 服务提供者调用类 \n `<span class="doctag">@FeignClient</span>`的 name、url 等属性支持占位符,例如(`<span class="doctag">@FeignClient</span>(name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/14 16:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"microsevice-provider-user"</span>, fallback = UserFeignClientFallback.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserFeignClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/users/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function">User <span class="title">queryUserInfoById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Long id)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> com.lerning.entity.User</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span> queryUserInfoByIdAndName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> GET 请求多参数的URL写法一</span></span><br><span class="line"><span class="comment">	 * &lt;link src="http://www.itmuch.com/spring-cloud-sum/feign-multiple-params/" /&gt;</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/users/findByIdAndName"</span>)</span><br><span class="line">	<span class="function">User <span class="title">queryUserInfoByIdAndName</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span> Long id,</span></span><br><span class="line"><span class="function">			@<span class="title">RequestParam</span><span class="params">(<span class="string">"username"</span>)</span> String userName)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/users/findByIdAndName"</span>)</span><br><span class="line">	<span class="function">User <span class="title">queryUserInfoByIdAndName</span><span class="params">(@RequestParam Map&lt;String, Object&gt; param)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 服务降级</span></span><br><span class="line">	<span class="meta">@Component</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">UserFeignClientFallback</span> <span class="keyword">implements</span> <span class="title">UserFeignClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> User <span class="title">queryUserInfoById</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> User(id, <span class="string">"默认用户"</span>, <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> User <span class="title">queryUserInfoByIdAndName</span><span class="params">(Long id, String userName)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> User(id, <span class="string">"默认用户"</span>, <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> User <span class="title">queryUserInfoByIdAndName</span><span class="params">(Map&lt;String, Object&gt; param)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> User(<span class="number">1L</span>, <span class="string">"默认用户"</span>, <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@ClassName</span> </span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Description</span> &lt;br/&gt;</span></span><br><span class="line"><span class="comment"> *  测试Feign调用Controller</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Date</span>  2019/2/14 14:42</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/feign"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> UserFeignClient userFeignClient;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> BookFeignClient bookFeignClient;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.userFeignClient.queryUserInfoById(id);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/user/findByIdAndName"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">queryUserInfoByIdAndName</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span> Long id,</span></span><br><span class="line"><span class="function">			@<span class="title">RequestParam</span><span class="params">(<span class="string">"username"</span>)</span> String userName) </span>&#123;</span><br><span class="line">		<span class="comment">// GET 请求多参数的 URL,参数传递方式一</span></span><br><span class="line">		<span class="comment">// return this.userFeignClient.queryUserInfoByIdAndName(id, userName);</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// GET 请求多参数的 URL 参数传递方式二</span></span><br><span class="line">		Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">		param.put(<span class="string">"id"</span>, id);</span><br><span class="line">		param.put(<span class="string">"username"</span>, userName);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.userFeignClient.queryUserInfoByIdAndName(param);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping</span>(<span class="string">"/book/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Book <span class="title">queryBookInfoById</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.bookFeignClient.queryBookInfoById(id);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="自定义Feign自定义配置-细粒度配置"><a href="#自定义Feign自定义配置-细粒度配置" class="headerlink" title="自定义Feign自定义配置[细粒度配置]"></a>自定义<code>Feign</code>自定义配置[细粒度配置]</h2><blockquote>
<p>自定义日志级别 </p>
</blockquote>
<ul>
<li><p>默认 Feign 是不打印任何日志的,开启 Feign 日志,Feign 日志有四种级别</p>
<ul>
<li>NONE[性能最佳,适用于生产]: 不记录任何日志(默认值)</li>
<li>BASIC[适用于生产环境追踪问题]: 仅记录请求方法、URL、响应状态码及响应时间</li>
<li>HEADERS: 记录 BASIC 级别的基础上,记录请求和响应的 header</li>
<li>FULL[比较适用于开发及测试环境定位问题]: 记录请求和响应的 header、body 和元数据</li>
</ul>
</li>
</ul>
<ul>
<li>配置参考博客 <a href="http://www.itmuch.com/spring-cloud/finchley-10/" target="_blank">Feign配置自定义<code>[细粒度配置]</code></a></li>
</ul>
<blockquote>
<p><code>Feign</code> 使用 <code>Hystrix</code> 配置</p>
</blockquote>
<ul>
<li>配置 Feign 相关 Hystrix 配置</li>
</ul>
<ul>
<li>配置参考博客 <a href="http://www.itmuch.com/spring-cloud/finchley-14/" target="_blank">周立-<code>Feign使用Hystrix</code></a></li>
</ul>
<!-- > 配置监控端点并实现可视化监控数据   -->
<blockquote>
<p><code>Ribbon</code> 的饥饿加载(eager-load)模式  </p>
</blockquote>
<p>Problems:  </p>
<p>  在使用<code>SpringCloud</code>的<code>Ribbon</code>或<code>Feign</code>来实现服务调用的时候,如果我们的机器或网络环境等原因不是很好,有时候后会出现<br>  : 服务消费方调用服务提供方接口时,第一次请求经常会超时,而之后调用就没有问题了.</p>
<ul>
<li>解决方式参考 <a href="http://blog.didispace.com/spring-cloud-tips-ribbon-eager/" target="_blank">翟永超-Ribbon的饥饿加载模式</a> </li>
</ul>
<blockquote>
<p><code>Feign</code> 的重试</p>
</blockquote>
<p> 参考 <a href="http://www.itmuch.com/spring-cloud-sum/spring-cloud-retry/" target="_blank">周立-SpringCloud 各组件重试总结</a></p>
<h2 id="配套代码"><a href="#配套代码" class="headerlink" title="配套代码"></a>配套代码</h2><ul>
<li>GitHub: <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-feign" target="_blank" rel="noopener">https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-feign</a></li>
</ul>
<blockquote>
<p>参考博客</p>
</blockquote>
<ul>
<li><a href="http://www.itmuch.com/spring-cloud/finchley-9/" target="_blank" rel="noopener">周立 —— Feign</a></li>
</ul>
<blockquote>
<p>推荐阅读</p>
</blockquote>
<ul>
<li><a href="http://blog.didispace.com/springcloud2/" target="_blank">程序员DD(翟永超) —— 服务消费者</a></li>
</ul>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
        <tag>Eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>Ext 4.0 使用笔记</title>
    <url>/blog/Ext%204.0%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[Ext 4.0 使用笔记
<a id="more"></a>
<h1 id="Ext-4-0-使用笔记"><a href="#Ext-4-0-使用笔记" class="headerlink" title="Ext 4.0 使用笔记"></a>Ext 4.0 使用笔记</h1><h2 id="获取Grid-当前选中行数据"><a href="#获取Grid-当前选中行数据" class="headerlink" title="获取Grid 当前选中行数据"></a>获取Grid 当前选中行数据</h2><blockquote>
<p>获取行数据         </p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> record = Ext.getCmp(<span class="string">'now_alarm'</span>).getSelectionModel().getSelection();</span><br><span class="line"><span class="comment">//获取选中单行的某列值 </span></span><br><span class="line"><span class="keyword">var</span> deviceName = record[<span class="number">0</span>].data.DEVICE_NAME;</span><br></pre></td></tr></table></figure>
<h2 id="列宽自动适应"><a href="#列宽自动适应" class="headerlink" title="列宽自动适应"></a>列宽自动适应</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">forceFit:<span class="literal">true</span>,<span class="comment">//注意不要用autoFill:true;那样设置当GridPanel的大小变化(比如resize了它)时不会自动调整column的宽度</span></span><br><span class="line">scrollOffset:<span class="number">0</span><span class="comment">//不加这个的话,会在grid的最右边有个空白,留作滚动条的位置</span></span><br></pre></td></tr></table></figure>
<h2 id="load-store"><a href="#load-store" class="headerlink" title="load store"></a>load store</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">	<span class="comment">//查询参数</span></span><br><span class="line">  <span class="keyword">var</span> getParams = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> &#123;</span><br><span class="line">			sheetIds : Ext.getCmp(<span class="string">'sheetId'</span>).getValue(),</span><br><span class="line">			station : Ext.getCmp(<span class="string">'station'</span>).getValue(),</span><br><span class="line">			maintain : Ext.getCmp(<span class="string">'maintainer'</span>).getValue(),</span><br><span class="line">			startTime : Ext.util.Format.date(Ext.getCmp(<span class="string">'startTime'</span>).getValue(),<span class="string">'Y-m-d'</span>),</span><br><span class="line">			<span class="comment">//status : state,// Ext.getCmp('status').getValue(),</span></span><br><span class="line">			endTime : Ext.util.Format.date(Ext.getCmp(<span class="string">'endTime'</span>).getValue(),<span class="string">'Y-m-d'</span>),</span><br><span class="line">			worksheettype : Ext.getCmp(<span class="string">'worksheetType'</span>).getValue()</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="comment">// 条件查询</span></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">reportLoad</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> params = getParams();</span><br><span class="line"><span class="comment">//		console.log(params);</span></span><br><span class="line">		<span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> params) &#123;</span><br><span class="line">			<span class="keyword">if</span> (params[key] == <span class="literal">null</span> || params[key] == <span class="string">""</span>) &#123;</span><br><span class="line">				<span class="keyword">delete</span> params[key];</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		reportStore.setProxy(&#123;</span><br><span class="line">			type : <span class="string">'ajax'</span>,</span><br><span class="line">			url: <span class="string">'../centerSheet/getWorkSheet'</span>,</span><br><span class="line">			extraParams : params,</span><br><span class="line">			reader:&#123;</span><br><span class="line">				type:<span class="string">'json'</span>,</span><br><span class="line">				root:<span class="string">'records'</span>,</span><br><span class="line">				totalProperty:<span class="string">'totalCount'</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		<span class="keyword">switch</span> (state) &#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">			Ext.getCmp(<span class="string">'no_confirm'</span>).getStore().load();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			Ext.getCmp(<span class="string">'no_repair'</span>).getStore().load();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			Ext.getCmp(<span class="string">'no_statements'</span>).getStore().load();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">			Ext.getCmp(<span class="string">'statements'</span>).getStore().load();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建window"><a href="#创建window" class="headerlink" title="创建window"></a>创建window</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Ext.create(<span class="string">'Ext.window.Window'</span>, &#123;</span><br><span class="line">	title : <span class="string">'问题单信息录入'</span>,</span><br><span class="line">	labelWidth : <span class="number">75</span>, <span class="comment">// label settings here cascade unless overridden</span></span><br><span class="line">	url : <span class="string">'save-form.php'</span>,</span><br><span class="line">	frame : <span class="literal">true</span>,</span><br><span class="line">	bodyStyle : <span class="string">'padding:5px 5px 0'</span>,</span><br><span class="line">	width : <span class="built_in">document</span>.body.clientWidth * <span class="number">0.58</span>,</span><br><span class="line">	renderTo : Ext.getBody(),</span><br><span class="line">	layout : <span class="string">'column'</span>, <span class="comment">// arrange fieldsets side by side</span></span><br><span class="line">	xtype : <span class="string">'form'</span>,</span><br><span class="line">	defaults : &#123;</span><br><span class="line">		bodyPadding : <span class="number">4</span></span><br><span class="line">	&#125;,</span><br><span class="line">	items : [ &#123;</span><br><span class="line">		xtype : <span class="string">'fieldset'</span>,</span><br><span class="line">		columnWidth : <span class="number">1</span>,</span><br><span class="line">		title : <span class="string">'告警基本信息'</span>,</span><br><span class="line">		collapsible : <span class="literal">true</span>,</span><br><span class="line">		defaultType : <span class="string">'textfield'</span>,</span><br><span class="line">		defaults : &#123;</span><br><span class="line">			anchor : <span class="string">'100%'</span></span><br><span class="line">		&#125;,</span><br><span class="line">		layout : <span class="string">'anchor'</span>,</span><br><span class="line">		items : [ &#123;</span><br><span class="line">			fieldLabel : <span class="string">'Field 1'</span>,</span><br><span class="line">			name : <span class="string">'field1'</span></span><br><span class="line">		&#125;, &#123;</span><br><span class="line">			fieldLabel : <span class="string">'Field 2'</span>,</span><br><span class="line">			name : <span class="string">'field2'</span></span><br><span class="line">		&#125; ]</span><br><span class="line">	&#125; ]</span><br><span class="line">&#125;).show();</span><br></pre></td></tr></table></figure>
<h2 id="获取选中行displayField的值"><a href="#获取选中行displayField的值" class="headerlink" title="获取选中行displayField的值"></a>获取选中行<code>displayField</code>的值</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Ext.getCmp(<span class="string">'distributeUserName'</span>).getRawValue(),</span><br></pre></td></tr></table></figure>
<h2 id="获取点击行数据"><a href="#获取点击行数据" class="headerlink" title="获取点击行数据"></a>获取点击行数据</h2><p><code>Ext.getCmp(&#39;now_alarm&#39;).getStore().getAt(index).data</code>    </p>
<h2 id="Store-load"><a href="#Store-load" class="headerlink" title="Store load"></a>Store load</h2><blockquote>
<p>第一种        </p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">historyStore.setProxy(&#123;</span><br><span class="line">	type : <span class="string">'ajax'</span>,</span><br><span class="line">	url : newUrl,</span><br><span class="line">	reader:&#123;</span><br><span class="line">		type:<span class="string">"json"</span>,</span><br><span class="line">		root:<span class="string">'root'</span>,</span><br><span class="line">		totalProperty:<span class="string">'totalCount'</span></span><br><span class="line">	&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">Ext.getCmp(<span class="string">'history_alarm'</span>).getStore().load();</span><br></pre></td></tr></table></figure>
<blockquote>
<p>第二种        </p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// now_alarm : GridPanel</span></span><br><span class="line"><span class="keyword">var</span> gridStore =  Ext.getCmp(<span class="string">'now_alarm'</span>).getStore();</span><br><span class="line">gridStore.reload(gridStore.lastOptions);</span><br></pre></td></tr></table></figure>
<h2 id="store加载传参"><a href="#store加载传参" class="headerlink" title="store加载传参"></a><code>store</code>加载传参</h2><blockquote>
<p><code>proxy</code> 设置 <code>extraParams</code></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xtype : <span class="string">'combo'</span>,</span><br><span class="line">fieldLabel : <span class="string">'维保人员'</span>,</span><br><span class="line">id : <span class="string">'sendOperUser'</span>,</span><br><span class="line">name : <span class="string">'sendOperUser'</span>,</span><br><span class="line">style:&#123;</span><br><span class="line">	margin : <span class="string">'10px 10px 10px 50px'</span></span><br><span class="line">&#125;,</span><br><span class="line">resizable : <span class="literal">false</span>,</span><br><span class="line">store : Ext.create(<span class="string">'Ext.data.Store'</span>,&#123;</span><br><span class="line">   	autoLoad : <span class="literal">true</span>,</span><br><span class="line">   	fields : [ &#123;</span><br><span class="line">		name : <span class="string">'id'</span>,</span><br><span class="line">		mapping :<span class="string">'ID'</span>,</span><br><span class="line">	&#125;, &#123;</span><br><span class="line">		name : <span class="string">'name'</span>,</span><br><span class="line">		mapping :<span class="string">'NAME'</span>,</span><br><span class="line">	&#125;],</span><br><span class="line">   	proxy : &#123;</span><br><span class="line">   		type : <span class="string">"ajax"</span>,</span><br><span class="line">   		url : <span class="string">'../alarm/getMaintainer'</span>,</span><br><span class="line">   		extraParams : &#123;</span><br><span class="line">   			error_sheet : errorSheetId,</span><br><span class="line">   			company : company</span><br><span class="line">		&#125;,</span><br><span class="line">   		reader : &#123;</span><br><span class="line">   			type : <span class="string">"json"</span></span><br><span class="line">   		&#125;</span><br><span class="line">   	&#125;,</span><br><span class="line">   	listeners: &#123;</span><br><span class="line">		load: <span class="function"><span class="keyword">function</span>(<span class="params">store, records, successful, eOpts</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">for</span>(k <span class="keyword">in</span> records)&#123;</span><br><span class="line">				<span class="keyword">if</span> (records[k].data) &#123;</span><br><span class="line">					<span class="comment">// console.log(records[k].data);</span></span><br><span class="line">					<span class="keyword">if</span> (distribute_account == records[k].data.name) &#123;</span><br><span class="line">						Ext.getCmp(<span class="string">'sendOperUser'</span>).setValue(records[k].data.id);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">   &#125;),</span><br><span class="line">   valueField : <span class="string">'id'</span>,</span><br><span class="line">displayField : <span class="string">'name'</span>,</span><br><span class="line">mode : <span class="string">'local'</span>,</span><br><span class="line">triggerAction : <span class="string">'all'</span>,</span><br><span class="line">allowBlank : <span class="literal">false</span>,</span><br><span class="line">blankText : <span class="string">'必选项'</span>,</span><br><span class="line">maxHeight : <span class="number">150</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>拼接URL    </p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">proxy : &#123;</span><br><span class="line">	type : <span class="string">"ajax"</span>,</span><br><span class="line">	url : <span class="string">'../alarm/getMaintainer?error_sheet='</span>+errorSheetId+<span class="string">'&amp;company='</span>+company,</span><br><span class="line">	reader : &#123;</span><br><span class="line">		type : <span class="string">"json"</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h2 id="监听-tabpanel-事件"><a href="#监听-tabpanel-事件" class="headerlink" title="监听 tabpanel 事件"></a>监听 <code>tabpanel</code> 事件</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">listeners:&#123;</span><br><span class="line">  	tabchange :<span class="function"><span class="keyword">function</span>(<span class="params">tabPanel,tab</span>)</span>&#123;</span><br><span class="line">  		</span><br><span class="line">  	&#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<h2 id="解析store返回自定义参数值"><a href="#解析store返回自定义参数值" class="headerlink" title="解析store返回自定义参数值"></a>解析<code>store</code>返回自定义参数值</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查询条件 封装</span></span><br><span class="line"><span class="keyword">var</span> getParams = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> &#123;</span><br><span class="line">			sheetIds : Ext.getCmp(<span class="string">'sheetId'</span>).getValue(),</span><br><span class="line">			station : Ext.getCmp(<span class="string">'station'</span>).getValue(),</span><br><span class="line">			maintain : Ext.getCmp(<span class="string">'maintainer'</span>).getValue(),</span><br><span class="line">			startTime : Ext.util.Format.date(Ext.getCmp(<span class="string">'startTime'</span>).getValue(),<span class="string">'Y-m-d'</span>),</span><br><span class="line">			status : state,<span class="comment">// Ext.getCmp('status').getValue(),</span></span><br><span class="line">			endTime : Ext.util.Format.date(Ext.getCmp(<span class="string">'endTime'</span>).getValue(),<span class="string">'Y-m-d'</span>),</span><br><span class="line">			worksheettype : Ext.getCmp(<span class="string">'worksheetType'</span>).getValue()</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="comment">// 条件查询</span></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">reportLoad</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">// 移除为空的查询条件</span></span><br><span class="line">		<span class="keyword">var</span> params = getParams();</span><br><span class="line">		<span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> params) &#123;</span><br><span class="line">			<span class="keyword">if</span> (params[key] == <span class="literal">null</span> || params[key] == <span class="string">""</span>) &#123;</span><br><span class="line">				<span class="keyword">delete</span> params[key];</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 添加自定义返回参数`no_coinfirm`</span></span><br><span class="line">		reportStore.setProxy(&#123;</span><br><span class="line">			type : <span class="string">'ajax'</span>,</span><br><span class="line">			url: <span class="string">'../centerSheet/getWorkSheet'</span>,</span><br><span class="line">			extraParams : params,</span><br><span class="line">			reader:&#123;</span><br><span class="line">				type:<span class="string">'json'</span>,</span><br><span class="line">				root:<span class="string">'records'</span>,</span><br><span class="line">				totalProperty:<span class="string">'totalCount'</span>,</span><br><span class="line">				no_coinfirm:<span class="string">'no_confirm'</span>,</span><br><span class="line">				no_repair:<span class="string">'no_repair'</span>,</span><br><span class="line">				no_statements:<span class="string">'no_statements'</span>,</span><br><span class="line">				statements:<span class="string">'statements'</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		<span class="comment">// 加载对应的 tabpanel 的数据、更新titel</span></span><br><span class="line">		reportStore.load(&#123;</span><br><span class="line">			scope: <span class="keyword">this</span>,</span><br><span class="line">			callback: <span class="function"><span class="keyword">function</span>(<span class="params">records, operation, success</span>) </span>&#123;</span><br><span class="line">				<span class="keyword">var</span> reader = reportStore.getProxy().getReader(); </span><br><span class="line">				Ext.getCmp(<span class="string">'no_confirm'</span>).setTitle(tabpanel1 + <span class="string">'&amp;nbsp;&amp;nbsp;'</span>+reader.jsonData.no_confirm);</span><br><span class="line">				Ext.getCmp(<span class="string">'no_repair'</span>).setTitle(tabpanel2 + <span class="string">'&amp;nbsp;&amp;nbsp;'</span>+reader.jsonData.no_repair);</span><br><span class="line">				Ext.getCmp(<span class="string">'no_statements'</span>).setTitle(tabpanel3 + <span class="string">'&amp;nbsp;&amp;nbsp;'</span>+reader.jsonData.no_statements);</span><br><span class="line">				Ext.getCmp(<span class="string">'statements'</span>).setTitle(tabpanel3 + <span class="string">'&amp;nbsp;&amp;nbsp;'</span>+reader.jsonData.statements);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h2 id="fieldset-可折叠控制"><a href="#fieldset-可折叠控制" class="headerlink" title="fieldset 可折叠控制"></a><code>fieldset</code> 可折叠控制</h2><pre><code>`collapsible : true`
</code></pre><h2 id="监听表格数据双击事件"><a href="#监听表格数据双击事件" class="headerlink" title="监听表格数据双击事件"></a>监听表格数据双击事件</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">listeners: &#123;</span><br><span class="line">    <span class="comment">// 监听双击事件</span></span><br><span class="line">    itemdblclick: <span class="function"><span class="keyword">function</span> (<span class="params">dataView, record, item, index, e</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 当前数据行数据</span></span><br><span class="line">      <span class="keyword">var</span> data = record.data;</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="comment">//传参</span></span><br><span class="line">      <span class="keyword">var</span> user_id = data.id;</span><br><span class="line">      <span class="keyword">var</span> process_time = Ext.util.Format.date(data.process_time, <span class="string">'YmdHi'</span>);</span><br><span class="line"></span><br><span class="line">      queryQosLog(user_id, process_time);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="Ext-window遮罩效果实现"><a href="#Ext-window遮罩效果实现" class="headerlink" title="Ext window遮罩效果实现"></a><code>Ext window</code>遮罩效果实现</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">在Ext.window.Window 中添加属性</span><br><span class="line">	modal: <span class="literal">true</span>,</span><br></pre></td></tr></table></figure>
<h2 id="设置隔行变色、同时指定行背景色"><a href="#设置隔行变色、同时指定行背景色" class="headerlink" title="设置隔行变色、同时指定行背景色"></a>设置隔行变色、同时指定行背景色</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line"><span class="comment">// 隔行背景色</span></span><br><span class="line">.x-grid-record-ou td &#123;</span><br><span class="line">	background-color: #cacaca;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置背景色 */</span></span><br><span class="line">.x-grid-record-fenghuo td&#123;</span><br><span class="line">	background-color: #ff3333;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* js */</span></span><br><span class="line">forceFit: <span class="literal">true</span>,<span class="comment">//列宽自适应</span></span><br><span class="line">viewConfig:&#123;</span><br><span class="line">	stripeRows:<span class="literal">false</span>,<span class="comment">//开启隔行变色,默认false但是遇到的是没用。所以设置了false值</span></span><br><span class="line">	getRowClass: <span class="function"><span class="keyword">function</span> (<span class="params">record, rowIndex, rowParams, stroe</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (record.get(<span class="string">'type'</span>).indexOf(<span class="string">'错误'</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">'x-grid-record-fenghuo td'</span>;<span class="comment">// 指定的背景色class</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (rowIndex % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">'x-grid-record-ou'</span>; <span class="comment">// 隔行变色的class</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="表单重置"><a href="#表单重置" class="headerlink" title="表单重置"></a>表单重置</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">// 需要获取的 region_form 的 xtype: 'form';formpanel 设置则无效</span><br><span class="line">Ext.getCmp('region_form').getForm().reset();</span><br></pre></td></tr></table></figure>
<h2 id="Ext表格数据翻页传递参数"><a href="#Ext表格数据翻页传递参数" class="headerlink" title="Ext表格数据翻页传递参数"></a>Ext表格数据翻页传递参数</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 表单查询参数封装</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">form_parameter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="comment">// 时间粒度</span></span><br><span class="line">	<span class="keyword">var</span> time_granularity = Ext.getCmp(<span class="string">'time_granularity'</span>).getChecked()[<span class="number">0</span>].inputValue;</span><br><span class="line">	<span class="comment">// 开始时间</span></span><br><span class="line">	<span class="keyword">var</span> start_time = Ext.getCmp(<span class="string">'start_time'</span>).getValue();</span><br><span class="line">	start_time = dateFormat(start_time);</span><br><span class="line">	<span class="comment">// 结束时间</span></span><br><span class="line">	<span class="keyword">var</span> end_time = Ext.getCmp(<span class="string">'end_time'</span>).getValue();</span><br><span class="line">	end_time = dateFormat(end_time);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> &#123;</span><br><span class="line">		time_granularity: time_granularity,</span><br><span class="line">		start_time: start_time,</span><br><span class="line">		end_time: end_time</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 加载分页数据时的参数传递</span></span><br><span class="line">store.on(<span class="string">"beforeload"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> params = form_parameter();</span><br><span class="line">	</span><br><span class="line">	Ext.apply(speechQualityStore.proxy.extraParams, params);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Web Plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>Ext3.4.x上传文件</title>
    <url>/Blog/Ext/Ext3.4.x%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>使用<code>Ext 3.4.x</code>版本实现上传<code>.txt</code>文件(文件内为id值),删除<code>table_a</code>对应记录<br><a id="more"></a></p>
<p>要求: </p>
<p>  上传一个txt文件,根据文件内的id删除对应的记录。</p>
<p>需求分析: </p>
<ol>
<li>使用 <code>Ext 3.4.0</code> 上传文件;</li>
<li><code>Java</code> 解析前端上传的文件,得到待删除 <code>List&lt;Long&gt;</code>;</li>
<li>使用 <code>jdbctemplate</code> 批量删除接口,完成删除操作。</li>
</ol>
<h1 id="js-页面-表单代码"><a href="#js-页面-表单代码" class="headerlink" title="js 页面(表单代码)"></a>js 页面(表单代码)</h1><h2 id="页面出现连个按钮"><a href="#页面出现连个按钮" class="headerlink" title="页面出现连个按钮"></a>页面出现连个按钮</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;style type=text/css&gt;</span><br><span class="line"><span class="selector-class">.upload-icon</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">'../images/image_add.png'</span>) no-repeat <span class="number">0</span> <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: relative;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> <span class="selector-class">.x-form-file</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-moz-opacity</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity : 0);</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> <span class="selector-class">.x-form-file-btn</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> <span class="selector-class">.x-form-file-text</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#777</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<h2 id="文件类型不支持-需要引用fileuploadfield组件"><a href="#文件类型不支持-需要引用fileuploadfield组件" class="headerlink" title="文件类型不支持,需要引用fileuploadfield组件"></a>文件类型不支持,需要引用<code>fileuploadfield</code>组件</h2><blockquote>
<p><code>css</code> 文件内容</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.upload-icon</span> &#123;</span><br><span class="line">  // 文件路径需要根据自己需要调整</span><br><span class="line">  // 这张为 ext 图片上传png</span><br><span class="line">   <span class="comment">/* https://docs.sencha.com/extjs/4.2.4/extjs-build/examples/shared/icons/fam/image_add.png */</span></span><br><span class="line">	background: url('../images/image_add.png') no-repeat 0 0 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: relative;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> <span class="selector-class">.x-form-file</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-moz-opacity</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity : 0);</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> <span class="selector-class">.x-form-file-btn</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.x-form-file-wrap</span> <span class="selector-class">.x-form-file-text</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#777</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>js</code> 文件内容 </p>
</blockquote>
<p>  以下 <code>javascript</code> 代码的样式可以自己修改,主要内容是 <code>xtype : &#39;fileuploadfield&#39;、xtype:&#39;button&#39;</code>。同时,提交方式也可以自行替换(Ajax等)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Ext.onReady(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> fileForm = <span class="keyword">new</span> Ext.FormPanel(&#123;</span><br><span class="line">    title: <span class="string">'删除H码文件'</span>,</span><br><span class="line">    frame: <span class="literal">true</span>,</span><br><span class="line">    fileUpload: <span class="literal">true</span>, <span class="comment">// required parameter</span></span><br><span class="line">    collapsible: <span class="literal">true</span>,</span><br><span class="line">    region: <span class="string">'north'</span>,</span><br><span class="line">    labelWidth: <span class="number">40</span>,</span><br><span class="line">    height: <span class="number">100</span>,</span><br><span class="line">    width: <span class="string">'100%'</span>,</span><br><span class="line">    margins: <span class="string">'0 120'</span>,</span><br><span class="line">    items: [&#123;</span><br><span class="line">        layout: <span class="string">'form'</span>,</span><br><span class="line">        border: <span class="literal">false</span>,</span><br><span class="line">        items: [&#123;</span><br><span class="line">            items: &#123;</span><br><span class="line">                labelWidth: <span class="number">100</span>,</span><br><span class="line">                xtype: <span class="string">'fieldset'</span>,</span><br><span class="line">                labelAlign: <span class="string">'right'</span>,</span><br><span class="line">                autoHeight: <span class="literal">true</span>,</span><br><span class="line">                items: [&#123;</span><br><span class="line">                    xtype: <span class="string">'panel'</span>,</span><br><span class="line">                    layout: <span class="string">'column'</span>,</span><br><span class="line">                    border: <span class="literal">false</span>,</span><br><span class="line">                    items: [&#123;</span><br><span class="line">                        layout: <span class="string">'column'</span>,</span><br><span class="line">                        border: <span class="literal">false</span>,</span><br><span class="line">                        items: [&#123;</span><br><span class="line">                            layout: <span class="string">'form'</span>,</span><br><span class="line">                            items: [&#123;</span><br><span class="line">                                xtype: <span class="string">'fileuploadfield'</span>, <span class="comment">// 需要引用 fileuploadfield.js文件</span></span><br><span class="line">                                id: <span class="string">'form-file'</span>,</span><br><span class="line">                                width: <span class="number">200</span>,</span><br><span class="line">                                emptyText: <span class="string">'请选择一个文件'</span>,</span><br><span class="line">                                fieldLabel: <span class="string">'删除H码文件'</span>,</span><br><span class="line">                                buttonText: <span class="string">''</span>,</span><br><span class="line">                                name: <span class="string">'hcodeFile'</span>,</span><br><span class="line">                                buttonCfg: &#123;</span><br><span class="line">                                    iconCls: <span class="string">'upload-icon'</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;]</span><br><span class="line">                        &#125;, &#123;</span><br><span class="line">                            layout: <span class="string">'form'</span>,</span><br><span class="line">                            items: [&#123;</span><br><span class="line">                                layout: <span class="string">'form'</span>,</span><br><span class="line">                                xtype: <span class="string">'button'</span>,</span><br><span class="line">                                text: <span class="string">'上传'</span>,</span><br><span class="line">                                width: <span class="number">50</span>,</span><br><span class="line">                                style:&#123;</span><br><span class="line">                                    marginLeft: <span class="string">'20px'</span></span><br><span class="line">                                &#125;,</span><br><span class="line">                                handler: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                    <span class="keyword">if</span> (fileForm.getForm().isValid()) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> filename = Ext.getCmp(<span class="string">'form-file'</span>).getValue();</span><br><span class="line">                                        <span class="keyword">if</span> (filename.indexOf(<span class="string">'txt'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                            msg(<span class="string">'错误'</span>, <span class="string">'上传的文件不是txt文件类型,请重新选择!'</span>);</span><br><span class="line">                                            <span class="keyword">return</span>;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        fileForm.getForm().submit(&#123;</span><br><span class="line">                                            url: <span class="string">'../delete'</span>,<span class="comment">// 请求 API 地址</span></span><br><span class="line">                                            waitMsg: <span class="string">'正在上传...'</span>,</span><br><span class="line">                                            waitTitle: <span class="string">'请等待'</span>,</span><br><span class="line">                                            success: <span class="function"><span class="keyword">function</span> (<span class="params">form, action</span>) </span>&#123;</span><br><span class="line">                                                msg(<span class="string">'提示'</span>, action.result.msg);</span><br><span class="line">                                                fileForm.getForm().reset();</span><br><span class="line">                                                <span class="comment">// 刷新表格数据</span></span><br><span class="line">                                                <span class="comment">// gridReload();</span></span><br><span class="line">                                            &#125;,</span><br><span class="line">                                            failure: <span class="function"><span class="keyword">function</span> (<span class="params">form, action</span>) </span>&#123;</span><br><span class="line">                                                msg(<span class="string">'错误'</span>, action.result.msg);</span><br><span class="line">                                                fileForm.getForm().reset();</span><br><span class="line">                                                <span class="comment">// 刷新表格数据</span></span><br><span class="line">                                                <span class="comment">// gridReload();</span></span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;]</span><br><span class="line">                        &#125;]</span><br><span class="line">                    &#125;]</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提示框内容</span></span><br><span class="line">  <span class="keyword">var</span> msg = <span class="function"><span class="keyword">function</span> (<span class="params">title, msg</span>) </span>&#123;</span><br><span class="line">        Ext.Msg.show(&#123;</span><br><span class="line">            title: title,</span><br><span class="line">            msg: msg,</span><br><span class="line">            minWidth: <span class="number">200</span>,</span><br><span class="line">            modal: <span class="literal">true</span>,</span><br><span class="line">            icon: Ext.Msg.INFO,</span><br><span class="line">            buttons: Ext.Msg.OK</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="文件上传-Java-后端代码"><a href="#文件上传-Java-后端代码" class="headerlink" title="文件上传 Java 后端代码"></a>文件上传 <code>Java</code> 后端代码</h2><h3 id="Controller-——-获取传递的参数-获取文件"><a href="#Controller-——-获取传递的参数-获取文件" class="headerlink" title="Controller —— 获取传递的参数,获取文件"></a>Controller —— 获取传递的参数,获取文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"delet"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteHcode</span><span class="params">(@RequestParam(<span class="string">"hcodeFile"</span>)</span> MultipartFile hcodeFile, HttpServletResponse response)</span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 设置 response.setCharsetEncoding("utf-8") 时在当前代码中依然无效,所以改为设置 ContentType</span></span><br><span class="line">  response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Service 中的方法名</span></span><br><span class="line">  Map&lt;String, Object&gt; result = <span class="keyword">this</span>.hcodeService.removeHcodeList(hcodeFile);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 返回 JSON 时,前端显示异常.需要改为 PrintWiter</span></span><br><span class="line">  PrintWriter out = response.getWriter();</span><br><span class="line">  out.write(<span class="string">"&#123;success:"</span> + result.get(<span class="string">"success"</span>) + <span class="string">",msg:'"</span> + result.get(<span class="string">"msg"</span>) + <span class="string">"'&#125;"</span>);</span><br><span class="line"></span><br><span class="line">  out.flush();</span><br><span class="line">  out.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Service-——-将-file-转为-list"><a href="#Service-——-将-file-转为-list" class="headerlink" title="Service —— 将 file 转为 list"></a>Service —— 将 <code>file</code> 转为 <code>list</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">removeHcodeList</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">  Map&lt;String, Object&gt; result = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">  result.put(<span class="string">"success"</span>, <span class="keyword">false</span>);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取上传 H码文件中的 hcode list</span></span><br><span class="line">    List&lt;Long&gt; hcodeList = <span class="keyword">this</span>.readHcodeFile(file);</span><br><span class="line"></span><br><span class="line">    hcodeDao.removeHcodeList(hcodeList);</span><br><span class="line"></span><br><span class="line">    result.put(<span class="string">"success"</span>, <span class="keyword">true</span>);</span><br><span class="line">    result.put(<span class="string">"msg"</span>, <span class="string">"删除成功"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (IllegalArgumentException fileException) &#123;</span><br><span class="line">    result.put(<span class="string">"msg"</span>, <span class="string">"删除失败,文件内容错误,请检查文件的准确性..."</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    result.put(<span class="string">"msg"</span>, <span class="string">"删除失败,系统IO异常,请稍后重试"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    result.put(<span class="string">"msg"</span>, <span class="string">"删除失败,系统异常,请稍后重试"</span>);</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@Title</span>: readHcodeFile</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@Description</span>: 读取文件的方式可以根据文件内容进行调整</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> file(*.txt 文件)</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  * Set&lt;Long&gt;</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> IOException </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> List&lt;Long&gt; <span class="title">readHcodeFile</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  InputStreamReader reader = <span class="keyword">null</span>;</span><br><span class="line">  BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    reader = <span class="keyword">new</span> InputStreamReader(file.getInputStream(), <span class="string">"UTF-8"</span>);</span><br><span class="line">    br = <span class="keyword">new</span> BufferedReader(reader);</span><br><span class="line"></span><br><span class="line">    Set&lt;Long&gt; hcodeList = <span class="keyword">new</span> HashSet&lt;Long&gt;();</span><br><span class="line">    String line = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span> &amp;&amp; line.length() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      line = line.trim();</span><br><span class="line">				<span class="keyword">if</span> (line == <span class="keyword">null</span>) &#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				hcodeList.add(Long.parseLong(line));</span><br><span class="line">        hcodeList.add(Long.parseLong(line));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;Long&gt;(hcodeList);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"文件内容错误"</span>);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    reader.close();</span><br><span class="line">    br.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注：</strong><br>  当前方法读取的文件如下图所示<br>  <img src="../../../images/ext-upload-file.png" alt="上传带解析的文件"></p>
<h3 id="Repository-批量删除的方法-——-jdbctemplae-方式"><a href="#Repository-批量删除的方法-——-jdbctemplae-方式" class="headerlink" title="Repository 批量删除的方法 —— jdbctemplae 方式"></a>Repository 批量删除的方法 —— <code>jdbctemplae</code> 方式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BatchPreparedStatementSetter;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeHcodeList</span><span class="params">(<span class="keyword">final</span> List&lt;Long&gt; hcodeList)</span> </span>&#123;</span><br><span class="line">  String sql = <span class="string">"delete from table_a t where t.hcode = ?"</span>;</span><br><span class="line">  <span class="comment">// batchUpdate 为批量操作方法</span></span><br><span class="line">  <span class="keyword">this</span>.getJdbcTemplate().batchUpdate(sql, <span class="keyword">new</span> BatchPreparedStatementSetter() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValues</span><span class="params">(PreparedStatement preparedstatement, <span class="keyword">int</span> i)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">      Long hcode = hcodeList.get(i);</span><br><span class="line">      preparedstatement.setLong(<span class="number">1</span>, hcode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBatchSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hcodeList.size();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="常见异常"><a href="#常见异常" class="headerlink" title="常见异常"></a>常见异常</h2><blockquote>
<p>不支持文件上传</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">org.springframework.web.bind.MissingServletRequestParameterException: Required MultipartFile parameter <span class="string">'hcodeFile'</span> is not present</span><br></pre></td></tr></table></figure>
<ul>
<li>方法: 在 <code>applicationContext.xml</code> 文件中实例化 <code>bean</code>,添加如下内容</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 支持文件上传 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
        <category>Ext</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Ext 3.4.x</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript解析XML字符串为JSON</title>
    <url>/Blog/HTML/JavaScript%E8%A7%A3%E6%9E%90XML%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%BAJSON/</url>
    <content><![CDATA[JavaScript解析XML字符串为JSON
<a id="more"></a>
<h1 id="JavaScript使用ObjTree-js解析xml文件为JSON对象"><a href="#JavaScript使用ObjTree-js解析xml文件为JSON对象" class="headerlink" title="JavaScript使用ObjTree.js解析xml文件为JSON对象"></a><code>JavaScript</code>使用<code>ObjTree.js</code>解析<code>xml</code>文件为<code>JSON</code>对象</h1><ul>
<li><p>插件下载地址<a href="http://www.kawa.net/works/js/xml/objtree-e.html#download" target="_blank">http://www.kawa.net/works/js/xml/objtree-e.html#download</a></p>
</li>
<li><p>xml文件内容</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Organization</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Department</span> <span class="attr">coding</span>=<span class="string">"001"</span> <span class="attr">name</span>=<span class="string">"根节点"</span> <span class="attr">modifytime</span>=<span class="string">"1436940546"</span> <span class="attr">MaxDepID</span>=<span class="string">"0"</span> <span class="attr">sn</span>=<span class="string">""</span> <span class="attr">memo</span>=<span class="string">""</span> <span class="attr">deptype</span>=<span class="string">"0"</span> <span class="attr">depsort</span>=<span class="string">"0"</span> <span class="attr">isPlatform</span>=<span class="string">"0"</span> <span class="attr">chargebooth</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000019001"</span> <span class="attr">type</span>=<span class="string">"65537"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"2"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"1"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000018001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"1"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"2"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000017001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"1"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"3"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000016001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"1"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"4"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000015001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"2"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"5"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Department</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Department</span> <span class="attr">coding</span>=<span class="string">"001"</span> <span class="attr">name</span>=<span class="string">"根节点"</span> <span class="attr">modifytime</span>=<span class="string">"1436940546"</span> <span class="attr">MaxDepID</span>=<span class="string">"0"</span> <span class="attr">sn</span>=<span class="string">""</span> <span class="attr">memo</span>=<span class="string">""</span> <span class="attr">deptype</span>=<span class="string">"0"</span> <span class="attr">depsort</span>=<span class="string">"0"</span> <span class="attr">isPlatform</span>=<span class="string">"0"</span> <span class="attr">chargebooth</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000019001"</span> <span class="attr">type</span>=<span class="string">"65537"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"2"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"1"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000018001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"1"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"2"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000017001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"1"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"3"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000016001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"1"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"4"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Device</span> <span class="attr">id</span>=<span class="string">"1000015001"</span> <span class="attr">type</span>=<span class="string">"65548"</span> <span class="attr">name</span>=<span class="string">"海康106"</span> <span class="attr">manufacturer</span>=<span class="string">"2"</span> <span class="attr">ip</span>=<span class="string">"127.0.0.2"</span> <span class="attr">prot</span>=<span class="string">"61001"</span> <span class="attr">unitnum</span>=<span class="string">"5"</span> <span class="attr">status</span>=<span class="string">"2"</span> <span class="attr">rights</span>=<span class="string">"110000111001111"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">UnitNodes</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">channelnum</span>=<span class="string">"48"</span> <span class="attr">streamType</span>=<span class="string">"81"</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">subType</span>=<span class="string">"0"</span> <span class="attr">zeroChnEncode</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$0"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span>&gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$1"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Channel</span> <span class="attr">id</span>=<span class="string">"10000978001@001$1$0$2"</span> <span class="attr">name</span>=<span class="string">"GB49_1-"</span> <span class="attr">desc</span>=<span class="string">""</span> <span class="attr">channelType</span>=<span class="string">"1"</span> <span class="attr">channelSN</span>=<span class="string">"10005"</span> &gt;</span><span class="tag">&lt;/<span class="name">Channel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">UnitNodes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Device</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Department</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Organization</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>压缩<code>xml</code>文件的线上地址<a href="http://www.bejson.com/otherformat/xml/" target="_blank">http://www.bejson.com/otherformat/xml/</a></li>
</ul>
<ul>
<li>解析方法</li>
</ul>
<blockquote>
<p>组装自定义的<code>JSON</code>格式数据</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseXMLData</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.info(<span class="string">'----------------------------解析组织树数据----------------------------'</span>);</span><br><span class="line">	<span class="keyword">var</span> rootTree = [];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; root.length; i++) &#123;</span><br><span class="line">		<span class="comment">// console.info(root[i]);</span></span><br><span class="line">		<span class="keyword">let</span> id = root[i][<span class="string">'-coding'</span>]; <span class="comment">// 组织树编号</span></span><br><span class="line">		<span class="keyword">let</span> title = root[i][<span class="string">'-name'</span>]; <span class="comment">// 组织树名称(对应为根节点名称)</span></span><br><span class="line">		<span class="keyword">let</span> device = root[i].Device; <span class="comment">//设备树</span></span><br><span class="line">		<span class="keyword">let</span> children = [];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; device.length; i++) &#123;</span><br><span class="line">			<span class="keyword">let</span> device_id = device[i][<span class="string">'-id'</span>];</span><br><span class="line">			<span class="keyword">let</span> device_ip = device[i][<span class="string">'-ip'</span>];</span><br><span class="line">			<span class="keyword">let</span> device_manufacturer = device[i][<span class="string">'-manufacturer'</span>];</span><br><span class="line">			<span class="keyword">let</span> device_name = device[i][<span class="string">'-name'</span>];</span><br><span class="line">			<span class="keyword">let</span> device_port = device[i][<span class="string">'-port'</span>];</span><br><span class="line">			<span class="keyword">let</span> device_type = device[i][<span class="string">'-type'</span>];</span><br><span class="line"></span><br><span class="line">			<span class="keyword">let</span> device_channels = device[i].UnitNodes.Channel;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">let</span> channels = [];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; device_channels.length; i++) &#123;</span><br><span class="line">				<span class="comment">// console.info(device_channels[i]);</span></span><br><span class="line">				<span class="keyword">let</span> channel_id = device_channels[i][<span class="string">'-id'</span>];</span><br><span class="line">				<span class="keyword">let</span> channel_name = device_channels[i][<span class="string">'-name'</span>];</span><br><span class="line">				<span class="keyword">let</span> channel_sn = device_channels[i][<span class="string">'-channelSN'</span>];</span><br><span class="line">				<span class="keyword">let</span> channel_type = device_channels[i][<span class="string">'-channelType'</span>];</span><br><span class="line"></span><br><span class="line">				channels.push(&#123;</span><br><span class="line">					<span class="string">"id"</span>: channel_id,</span><br><span class="line">					<span class="string">"title"</span>: channel_name,</span><br><span class="line">					<span class="string">"channelSN"</span>: channel_sn,</span><br><span class="line">					<span class="string">"channelType"</span>: channel_type,</span><br><span class="line">					<span class="string">"isLeaf"</span>: <span class="literal">true</span></span><br><span class="line">				&#125;);</span><br><span class="line">			&#125;</span><br><span class="line">			children.push(&#123;</span><br><span class="line">				<span class="string">"id"</span>: device_id,</span><br><span class="line">				<span class="string">"title"</span>: device_name,</span><br><span class="line">				<span class="string">"children"</span>: channels,</span><br><span class="line">				<span class="string">"ip"</span>: device_ip,</span><br><span class="line">				<span class="string">"port"</span>: device_port,</span><br><span class="line">				<span class="string">"type"</span>: device_type,</span><br><span class="line">				<span class="string">"manufacturer"</span>: device_manufacturer</span><br><span class="line">			&#125;)</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		rootTree.push(&#123;</span><br><span class="line">			<span class="string">"id"</span>: id,</span><br><span class="line">			<span class="string">"title"</span>: title,</span><br><span class="line">			<span class="string">"children"</span>: children</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//console.info(rootTree);</span></span><br><span class="line">	<span class="keyword">return</span> rootTree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>XML</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>去除 List&lt;Object&gt; 中的重复数据</title>
    <url>/blog/Java/Java%E5%AF%B9List%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[去除 List<object> 中的重复数据
<a id="more"></a>
<h1 id="从List-lt-Object-gt-中取相同列，转为另一个list"><a href="#从List-lt-Object-gt-中取相同列，转为另一个list" class="headerlink" title="从List&lt;Object&gt; 中取相同列，转为另一个list"></a>从<code>List&lt;Object&gt;</code> 中取相同列，转为另一个<code>list</code></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;UserUrl&gt; <span class="title">initData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	List&lt;UserUrl&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	UserUrl url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153500"</span>, <span class="string">"1"</span>, <span class="number">120</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153500"</span>, <span class="string">"2"</span>, <span class="number">120</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153500"</span>, <span class="string">"3"</span>, <span class="number">156</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153500"</span>, <span class="string">"4"</span>, <span class="number">120</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153500"</span>, <span class="string">"5"</span>, <span class="number">156</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153500"</span>, <span class="string">"6"</span>, <span class="number">120</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line"></span><br><span class="line">	url = <span class="keyword">new</span> UserUrl();</span><br><span class="line"></span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153000"</span>, <span class="string">"1"</span>, <span class="number">120</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153000"</span>, <span class="string">"2"</span>, <span class="number">156</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153000"</span>, <span class="string">"3"</span>, <span class="number">120</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153000"</span>, <span class="string">"4"</span>, <span class="number">156</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153000"</span>, <span class="string">"5"</span>, <span class="number">156</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line">	url = <span class="keyword">new</span> UserUrl(<span class="string">"20181107153000"</span>, <span class="string">"6"</span>, <span class="number">120</span>);</span><br><span class="line">	list.add(url);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 校验时间格式</span></span><br><span class="line">	String reg = <span class="string">"(\\d&#123;4&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)"</span>;</span><br><span class="line">	List&lt;UserUrl&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	<span class="keyword">for</span> (UserUrl userUrl : list) &#123;</span><br><span class="line">		String time = userUrl.getProcess_time();</span><br><span class="line">		<span class="comment">// 更改时间格式</span></span><br><span class="line">		time = time.replaceAll(reg, <span class="string">"$2-$3 $4:$5"</span>);</span><br><span class="line">		userUrl.setProcess_time(time);</span><br><span class="line">		result.add(userUrl);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	System.err.println(result);</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: queryActiveTrend</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 活跃用户趋势</span></span><br><span class="line"><span class="comment"> *  	应用Map中键唯一的特性，将相同统计时间节点的数据合并为一个object</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Object</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;ActiveTrendVO&gt; <span class="title">queryActiveTrend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 1.得到查询结果:process_time,type,user_num</span></span><br><span class="line">	List&lt;UserUrl&gt; list = initData();<span class="comment">// userCountDao.queryActiveUserTrend();</span></span><br><span class="line">	System.out.println(list.toString());</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 2.将统计时间相同的数据封装为 ActiveTrendVO</span></span><br><span class="line">	List&lt;ActiveTrendVO&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	/// 嵌套的 list</span></span><br><span class="line"><span class="comment">	List&lt;ActiveUserVO&gt; nestvo = new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	/// 第一条数据结果缺失,采用第二种方案</span></span><br><span class="line"><span class="comment">	for (UserUrl userUrl : list) &#123;</span></span><br><span class="line"><span class="comment">		if (map.containsKey(userUrl.getProcess_time())) &#123;</span></span><br><span class="line"><span class="comment">			ActiveUserVO user = new ActiveUserVO(userUrl.getType(), userUrl.getUser_num());</span></span><br><span class="line"><span class="comment">			nestvo.add(user);</span></span><br><span class="line"><span class="comment">		&#125; else &#123;</span></span><br><span class="line"><span class="comment">			ActiveTrendVO trend = new ActiveTrendVO(userUrl.getProcess_time(), nestvo);</span></span><br><span class="line"><span class="comment">			result.add(trend);</span></span><br><span class="line"><span class="comment">			nestvo.clear();</span></span><br><span class="line"><span class="comment">		&#125;</span></span><br><span class="line"><span class="comment">		map.put(userUrl.getProcess_time(), userUrl.getProcess_time());</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	TreeMap&lt;String, List&lt;UserUrl&gt;&gt; tm = <span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">		UserUrl userUrl = list.get(i);</span><br><span class="line">		String time = userUrl.getProcess_time();</span><br><span class="line">		<span class="keyword">if</span> (tm.containsKey(time)) &#123;</span><br><span class="line">			ArrayList&lt;UserUrl&gt; tempList = (ArrayList&lt;UserUrl&gt;) tm.get(time);</span><br><span class="line">			tempList.add(userUrl);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			ArrayList&lt;UserUrl&gt; temlist = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			temlist.add(userUrl);</span><br><span class="line">			tm.put(time, temlist);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (String key : tm.keySet()) &#123;</span><br><span class="line">		List&lt;UserUrl&gt; userList = tm.get(key);</span><br><span class="line">		ArrayList&lt;ActiveUserVO&gt; nestList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		<span class="keyword">for</span> (UserUrl userUrl : userList) &#123;</span><br><span class="line">			ActiveUserVO active = <span class="keyword">new</span> ActiveUserVO(userUrl.getType(), userUrl.getUser_num());</span><br><span class="line">			nestList.add(active);</span><br><span class="line">		&#125;</span><br><span class="line">		ActiveTrendVO trend = <span class="keyword">new</span> ActiveTrendVO(key, nestList);</span><br><span class="line">		result.add(trend);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	List&lt;UserUrl&gt; list = initData();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2.将统计时间相同的数据封装为 ActiveTrendVO</span></span><br><span class="line">	List&lt;ActiveTrendVO&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	<span class="comment">/// 嵌套的 list</span></span><br><span class="line">	TreeMap&lt;String, List&lt;UserUrl&gt;&gt; tm = <span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">		UserUrl userUrl = list.get(i);</span><br><span class="line">		String time = userUrl.getProcess_time();</span><br><span class="line">		<span class="keyword">if</span> (tm.containsKey(time)) &#123;</span><br><span class="line">			ArrayList&lt;UserUrl&gt; tempList = (ArrayList&lt;UserUrl&gt;) tm.get(time);</span><br><span class="line">			tempList.add(userUrl);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			ArrayList&lt;UserUrl&gt; temlist = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			temlist.add(userUrl);</span><br><span class="line">			tm.put(time, temlist);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (String key : tm.keySet()) &#123;</span><br><span class="line">		List&lt;UserUrl&gt; userList = tm.get(key);</span><br><span class="line">		ArrayList&lt;ActiveUserVO&gt; nestList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		<span class="keyword">for</span> (UserUrl userUrl : userList) &#123;</span><br><span class="line">			ActiveUserVO active = <span class="keyword">new</span> ActiveUserVO(userUrl.getType(), userUrl.getUser_num());</span><br><span class="line">			nestList.add(active);</span><br><span class="line">		&#125;</span><br><span class="line">		ActiveTrendVO trend = <span class="keyword">new</span> ActiveTrendVO(key, nestList);</span><br><span class="line">		result.add(trend);</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(JSON.toJSONString(result));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;UserAccountStatus&gt; <span class="title">initData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	List&lt;UserAccountStatus&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	UserAccountStatus userAccountStatus = <span class="keyword">new</span> UserAccountStatus(<span class="number">4822</span>, <span class="string">"1"</span>, <span class="string">"四月"</span>);</span><br><span class="line">	list.add(userAccountStatus);</span><br><span class="line">	userAccountStatus = <span class="keyword">new</span> UserAccountStatus(<span class="number">352</span>, <span class="string">"2"</span>, <span class="string">"四月"</span>);</span><br><span class="line">	list.add(userAccountStatus);</span><br><span class="line">	UserAccountStatus userAccountStatus1 = <span class="keyword">new</span> UserAccountStatus(<span class="number">44</span>, <span class="string">"1"</span>, <span class="string">"五月"</span>);</span><br><span class="line">	list.add(userAccountStatus1);</span><br><span class="line">	userAccountStatus1 = <span class="keyword">new</span> UserAccountStatus(<span class="number">0</span>, <span class="string">"2"</span>, <span class="string">"五月"</span>);</span><br><span class="line">	list.add(userAccountStatus1);</span><br><span class="line">	UserAccountStatus userAccountStatus2 = <span class="keyword">new</span> UserAccountStatus(<span class="number">406</span>, <span class="string">"1"</span>, <span class="string">"六月"</span>);</span><br><span class="line">	list.add(userAccountStatus2);</span><br><span class="line">	userAccountStatus2 = <span class="keyword">new</span> UserAccountStatus(<span class="number">27</span>, <span class="string">"2"</span>, <span class="string">"六月"</span>);</span><br><span class="line">	list.add(userAccountStatus2);</span><br><span class="line">	UserAccountStatus userAccountStatus3 = <span class="keyword">new</span> UserAccountStatus(<span class="number">15</span>, <span class="string">"1"</span>, <span class="string">"七月"</span>);</span><br><span class="line">	list.add(userAccountStatus3);</span><br><span class="line">	userAccountStatus3 = <span class="keyword">new</span> UserAccountStatus(<span class="number">0</span>, <span class="string">"2"</span>, <span class="string">"七月"</span>);</span><br><span class="line">	list.add(userAccountStatus3);</span><br><span class="line">	UserAccountStatus userAccountStatus4 = <span class="keyword">new</span> UserAccountStatus(<span class="number">0</span>, <span class="string">"1"</span>, <span class="string">"八月"</span>);</span><br><span class="line">	list.add(userAccountStatus4);</span><br><span class="line">	userAccountStatus4 = <span class="keyword">new</span> UserAccountStatus(<span class="number">0</span>, <span class="string">"2"</span>, <span class="string">"八月"</span>);</span><br><span class="line">	list.add(userAccountStatus4);</span><br><span class="line">	UserAccountStatus userAccountStatus5 = <span class="keyword">new</span> UserAccountStatus(<span class="number">1</span>, <span class="string">"1"</span>, <span class="string">"九月"</span>);</span><br><span class="line">	list.add(userAccountStatus5);</span><br><span class="line">	userAccountStatus5 = <span class="keyword">new</span> UserAccountStatus(<span class="number">0</span>, <span class="string">"2"</span>, <span class="string">"九月"</span>);</span><br><span class="line">	list.add(userAccountStatus5);</span><br><span class="line">	UserAccountStatus userAccountStatus6 = <span class="keyword">new</span> UserAccountStatus(<span class="number">511</span>, <span class="string">"1"</span>, <span class="string">"十月"</span>);</span><br><span class="line">	list.add(userAccountStatus6);</span><br><span class="line">	userAccountStatus6 = <span class="keyword">new</span> UserAccountStatus(<span class="number">6</span>, <span class="string">"2"</span>, <span class="string">"十月"</span>);</span><br><span class="line">	list.add(userAccountStatus6);</span><br><span class="line">	UserAccountStatus userAccountStatus7 = <span class="keyword">new</span> UserAccountStatus(<span class="number">15</span>, <span class="string">"1"</span>, <span class="string">"十一月"</span>);</span><br><span class="line">	list.add(userAccountStatus7);</span><br><span class="line">	userAccountStatus7 = <span class="keyword">new</span> UserAccountStatus(<span class="number">1</span>, <span class="string">"2"</span>, <span class="string">"十一月"</span>);</span><br><span class="line">	list.add(userAccountStatus7);</span><br><span class="line"></span><br><span class="line">	System.err.println(JSON.toJSONString(list));</span><br><span class="line">	<span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: queryOpenAccountGrowth</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 开户用户历史增长情况</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * Object</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ActiveTrendVO&gt; <span class="title">queryOpenAccountGrowth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 1.查询数据库得按 月、类型 分组的用户统计数</span></span><br><span class="line">	List&lt;UserAccountStatus&gt; userAccountStatusList = initData(）<span class="comment">//userCountDao.queryUserAccuontStatusGroupByMonth();</span></span><br><span class="line">	List&lt;ActiveTrendVO&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	LinkedHashMap&lt;String, List&lt;UserAccountStatus&gt;&gt; linkMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2.使用 process_time 作为键</span></span><br><span class="line">	<span class="keyword">for</span> (UserAccountStatus userAccountStatus : userAccountStatusList) &#123;</span><br><span class="line">		String time = userAccountStatus.getProcessTime();</span><br><span class="line">		<span class="keyword">if</span> (linkMap.containsKey(time)) &#123;</span><br><span class="line">			ArrayList&lt;UserAccountStatus&gt; tempList = (ArrayList&lt;UserAccountStatus&gt;) linkMap.get(time);</span><br><span class="line">			tempList.add(userAccountStatus);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			ArrayList&lt;UserAccountStatus&gt; temList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			temList.add(userAccountStatus);</span><br><span class="line">			linkMap.put(time, temList);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 3.遍历key,转换实体类</span></span><br><span class="line">	<span class="keyword">for</span> (String key : linkMap.keySet()) &#123;</span><br><span class="line">		System.err.println(<span class="string">"process_time:"</span> + key);</span><br><span class="line">		List&lt;UserAccountStatus&gt; list = linkMap.get(key);</span><br><span class="line">		ArrayList&lt;ActiveUserVO&gt; nestList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (UserAccountStatus userAccountStatus : list) &#123;</span><br><span class="line">			ActiveUserVO activeUserVO = <span class="keyword">new</span> ActiveUserVO(userAccountStatus.getType(),</span><br><span class="line">					userAccountStatus.getUserNum());</span><br><span class="line">			nestList.add(activeUserVO);</span><br><span class="line">		&#125;</span><br><span class="line">		ActiveTrendVO trend = <span class="keyword">new</span> ActiveTrendVO(key, nestList);</span><br><span class="line">		result.add(trend);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="对连续数据取最后一条作为结果显示"><a href="#对连续数据取最后一条作为结果显示" class="headerlink" title="对连续数据取最后一条作为结果显示"></a>对连续数据取最后一条作为结果显示</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> List&lt;UserUrl&gt; <span class="title">formartPlayTrackResult</span><span class="params">(List&lt;UserUrl&gt; list)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 数组下标</span></span><br><span class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (UserUrl userUrl : list) &#123;</span><br><span class="line">		userUrl.setIndex(index++);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	List&lt;UserUrl&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="keyword">new</span> HashSet&lt;&gt;(list));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// set去重后恢复排序</span></span><br><span class="line">	UserUrl[] temp = <span class="keyword">new</span> UserUrl[result.size()];</span><br><span class="line">	result.toArray(temp);</span><br><span class="line"></span><br><span class="line">	Arrays.sort(temp, <span class="keyword">new</span> Comparator&lt;UserUrl&gt;() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(UserUrl userUrl1, UserUrl userUrl2)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> userUrl1.getIndex() - userUrl2.getIndex();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	result = Arrays.asList(temp);</span><br><span class="line">	result = <span class="keyword">new</span> ArrayList&lt;&gt;(result);</span><br><span class="line">	SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm"</span>);</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; result.size(); i++) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; result.size();) &#123;</span><br><span class="line">				<span class="comment">// 第一条播放记录的播放时间,示例值： 2018-11-13 14:05</span></span><br><span class="line">				String firstTime = result.get(i).getProcess_time();</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 第二条播放记录播放时间</span></span><br><span class="line">				String secondTime = result.get(j).getProcess_time();</span><br><span class="line"></span><br><span class="line">				String firstName = result.get(i).getChannel_name();</span><br><span class="line">				String secondName = result.get(j).getChannel_name();</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 两条记录的时间间隔</span></span><br><span class="line">				<span class="keyword">long</span> difference = sdf.parse(secondTime).getTime() - sdf.parse(firstTime).getTime();</span><br><span class="line">				difference = difference / (<span class="number">1000</span> * <span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 时间间隔为5分钟</span></span><br><span class="line">				<span class="keyword">if</span> (difference == <span class="number">5</span> &amp;&amp; firstName.equals(secondName)) &#123;</span><br><span class="line">					result.remove(i);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					j++;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Java数组转List"><a href="#Java数组转List" class="headerlink" title="Java数组转List"></a>Java数组转List</h1><ul>
<li>可实现方式</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 常见方式,不能add</span></span><br><span class="line">List list = Arrays.asList(strArray);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组转List后,支持增删改查的方式</span></span><br><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;(Arrays.asList(strArray));</span><br><span class="line">list.add(<span class="string">"1"</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>通过集合工具类<code>Collections.addAll()</code>(推荐实现方式)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 关键代码</span></span><br><span class="line">ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;String&gt;(strArray.length);</span><br><span class="line">Collections.addAll(arrayList,strArray);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">array2List</span><span class="params">()</span></span>&#123;</span><br><span class="line">	String[] strArray = <span class="keyword">new</span> String[<span class="number">2</span>];</span><br><span class="line">	ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;String&gt;(strArray.length);</span><br><span class="line">	Collections.addAll(arrayList,strArray);</span><br><span class="line">	arrayList.add(<span class="string">"1"</span>);</span><br><span class="line">	System.out.println(arrayList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注:</strong><code>Collections.addAll()</code>源码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(Collection&lt;? <span class="keyword">super</span> T&gt; c, T... elements)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">boolean</span> result = <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">for</span> (T element : elements)</span><br><span class="line">				result |= c.add(element);<span class="comment">// result和c.add(element)按位或运算,然后赋值给result</span></span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p><code>Java8</code>可通过<code>stream</code>流将3中基本类型数组转为<code>List</code></p>
<p>  如果JDK版本在1.8以上，可以使用流<code>stream</code>来将下列3种数组快速转为<code>List</code>，分别是<code>int[]、long[]、double[]</code>，其他数据类型比如<code>short[]、byte[]、char[]</code>，在JDK1.8中暂不支持。由于这只是一种常用方法的封装，不再纳入一种崭新的数组转<code>List</code>方式，暂时算是<code>java</code>流送给我们的常用工具方法吧。</p>
</li>
</ul>
<blockquote>
<p>转换代码示例</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">List&lt;Integer&gt; intList= Arrays.stream(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, &#125;).boxed().collect(Collectors.toList());</span><br><span class="line">List&lt;Long&gt; longList= Arrays.stream(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;).boxed().collect(Collectors.toList());</span><br><span class="line">List&lt;Double&gt; doubleList= Arrays.stream(<span class="keyword">new</span> <span class="keyword">double</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;).boxed().collect(Collectors.toList());</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果是<code>String</code>数组,可以使用<code>Stream</code>流转</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] arrays = &#123;<span class="string">"tom"</span>, <span class="string">"jack"</span>, <span class="string">"kate"</span>&#125;;</span><br><span class="line">List&lt;String&gt; stringList= Stream.of(arrays).collect(Collectors.toList());</span><br></pre></td></tr></table></figure></object>]]></content>
      <categories>
        <category>blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>List</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux学习笔记(《Linux就该这么学》)</title>
    <url>/Blog/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E3%80%8ALinux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6%E3%80%8B/</url>
    <content><![CDATA[Linux学习笔记(《Linux就该这么学》)
<a id="more"></a>
<h1 id="Linux就该这么学"><a href="#Linux就该这么学" class="headerlink" title="Linux就该这么学"></a>Linux就该这么学</h1><ul>
<li>网站首页:<a href="https://www.linuxprobe.com/" target="_blank">《Linux就该这么学》</a></li>
</ul>
<h2 id="第二章-·-新手必须掌握的Linux命令"><a href="#第二章-·-新手必须掌握的Linux命令" class="headerlink" title="第二章 · 新手必须掌握的Linux命令"></a>第二章 · 新手必须掌握的Linux命令</h2><h3 id="常用系统工作命令"><a href="#常用系统工作命令" class="headerlink" title="常用系统工作命令"></a>常用系统工作命令</h3><ol>
<li><code>echo</code> 命令</li>
</ol>
<ul>
<li><p><code>echo</code>命令用于在终端输出字符串或变量提取后的值,格式为<code>echo [字符串|变量]</code></p>
<p>例如: <code>echo Hello World!</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@dew ~]# echo Hello World!</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用<code>$</code>变量的方式提取变量<code>SHELL</code>的值,并输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@dew ~]# echo $SHELL</span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ol start="2">
<li><code>date</code> 命令</li>
</ol>
<ul>
<li><code>date</code> 命令用于显示及设置系统的时间或日期,格式为<code>date [选项][+指定的格式]</code></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>%t</td>
<td>跳格[Tab键]</td>
</tr>
<tr>
<td>%H</td>
<td>小时(00~23)</td>
</tr>
<tr>
<td>%I</td>
<td>小时(00~12)</td>
</tr>
<tr>
<td>%M</td>
<td>分钟(00~59)</td>
</tr>
<tr>
<td>%S</td>
<td>秒(00~59)</td>
</tr>
<tr>
<td>%j</td>
<td>今年中的第几天</td>
</tr>
</tbody>
</table>
<ul>
<li>默认格式输出系统当前时间</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@dew ~]<span class="comment"># date</span></span><br><span class="line">Tue Aug 20 15:47:14 CST 2019</span><br></pre></td></tr></table></figure>
<ul>
<li>指定格式输出系统当前时间</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@dew ~]<span class="comment"># date "+%Y-%m-%d %H:%M:%S"</span></span><br><span class="line">2019-08-20 15:47:49</span><br></pre></td></tr></table></figure>
<ul>
<li>设置系统当前时间</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@dew ~]<span class="comment"># date -s"20190820 15:49:00"</span></span><br><span class="line">Tue Aug 20 15:49:00 CST 2019</span><br></pre></td></tr></table></figure>
<ul>
<li><code>date</code>命令中的参数<code>%j</code>可用来查看今天是当年中的第几天。这个桉树能够很好的区分备份时间的新旧,即数字越大,越靠近当前时间。</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@dew ~]<span class="comment"># date "+%j"</span></span><br><span class="line">232</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><code>reboot</code> 命令</li>
</ol>
<ul>
<li><code>reboot</code> 命令用于重启系统,其格式为<code>reboot</code>。由于重启计算机会涉及硬件资源的管理权限,默认只能由<code>root</code>管理员重启。</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@dew ~]<span class="comment"># reboot</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">4. `poweroff` 命令</span><br><span class="line"></span><br><span class="line">- `poweroff` 命令用于关闭系统,其格式为`poweroff`。该命令与reboot命令相同，都会涉及硬件资源的管理权限，因此默认只有root管理员才可以关闭电脑。</span><br><span class="line"></span><br><span class="line">```sh</span><br><span class="line">[root@dew ~]<span class="comment"># poweroff</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">5. `wget` 命令</span><br><span class="line"></span><br><span class="line">- `wget` 命令用于在终端下载网络文件,格式为`wget [参数] 下载地址`</span><br><span class="line"></span><br><span class="line">| 参数 | 作用                                |</span><br><span class="line">| ---- | ----------------------------------- |</span><br><span class="line">| -b   | 后台下载模式                        |</span><br><span class="line">| -P   | 下载到指定目录                      |</span><br><span class="line">| -t   | 最大尝试次数                        |</span><br><span class="line">| -c   | 断点续传                            |</span><br><span class="line">| -p   | 下载页面内所有资源,包括图片、视频等 |</span><br><span class="line">| -r   | 递归下载                            |</span><br><span class="line"></span><br><span class="line">* 使用`wget`命令下载最新的`pdf`格式电子文档</span><br><span class="line"> </span><br><span class="line">```sh</span><br><span class="line">[root@dew ~]<span class="comment"># wget https://www.linuxprobe.com/docs/LinuxProbe.pdf</span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li><code>ps</code> 命令</li>
</ol>
<ul>
<li><code>ps</code> 命令用于查看系统中的进程状态,格式为<code>ps [参数]</code>。通常搭配<code>管道技术使用</code>,用来抓取某个指定服务进程相对应的<code>PID</code></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>显示所有进程(包括其他用户的进程)</td>
</tr>
<tr>
<td>-u</td>
<td>用户以及其他详细信息</td>
</tr>
<tr>
<td>-x</td>
<td>显示没有控制终端的进程</td>
</tr>
</tbody>
</table>
<ul>
<li><code>Linux</code>系统中时刻运行着许多进程，如果能够合理地管理，可以优化系统的性能。五种常见的进程状态,运行、中断、不可中断、僵死、停止。</li>
</ul>
<table>
<thead>
<tr>
<th>状态名称</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>R(运行)</td>
<td>进程正在运行或在运行队列中等待</td>
</tr>
<tr>
<td>S(中断)</td>
<td>进程处于休眠中,当某个条件形成后或者接收到信号时，则脱离该状态</td>
</tr>
<tr>
<td>D(不可中断)</td>
<td>进程不响应系统异步信号，即便用<code>kill</code>命令也不能将其中断</td>
</tr>
<tr>
<td>Z(僵死)</td>
<td>进程已经终止，但进程描述符依然存在，直到父进程调用<code>wait4()</code>系统函数后将进程释放</td>
</tr>
<tr>
<td>T(停止)</td>
<td>进程收到停止信号后停止运行</td>
</tr>
</tbody>
</table>
<ul>
<li><code>ps -aux</code></li>
</ul>
<table>
<thead>
<tr>
<th>USER</th>
<th>PID</th>
<th>%CPU</th>
<th>%MEM</th>
<th>VSZ</th>
<th>RSS</th>
<th>TTY</th>
<th>STAT</th>
<th>START</th>
<th>TIME</th>
<th>COMMAND</th>
</tr>
</thead>
<tbody>
<tr>
<td>进程的所有者</td>
<td>进程ID</td>
<td>CPU占用率</td>
<td>内存占用率</td>
<td>虚拟内存使用率(/KB)</td>
<td>占用的固定内存量(/KB)</td>
<td>所在终端</td>
<td>进程状态</td>
<td>被启动的时间</td>
<td>实际使用CPU的时间</td>
<td>命令名称与参数</td>
</tr>
<tr>
<td>root</td>
<td>1</td>
<td>0.0</td>
<td>0.0</td>
<td>19348</td>
<td>1120</td>
<td>?</td>
<td>Ss</td>
<td>2018</td>
<td>93:29</td>
<td>/sbin/init</td>
</tr>
<tr>
<td>root</td>
<td>2</td>
<td>0.0</td>
<td>0.0</td>
<td>0</td>
<td>0</td>
<td>?</td>
<td>S</td>
<td>2018</td>
<td>0:00</td>
<td>[kthreadd]</td>
</tr>
<tr>
<td>root</td>
<td>3</td>
<td>0.0</td>
<td>0.0</td>
<td>0</td>
<td>0</td>
<td>?</td>
<td>S</td>
<td>2018</td>
<td>0:08</td>
<td>[migration/0]</td>
</tr>
<tr>
<td>root</td>
<td>4</td>
<td>0.0</td>
<td>0.0</td>
<td>0</td>
<td>0</td>
<td>?</td>
<td>S</td>
<td>2018</td>
<td>92:20</td>
<td>[ksoftirqd/0]</td>
</tr>
<tr>
<td>root</td>
<td>5</td>
<td>0.0</td>
<td>0.0</td>
<td>0</td>
<td>0</td>
<td>?</td>
<td>S</td>
<td>2018</td>
<td>0:00</td>
<td>[migration/0]</td>
</tr>
<tr>
<td>root</td>
<td>6</td>
<td>0.0</td>
<td>0.0</td>
<td>0</td>
<td>0</td>
<td>?</td>
<td>S</td>
<td>2018</td>
<td>0:42</td>
<td>[watchdog/0]</td>
</tr>
<tr>
<td>root</td>
<td>7</td>
<td>0.0</td>
<td>0.0</td>
<td>0</td>
<td>0</td>
<td>?</td>
<td>S</td>
<td>2018</td>
<td>0:35</td>
<td>[migration/1]</td>
</tr>
<tr>
<td>root</td>
<td>8</td>
<td>0.0</td>
<td>0.0</td>
<td>0</td>
<td>0</td>
<td>?</td>
<td>S</td>
<td>2018</td>
<td>0:00</td>
<td>[migration/1]</td>
</tr>
</tbody>
</table>
<ol start="7">
<li><code>top</code> 命令</li>
</ol>
<ul>
<li><code>top</code> 命令用于动态的监视进程活动与系统负载等信息,其格式为<code>top</code></li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@dew ~]<span class="comment"># top</span></span><br><span class="line">top - 16:29:09 up 1117 days,  5:23,  3 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks: 158 total,   1 running, 157 sleeping,   0 stopped,   0 zombie</span><br><span class="line">Cpu(s):  0.7%us,  0.8%sy,  0.0%ni, 98.5%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Mem:   4052796k total,  3223016k used,   829780k free,   139760k buffers</span><br><span class="line">Swap:  4063228k total,   219528k used,  3843700k free,  1060376k cached</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                 </span><br><span class="line"> 5608 root      20   0 3517m 487m  12m S  2.3 12.3 472:35.14 java                                                                                  </span><br><span class="line"> 2624 root      20   0  326m 5948 3600 S  0.3  0.1   3158:05 vmtoolsd                                                                                  </span><br><span class="line">10147 root      20   0 1489m  65m 2280 S  0.3  1.7   9206:20 cmf-agent                                                                                 </span><br><span class="line">    1 root      20   0 19356 1240 1016 S  0.0  0.0   9:03.72 init                                                                                   </span><br><span class="line">    2 root      20   0     0    0    0 S  0.0  0.0   0:00.79 kthreadd                                                                                  </span><br><span class="line">    3 root      RT   0     0    0    0 S  0.0  0.0  12:07.86 migration/0 </span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">| 行数    | 含义  |</span><br><span class="line">| ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |</span><br><span class="line">| 第 1 行 | 系统时间、运行时间、登录终端数、系统负载(loadverage: 数值越小意味着负载越低) |</span><br><span class="line">| 第 2 行 | 进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数|</span><br><span class="line">| 第 3 行 | 用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。&lt;br/&gt;其中数据均为CPU数据并以百分比格式显示，例如:“98.5%id” 意味着有 98.5% 的CPU处理器资源处于空闲 |</span><br><span class="line">| 第 4 行 |物理内存、内存使用量、内存空闲量、作为内核缓存的内存量|</span><br><span class="line">|第 5 行|虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量|</span><br><span class="line"></span><br><span class="line">8. `pidof` 命令</span><br><span class="line"></span><br><span class="line">- `pidof` 命令用于查询某个指定服务进程的`PID`值，格式为`pidof [参数] [服务名称]`</span><br><span class="line"></span><br><span class="line">每个进程的进程号码值（PID）是唯一的，因此可以通过PID来区分不同的进程。例如，可以使用如下命令来查询本机上sshd服务程序的PID</span><br><span class="line"></span><br><span class="line">```sh</span><br><span class="line">[root@dew ~]<span class="comment"># pidof sshd</span></span><br><span class="line">29110 27979 2974</span><br></pre></td></tr></table></figure>
<ol start="9">
<li><code>kill</code> 命令</li>
</ol>
<ul>
<li><code>kill</code> 命令用于终止某个指定<code>PID</code> 的服务进程,格式为<code>kill [参数] [进程PID]</code></li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@dew ~]<span class="comment"># kill 29110</span></span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">10.  `killall` 命令</span><br><span class="line"></span><br><span class="line">- `killall` 命令用于终止某个指定名称的服务所对应的全部进程，格式为：“killall [参数][服务名称]”</span><br><span class="line"></span><br><span class="line">```sh</span><br><span class="line">[root@linuxprobe ~]<span class="comment"># pidof httpd</span></span><br><span class="line">13581 13580 13579 13578 13577 13576</span><br><span class="line">[root@linuxprobe ~]<span class="comment"># killall httpd</span></span><br><span class="line">[root@linuxprobe ~]<span class="comment"># pidof httpd</span></span><br><span class="line">[root@linuxprobe ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h3 id="系统状态检测命令"><a href="#系统状态检测命令" class="headerlink" title="系统状态检测命令"></a>系统状态检测命令</h3><ol>
<li><code>ifconfig</code> 命令</li>
</ol>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot初始化数据库脚本</title>
    <url>/springboot/SpringBoot%E5%88%9D%E5%A7%8B%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>SpringBoot 1.x 与SpringBoot 2.x版本初始化脚本时的区别;使用Druid连接池时初始化数据库脚本。<br><a id="more"></a></p>
<h1 id="SpringBoot-1-x启动时初始化脚本"><a href="#SpringBoot-1-x启动时初始化脚本" class="headerlink" title="SpringBoot 1.x启动时初始化脚本"></a><code>SpringBoot 1.x</code>启动时初始化脚本</h1><ul>
<li>注: 案列中使用的是<code>JPA</code>,在<code>application.yml</code>文件中增加了相关配置;使用的是<code>H2</code>数据库(可根据实际情况修改数据库连接配置)</li>
</ul>
<h2 id="Maven依赖及配置"><a href="#Maven依赖及配置" class="headerlink" title="Maven依赖及配置"></a><code>Maven</code>依赖及配置</h2><blockquote>
<p>项目结构</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─java</span><br><span class="line">│  │  └─com</span><br><span class="line">│  │      └─learning</span><br><span class="line">│  │          │  ProviderApplication.java</span><br><span class="line">│  │                  </span><br><span class="line">│  └─resources</span><br><span class="line">│          application.yml</span><br><span class="line">│          data.sql</span><br><span class="line">│          schema.sql</span><br></pre></td></tr></table></figure>
<blockquote>
<p>版本信息</p>
</blockquote>
<ul>
<li><code>SpringBoot</code>版本:<code>&lt;version&gt;1.5.12.RELEASE&lt;/version&gt;</code></li>
</ul>
<blockquote>
<p>项目依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="application-yml文件内容"><a href="#application-yml文件内容" class="headerlink" title="application.yml文件内容"></a><code>application.yml</code>文件内容</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">2001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">microsevice-provider-user</span></span><br><span class="line"><span class="attr">  datasource:</span>                           <span class="comment"># 指定数据源;默认H2建表脚本(根目录/schema.sql);默认H2的insert脚本(classpath:data.sql)</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:h2:mem:~/example-app;</span>     <span class="comment"># 指定数据库,默认</span></span><br><span class="line"><span class="attr">    platform:</span> <span class="string">h2</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">sa</span></span><br><span class="line"><span class="attr">    password:</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">org.h2.Driver</span></span><br><span class="line"><span class="attr">  h2:</span></span><br><span class="line"><span class="attr">    console:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">true</span> <span class="comment"># 是否启用H2数据库控制台</span></span><br><span class="line"><span class="attr">      settings:</span></span><br><span class="line"><span class="attr">        web-allow-others:</span> <span class="literal">true</span>         <span class="comment"># 允许远程浏览器访问H2 数据库控制台</span></span><br><span class="line"><span class="attr">        trace:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  jpa:</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    hibernate:</span></span><br><span class="line"><span class="attr">      ddl-auto:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">    generate-ddl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    database-platform:</span> <span class="string">org.hibernate.dialect.H2Dialect</span></span><br></pre></td></tr></table></figure>
<h2 id="脚本内容"><a href="#脚本内容" class="headerlink" title="脚本内容"></a>脚本内容</h2><blockquote>
<p>脚本名称说明(机翻自官网)</p>
</blockquote>
<p>Spring Boot可以自动创建数据源的架构（DDL脚本）并对其进行初始化（DML脚本）。它从标准根类路径位置（分别为schema.sql和data.sql）加载SQL。另外，Spring Boot处理schema-$ {platform} .sql和data-$ {platform} .sql文件（如果存在），其中platform是spring.datasource.platform的值。这使您可以在必要时切换到特定于数据库的脚本。例如，您可以选择将其设置为数据库的供应商名称（hsqldb，h2，oracle，mysql，postgresql等）。</p>
<blockquote>
<p><code>data.sql</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> tbl_account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbl_account(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">number</span>(<span class="number">12</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">  age <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  sex <span class="built_in">char</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">80</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">role</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>schema.sql</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1001</span>,<span class="string">'admin'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_ADMIN'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1002</span>,<span class="string">'zy'</span>,<span class="number">25</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1003</span>,<span class="string">'lb'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1004</span>,<span class="string">'lk'</span>,<span class="number">22</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1005</span>,<span class="string">'zj'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1006</span>,<span class="string">'lc'</span>,<span class="number">21</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1007</span>,<span class="string">'wdd'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1008</span>,<span class="string">'ln'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1009</span>,<span class="string">'gy'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1010</span>,<span class="string">'dew'</span>,<span class="number">35</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br></pre></td></tr></table></figure>
<h1 id="SpringBoot-2-x启动时初始化脚本"><a href="#SpringBoot-2-x启动时初始化脚本" class="headerlink" title="SpringBoot 2.x启动时初始化脚本"></a><code>SpringBoot 2.x</code>启动时初始化脚本</h1><ul>
<li>注: 需要在<code>SpringBoot 1.x</code>的<code>application.yaml</code>中增加属性,示例如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.datasource.initialization-mode=always</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>application.yml</code>完整内容</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">2002</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">sofa-account</span></span><br><span class="line"><span class="attr">  datasource:</span>                           <span class="comment"># 指定数据源;默认H2建表脚本(根目录/schema-h2.sql);默认H2的insert脚本(classpath:data-h2.sql)</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:h2:mem:~/example-app;</span>     <span class="comment"># 指定数据库,默认</span></span><br><span class="line"><span class="attr">    platform:</span> <span class="string">h2</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">sa</span></span><br><span class="line"><span class="attr">    password:</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">org.h2.Driver</span></span><br><span class="line"><span class="attr">    initialization-mode:</span> <span class="string">always</span>         <span class="comment"># SpringBoot 2.0 中需要添加的属性配置</span></span><br><span class="line"><span class="attr">  h2:</span></span><br><span class="line"><span class="attr">    console:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">true</span> <span class="comment"># 是否启用H2数据库控制台</span></span><br><span class="line"><span class="attr">      settings:</span></span><br><span class="line"><span class="attr">        web-allow-others:</span> <span class="literal">true</span>         <span class="comment"># 允许远程浏览器访问H2 数据库控制台</span></span><br><span class="line"><span class="attr">        trace:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  jpa:</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    hibernate:</span></span><br><span class="line"><span class="attr">      ddl-auto:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">    generate-ddl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    database-platform:</span> <span class="string">org.hibernate.dialect.H2Dialect</span></span><br></pre></td></tr></table></figure>
<h1 id="SpringBoot-2-0使用Druid连接池初始化脚本"><a href="#SpringBoot-2-0使用Druid连接池初始化脚本" class="headerlink" title="SpringBoot 2.0使用Druid连接池初始化脚本"></a><code>SpringBoot 2.0</code>使用<code>Druid</code>连接池初始化脚本</h1><h2 id="Maven依赖及配置-1"><a href="#Maven依赖及配置-1" class="headerlink" title="Maven依赖及配置"></a><code>Maven</code>依赖及配置</h2><ul>
<li><code>SpringBoot</code> 默认的数据库连接池为<code>Hikari</code>,本文中使用的是<code>Druid</code>而已;配置和<code>Hikari</code>应该是一样的,如果有不同烦请告知。</li>
</ul>
<blockquote>
<p>项目结构</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─main</span><br><span class="line">│  ├─java</span><br><span class="line">│  │  └─com</span><br><span class="line">│  │      └─dew</span><br><span class="line">│  │          │  Application.java</span><br><span class="line">│  │          │      </span><br><span class="line">│  │          ├─config</span><br><span class="line">│  │          │      DruidDataSourceConfig.java</span><br><span class="line">│  │                  </span><br><span class="line">│  └─resources</span><br><span class="line">│          application.yaml</span><br><span class="line">│          bootstrap.yaml</span><br><span class="line">│          data.sql</span><br><span class="line">│          schema.sql</span><br><span class="line">│          </span><br><span class="line">└─test</span><br><span class="line">    └─java</span><br><span class="line">        └─com</span><br><span class="line">            └─dew</span><br><span class="line">                ├─config</span><br><span class="line">                │      DruidDataSourceConfigTest.java</span><br></pre></td></tr></table></figure>
<blockquote>
<p>版本信息</p>
</blockquote>
<ul>
<li><code>SpringBoot</code>版本: <code>&lt;version&gt;2.2.1.RELEASE&lt;/version&gt;</code></li>
</ul>
<blockquote>
<p>项目依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="application-yml文件内容-1"><a href="#application-yml文件内容-1" class="headerlink" title="application.yml文件内容"></a><code>application.yml</code>文件内容</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">2001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">sofa-authentication</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attr">    druid:</span></span><br><span class="line"><span class="attr">      initial-size:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">      min-idle:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">      max-active:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">      stat-view-servlet:</span></span><br><span class="line"><span class="attr">        login-username:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">        login-password:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">      max-wait:</span> <span class="number">60000</span></span><br><span class="line"><span class="attr">      time-between-eviction-runs-millis:</span> <span class="number">60000</span> <span class="comment"># 配置间隔多久才进行一次检测,检测需要关闭的空闲连接.单位是毫秒</span></span><br><span class="line"><span class="attr">      min-evictable-idle-time-millis:</span> <span class="number">300000</span> <span class="comment"># 配置一个连接池中最小生存的时间,单位是毫秒</span></span><br><span class="line">      <span class="comment">## 配置监控统计拦截的filters,去掉后监控界面SQL无法进行统计,`wall`用于防火墙(https://blog.csdn.net/garyond/article/details/80189939)</span></span><br><span class="line"><span class="attr">      filters:</span> <span class="string">config,stat,wall,log4j</span></span><br><span class="line"><span class="attr">      web-stat-filter:</span></span><br><span class="line"><span class="attr">        exclusions:</span> <span class="string">'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'</span></span><br><span class="line">      <span class="comment">## 多数据源的标识,若该属性存在则为多数据源环境,不存在则为但数据源环境</span></span><br><span class="line"><span class="attr">      data-sources:</span></span><br><span class="line"><span class="attr">        primary:</span></span><br><span class="line"><span class="attr">          url:</span> <span class="attr">jdbc:h2:mem:~/example-app</span>    <span class="comment"># 指定数据库,默认</span></span><br><span class="line"><span class="attr">          username:</span> <span class="string">sa</span></span><br><span class="line"><span class="attr">          password:</span></span><br><span class="line"><span class="attr">        secondary:</span></span><br><span class="line"><span class="attr">          url:</span> <span class="attr">jdbc:h2:mem:~/example-app</span>    <span class="comment"># 指定数据库,默认</span></span><br><span class="line"><span class="attr">          username:</span> <span class="string">sa</span></span><br><span class="line"><span class="attr">          password:</span></span><br><span class="line"><span class="attr">      async-init:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    initialization-mode:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">  h2:</span></span><br><span class="line"><span class="attr">    console:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">true</span> <span class="comment"># 是否启用H2数据库控制台</span></span><br><span class="line"><span class="attr">      settings:</span></span><br><span class="line"><span class="attr">        web-allow-others:</span> <span class="literal">true</span>         <span class="comment"># 允许远程浏览器访问H2 数据库控制台</span></span><br><span class="line"><span class="attr">        trace:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="脚本内容-1"><a href="#脚本内容-1" class="headerlink" title="脚本内容"></a>脚本内容</h2><ul>
<li>与上述一致,为方便查看copy了一下</li>
</ul>
<blockquote>
<p>脚本名称说明(机翻自官网)</p>
</blockquote>
<p>Spring Boot可以自动创建数据源的架构（DDL脚本）并对其进行初始化（DML脚本）。它从标准根类路径位置（分别为schema.sql和data.sql）加载SQL。另外，Spring Boot处理schema-$ {platform} .sql和data-$ {platform} .sql文件（如果存在），其中platform是spring.datasource.platform的值。这使您可以在必要时切换到特定于数据库的脚本。例如，您可以选择将其设置为数据库的供应商名称（hsqldb，h2，oracle，mysql，postgresql等）。</p>
<blockquote>
<p><code>data.sql</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> tbl_account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbl_account(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">number</span>(<span class="number">12</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">  age <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  sex <span class="built_in">char</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">80</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">role</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>schema.sql</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1001</span>,<span class="string">'admin'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_ADMIN'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1002</span>,<span class="string">'zy'</span>,<span class="number">25</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1003</span>,<span class="string">'lb'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1004</span>,<span class="string">'lk'</span>,<span class="number">22</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1005</span>,<span class="string">'zj'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1006</span>,<span class="string">'lc'</span>,<span class="number">21</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1007</span>,<span class="string">'wdd'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1008</span>,<span class="string">'ln'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1009</span>,<span class="string">'gy'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1010</span>,<span class="string">'dew'</span>,<span class="number">35</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="数据源配置"><a href="#数据源配置" class="headerlink" title="数据源配置"></a>数据源配置</h2><blockquote>
<p><code>DruidDataSourceConfig</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dew.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> DruidDataSourceConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> &lt;br/&gt; Druid 连接池配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/12/4</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span><span class="comment">//必需注解，缺少该注解将启动异常.可自定义某个数据源为主数据源</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.druid.data-sources.primary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">primaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"primaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.druid.data-sources.secondary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">secondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">secondaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"secondaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>DruidDataSourcesConfigTest</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dew.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.dew.entity.UserPO;</span><br><span class="line"><span class="keyword">import</span> com.dew.repository.UserRepository;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest.WebEnvironment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2019/12/4 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span>(webEnvironment = WebEnvironment.RANDOM_PORT)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDataSourceConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> JdbcTemplate primaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> JdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">"select * from TBL_ACCOUNT where NAME='admin' and PASSWORD = '1'"</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = primaryJdbcTemplate.queryForList(sql);</span><br><span class="line">		log.info(<span class="string">"primary datasource test:&#123;&#125;"</span>, JSONArray.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">secondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">"SELECT * FROM TBL_ACCOUNT"</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = primaryJdbcTemplate.queryForList(sql);</span><br><span class="line">		log.info(JSONArray.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>小提示: 若对数据库连接池配置有不明白的,可以查看另一篇博客<a href="../SpringBoot配置多数据源">SpringBoot配置多数据源</a></li>
</ul>
]]></content>
      <categories>
        <category>springboot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot加密敏感信息</title>
    <url>/springboot/SpringBoot%E5%8A%A0%E5%AF%86%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p>在SpringBoot中,使用<code>jasypt</code>依赖实现配置文件加密。记录了<code>Hikari</code>与<code>Druid</code>连接池的使用方法,配置文件中使用<code>ENC(xx)</code>方式,<code>extends HikariDataSource</code>的两种方式实现<br><a id="more"></a></p>
<h1 id="SpringBoot-配置加密的数据库连接信息"><a href="#SpringBoot-配置加密的数据库连接信息" class="headerlink" title="SpringBoot 配置加密的数据库连接信息"></a><h3>SpringBoot 配置加密的数据库连接信息</h3></h1><h2 id="使用Hikari数据库连接池"><a href="#使用Hikari数据库连接池" class="headerlink" title="使用Hikari数据库连接池"></a>使用<code>Hikari</code>数据库连接池</h2><ul>
<li><code>application.yml</code> 配置文件(根据自身实际情况调整配置内容及配置文件格式<code>properties</code>)</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    primary:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.cloudera.impala.jdbc41.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">    secondary:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">xx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置自己的根密码</span></span><br><span class="line"><span class="attr">jasypt:</span></span><br><span class="line"><span class="attr">  encryptor:</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">xx</span></span><br></pre></td></tr></table></figure>
<ul>
<li>两种方式都需要导入<code>jasypt</code>依赖,导入配置后需要在配置文件中添加<code>jasypt.encryptor.password</code>属性</li>
</ul>
<ol>
<li><p>添加依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用<code>jasypt</code>包中的依赖,生成加密后的字符串</p>
<ul>
<li>这里是在测试类中生成的</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line"> <span class="keyword">private</span> StringEncryptor encryptor;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generatorEncryptProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">/* 生成加密的数据库配置信息 */</span></span><br><span class="line">	<span class="comment">// dev</span></span><br><span class="line">	String jdbcUrlDev = <span class="string">"jdbc:oracle:thin:@//127.0.0.1:1521/db"</span>;</span><br><span class="line">	jdbcUrlDev = encryptor.encrypt(jdbcUrlDev);</span><br><span class="line"></span><br><span class="line">	String userNameDev = <span class="string">"test"</span>;</span><br><span class="line">	userNameDev = encryptor.encrypt(userNameDev);</span><br><span class="line"></span><br><span class="line">	String passwordDev = <span class="string">"test"</span>;</span><br><span class="line">	passwordDev = encryptor.encrypt(passwordDev);</span><br><span class="line"></span><br><span class="line">	log.info(<span class="string">"jdbcUrlDev:&#123;&#125;"</span>, jdbcUrlDev);</span><br><span class="line">	log.info(<span class="string">"userNameDev:&#123;&#125;"</span>, userNameDev);</span><br><span class="line">	log.info(<span class="string">"passwordDev:&#123;&#125;"</span>, passwordDev);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// prod</span></span><br><span class="line">	String jdbcUrlPro = <span class="string">"jdbc:oracle:thin:@//ip:1521/db"</span>;</span><br><span class="line">	jdbcUrlPro = encryptor.encrypt(jdbcUrlPro);</span><br><span class="line"></span><br><span class="line">	String userNamePro = <span class="string">"test"</span>;</span><br><span class="line">	userNamePro = encryptor.encrypt(userNamePro);</span><br><span class="line"></span><br><span class="line">	String passwordPro = <span class="string">"test"</span>;</span><br><span class="line">	passwordPro = encryptor.encrypt(passwordPro);</span><br><span class="line"></span><br><span class="line">	log.info(<span class="string">"jdbcUrlPro:&#123;&#125;"</span>, jdbcUrlPro);</span><br><span class="line">	log.info(<span class="string">"userNamePro:&#123;&#125;"</span>, userNamePro);</span><br><span class="line">	log.info(<span class="string">"passwordPro:&#123;&#125;"</span>, passwordPro);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>第一种(以上步骤是相同的,以下步骤开始区分)</p>
</blockquote>
<ol start="3">
<li>修改配置文件</li>
</ol>
<ul>
<li>配置文件中使用密文替换原先配置<code>ENC(xx)</code></li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    primary:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.cloudera.impala.jdbc41.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="string">ENC(xx)</span></span><br><span class="line"><span class="attr">    secondary:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="string">ENC(xx)</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">ENC(xx)</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">ENC(xx)</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>这是上述配置中<code>DataSource</code>配置</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.primary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">primaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"primaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.secondary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">secondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> NamedParameterJdbcTemplate <span class="title">secondaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"secondaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> NamedParameterJdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>创建测试类,测试程序是否能够获取数据库连接</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> NamedParameterJdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryAdGeocodeTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		log.info(<span class="string">"secondary data source connection start:"</span>);</span><br><span class="line">		String sql = <span class="string">"select 1 from dual"</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = secondaryJdbcTemplate.queryForList(sql,<span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">		log.info(<span class="string">"secondary data source:\t&#123;&#125;"</span>,JSON.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>控制台输出,以下是正常时的内容</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">secondary data source connection start:</span><br><span class="line"><span class="number">13</span>:<span class="number">55</span>:<span class="number">14.949</span> [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-<span class="number">1</span> - Starting...</span><br><span class="line"><span class="number">13</span>:<span class="number">55</span>:<span class="number">15.209</span> [main] INFO  com.zaxxer.hikari.pool.PoolBase - HikariPool-<span class="number">1</span> - Driver does not support get/set network timeout <span class="keyword">for</span> connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)</span><br><span class="line"><span class="number">13</span>:<span class="number">55</span>:<span class="number">15.219</span> [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-<span class="number">1</span> - Start completed.</span><br><span class="line">secondary data source:	[&#123;<span class="string">"1"</span>:<span class="number">1</span>&#125;]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>第二种</p>
</blockquote>
<ol start="3">
<li>新建<code>JasyptHikariDataSource</code></li>
</ol>
<ul>
<li>注释的属性可以根据实际情况进行调整,选择自己需要加密的属性重写相关方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.StringEncryptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> JasyptHikariDataSource</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> &lt;br/&gt; 加密数据库密码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/11/8 9:02</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JasyptHikariDataSource</span> <span class="keyword">extends</span> <span class="title">HikariDataSource</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> StringEncryptor encryptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// @Override</span></span><br><span class="line">	<span class="comment">// public String getJdbcUrl() &#123;</span></span><br><span class="line">	<span class="comment">// 	String encJdbcUrl = super.getJdbcUrl();</span></span><br><span class="line">	<span class="comment">// 	if (encJdbcUrl.isEmpty()) &#123;</span></span><br><span class="line">	<span class="comment">// 		return null;</span></span><br><span class="line">	<span class="comment">// 	&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	String decJdbcUUrl = encryptor.decrypt(encJdbcUrl);</span></span><br><span class="line">	<span class="comment">// 	log.info("解密后的jdbcUrl:\t&#123;&#125;", decJdbcUUrl);</span></span><br><span class="line">	<span class="comment">// 	return decJdbcUUrl;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// @Override</span></span><br><span class="line">	<span class="comment">// public String getUsername() &#123;</span></span><br><span class="line">	<span class="comment">// 	String encUsername = super.getUsername();</span></span><br><span class="line">	<span class="comment">// 	if (encUsername.isEmpty()) &#123;</span></span><br><span class="line">	<span class="comment">// 		return null;</span></span><br><span class="line">	<span class="comment">// 	&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	String decUsername = encryptor.decrypt(encUsername);</span></span><br><span class="line">	<span class="comment">// 	log.info("解密后的用户名:\t&#123;&#125;", decUsername);</span></span><br><span class="line">	<span class="comment">// 	return decUsername;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 配置文件中加密后的密码</span></span><br><span class="line">		String encPassword = <span class="keyword">super</span>.getPassword();</span><br><span class="line">		<span class="keyword">if</span> (encPassword.isEmpty()) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		String decPassword = encryptor.decrypt(encPassword);</span><br><span class="line">		log.info(<span class="string">"解密后的密码:\t&#123;&#125;"</span>, decPassword);</span><br><span class="line">		<span class="keyword">return</span> decPassword;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>修改<code>HikariDataSource</code>中的数据源配置</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.primary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">primaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"primaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.secondary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">secondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 这是第一种方法中实例化的对象,也可以用其他的方式实现实例化 */</span></span><br><span class="line">		<span class="comment">// return DataSourceBuilder.create().type(HikariDataSource.class).build();</span></span><br><span class="line">    <span class="comment">/* 这是第二种方法中实例化的对象,也可以用其他的方式实现实例化 */</span></span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(JasyptHikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> NamedParameterJdbcTemplate <span class="title">secondaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"secondaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> NamedParameterJdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>创建测试类,测试程序是否能够获取数据库连接</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> NamedParameterJdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryAdGeocodeTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		log.info(<span class="string">"secondary data source connection start:"</span>);</span><br><span class="line">		String sql = <span class="string">"select 1 from dual"</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = secondaryJdbcTemplate.queryForList(sql,<span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">		log.info(<span class="string">"secondary data source:\t&#123;&#125;"</span>,JSON.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>运行正常即可</li>
</ul>
<h2 id="使用Druid数据库连接池-项目连接的是Oracle数据库-其他数据库看实际情况修改导入的连接依赖即可"><a href="#使用Druid数据库连接池-项目连接的是Oracle数据库-其他数据库看实际情况修改导入的连接依赖即可" class="headerlink" title="使用Druid数据库连接池(项目连接的是Oracle数据库,其他数据库看实际情况修改导入的连接依赖即可)"></a>使用<code>Druid</code>数据库连接池(项目连接的是<code>Oracle</code>数据库,其他数据库看实际情况修改导入的连接依赖即可)</h2><ol>
<li><p>修改<code>pom.xml</code>添加依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jdbc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 本地连接oracle的文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle.ojdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ojdbc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- jasypt 加密依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>springboot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 使用自定义 Swagger2</title>
    <url>/SpringBoot/SpringBoot%E6%95%B4%E5%90%88%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E7%BB%84SwaggerAPI/</url>
    <content><![CDATA[SpringBoot 使用自定义 Swagger2
<a id="more"></a>
<blockquote>
<h3>SpringBoot 整合 Swagger2    | 自定义 swagger-spring-boot-starter</h3>
</blockquote>
<ul>
<li>注: 传统的后端开发人员与其他前端或APP端需共同制定API接口文档，Swagger2 将文档变成可更新的在线版本，并且支持在线测试可以提高沟通效率和规范接口说明.</li>
</ul>
<ul>
<li>自定义 <code>swagger-spring-boot-starter</code> 的依赖，我所知道的分别有    </li>
</ul>
<p><a href="http://blog.battcn.com/2018/05/16/springboot/v2-config-swagger/" target="_blank">唐亚峰</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.battcn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.5-RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/SpringForAll/spring-boot-starter-swagger" target="_blank">Spring4all社区版</a>        </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spring4all<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>前提：</strong> 创建 SpringBoot 项目(也可以是SpringMVC项目，配置方法另行百度咯)    </p>
<hr>
<h1 id="第一种：使用-Swagger-原生依赖配置"><a href="#第一种：使用-Swagger-原生依赖配置" class="headerlink" title="第一种：使用 Swagger 原生依赖配置"></a>第一种：使用 <code>Swagger</code> 原生依赖配置</h1><h2 id="创建SpringBoot应用，添加pom-xml依赖"><a href="#创建SpringBoot应用，添加pom-xml依赖" class="headerlink" title="创建SpringBoot应用，添加pom.xml依赖"></a>创建<code>SpringBoot</code>应用，添加<code>pom.xml</code>依赖</h2><p>项目创建完成完整依赖如下：    </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="创建-Swagger2配置类"><a href="#创建-Swagger2配置类" class="headerlink" title="创建 Swagger2配置类"></a>创建 <code>Swagger2</code>配置类</h2><blockquote>
<p>创建<code>API</code>组</p>
</blockquote>
<ul>
<li>注: 本文创建的是API组，故Swagger2Config配置类中有多个。只需要创建单个API组时无需创建两个 Docke @Bean实体类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learning.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.async.DeferredResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">	*  Swagger2 配置类,</span></span><br><span class="line"><span class="comment">	*  不使用<span class="doctag">@Configuration</span> 注解是可以在 SwaggerApplication.class 中使用<span class="doctag">@Import</span>注解代替</span></span><br><span class="line"><span class="comment">	*  <span class="doctag">@ClassName</span>: Swagger2Config</span></span><br><span class="line"><span class="comment">	*  <span class="doctag">@Description</span>: TODO</span></span><br><span class="line"><span class="comment">	*  <span class="doctag">@Created</span> by time on 2018/07/19</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="meta">@Configuration</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger2Config</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 第一组 API</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String BASEPACKAGE =<span class="string">"com.learning.controller"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String BASEPACKAGE2 =<span class="string">"com.learning.group"</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 定义单个 API</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Docket <span class="title">createApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">				.groupName(<span class="string">"用户相关API"</span>)</span><br><span class="line">				.genericModelSubstitutes(DeferredResult.class)</span><br><span class="line">				.useDefaultResponseMessages(<span class="keyword">false</span>)</span><br><span class="line">				.forCodeGeneration(<span class="keyword">true</span>)</span><br><span class="line">				.apiInfo(apiInfo())</span><br><span class="line">				.select()</span><br><span class="line">				.apis(RequestHandlerSelectors.basePackage(BASEPACKAGE))</span><br><span class="line">				.paths(PathSelectors.any())</span><br><span class="line">				.build();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">				.title(<span class="string">"SpringBoot 官方版 Swagger 构建RESTful文档"</span>)</span><br><span class="line">				.description(<span class="string">"SpringBoot应用在线调试文档"</span>)</span><br><span class="line">				.termsOfServiceUrl(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">				.contact(<span class="keyword">new</span> Contact(<span class="string">"author"</span>, <span class="string">"http://baidu.com"</span>, <span class="string">""</span>))<span class="comment">//名字，地址，邮箱</span></span><br><span class="line">				.version(<span class="string">"1.0"</span>)</span><br><span class="line">				.build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 定义 API 组</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Docket <span class="title">innerApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_12)</span><br><span class="line">				.groupName(<span class="string">"innerApi"</span>)</span><br><span class="line">				.genericModelSubstitutes(DeferredResult.class)</span><br><span class="line">				.useDefaultResponseMessages(<span class="keyword">false</span>)</span><br><span class="line">				.forCodeGeneration(<span class="keyword">true</span>)</span><br><span class="line">				.select()</span><br><span class="line">				.apis(RequestHandlerSelectors.basePackage(BASEPACKAGE2))</span><br><span class="line">				.paths(PathSelectors.any())</span><br><span class="line">				.build()</span><br><span class="line">				.apiInfo(innerApiInfo());</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> ApiInfo <span class="title">innerApiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">				.title(<span class="string">"SpringBoot 官方版 Swagger 构建RESTful文档"</span>)</span><br><span class="line">				.description(<span class="string">"SpringBoot应用在线调试文档"</span>)</span><br><span class="line">				.termsOfServiceUrl(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">				.contact(<span class="keyword">new</span> Contact(<span class="string">"程序员DD"</span>, <span class="string">"http://blog.didispace.com"</span>, <span class="string">""</span>))</span><br><span class="line">				.version(<span class="string">"1.0"</span>)</span><br><span class="line">				.build();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改<code>Application.class</code>中增加<code>@Import</code>        </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 增加 Class 类注解</span></span><br><span class="line"><span class="meta">@Import</span>(value= &#123;Swagger2Config.class&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="创建带有Swagger注解实体类"><a href="#创建带有Swagger注解实体类" class="headerlink" title="创建带有Swagger注解实体类"></a>创建带有<code>Swagger</code>注解实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learning.entity.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  用户视图实体类</span></span><br><span class="line"><span class="comment">  *  <span class="doctag">@ClassName</span>: UserVO</span></span><br><span class="line"><span class="comment">  *  <span class="doctag">@Description</span>: TODO</span></span><br><span class="line"><span class="comment">  *  <span class="doctag">@Created</span> by time on 2018/07/18</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@ApiModel</span>(value = <span class="string">"用户实体类"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserVO</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@ApiModelProperty</span>(value = <span class="string">"账户"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">	<span class="keyword">private</span> String account;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@ApiModelProperty</span>(value = <span class="string">"姓名"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">	<span class="keyword">private</span> String nickName;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UserVO</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UserVO</span><span class="params">(String account, String name, String nickName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.nickName = nickName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span> == obj)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">		<span class="keyword">if</span> (obj == <span class="keyword">null</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span> (getClass() != obj.getClass())</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		UserVO other = (UserVO) obj;</span><br><span class="line">		<span class="keyword">if</span> (account == <span class="keyword">null</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (other.account != <span class="keyword">null</span>)</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!account.equals(other.account))</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span> (name == <span class="keyword">null</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (other.name != <span class="keyword">null</span>)</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!name.equals(other.name))</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span> (nickName == <span class="keyword">null</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (other.nickName != <span class="keyword">null</span>)</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!nickName.equals(other.nickName))</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> account;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccount</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.account = account;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getNickName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> nickName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickName</span><span class="params">(String nickName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.nickName = nickName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"UserVO [account="</span> + account + <span class="string">", name="</span> + name + <span class="string">", nickName="</span> + nickName + <span class="string">"]"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建带有Swagger注解的controller"><a href="#创建带有Swagger注解的controller" class="headerlink" title="创建带有Swagger注解的controller"></a>创建带有<code>Swagger</code>注解的<code>controller</code></h2><p><strong>另一个<code>Controller</code>与下面的一致，就不贴代码了</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learning.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.learning.entity.vo.UserVO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiImplicitParam;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiImplicitParams;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiResponses;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: UserController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户管理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/11/20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/user"</span>)</span><br><span class="line"><span class="meta">@Api</span>(value = <span class="string">"UserManager"</span>, tags = &#123; <span class="string">"用户管理"</span> &#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: getUser</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 获取用户list</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * List&lt;UserVO&gt;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(<span class="string">"获取用户相关信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"userName"</span>, dataType = <span class="string">"String"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户的姓名"</span>, defaultValue = <span class="string">"张飞"</span>),</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"password"</span>, dataType = <span class="string">"String"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户的密码"</span>, defaultValue = <span class="string">"wangga"</span>) &#125;)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径没有或者页面跳转路径错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"/getUser"</span>, method = RequestMethod.POST)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;UserVO&gt; <span class="title">getUser</span><span class="params">(@RequestParam(<span class="string">"userName"</span>)</span> String userName, @<span class="title">RequestParam</span><span class="params">(<span class="string">"password"</span>)</span> String password) </span>&#123;</span><br><span class="line"></span><br><span class="line">		System.out.print(<span class="string">"logger.in:getUser---------"</span>);</span><br><span class="line"></span><br><span class="line">		UserVO info = <span class="keyword">new</span> UserVO(<span class="string">"test01"</span>, <span class="string">"测试账户一"</span>, <span class="string">"士兵"</span>);</span><br><span class="line">		UserVO info2 = <span class="keyword">new</span> UserVO(<span class="string">"test02"</span>, <span class="string">"测试账户二"</span>, <span class="string">"将领"</span>);</span><br><span class="line">		UserVO info3 = <span class="keyword">new</span> UserVO(<span class="string">"test03"</span>, <span class="string">"测试账户三"</span>, <span class="string">"元帅"</span>);</span><br><span class="line"></span><br><span class="line">		List&lt;UserVO&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		list.add(info);</span><br><span class="line">		list.add(info2);</span><br><span class="line">		list.add(info3);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> list;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: queryUserInfo</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 查询用户详细信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * Object</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(value = <span class="string">"查询用户详细信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"path"</span>, name = <span class="string">"id"</span>, dataType = <span class="string">"long"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户id"</span>, defaultValue = <span class="string">"1"</span>)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径没有或者页面跳转路径错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"queryUserInfo/&#123;id&#125;"</span>, method = RequestMethod.GET)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">queryUserInfo</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Long id) </span>&#123;</span><br><span class="line">		UserVO info = <span class="keyword">new</span> UserVO(<span class="string">"士兵"</span> + id, <span class="string">"00"</span> + id, <span class="string">"张三"</span> + id);</span><br><span class="line">		<span class="keyword">return</span> info;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: modifyUserInfo</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 修改用户信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> UserVO</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * Object</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(value = <span class="string">"修改用户信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"id"</span>, dataType = <span class="string">"long"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户id"</span>, defaultValue = <span class="string">"1"</span>),</span><br><span class="line">			<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"body"</span>, name = <span class="string">"User"</span>, dataType = <span class="string">"User"</span>, value = <span class="string">"修改的用户信息"</span>) &#125;)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径没有或者跳转页面错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"modifyUserInfo"</span>, method = RequestMethod.POST)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">modifyUserInfo</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span> Long id, @RequestBody UserVO UserVO) </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">"-----------modifyUserInfo:"</span> + UserVO.toString());</span><br><span class="line">		UserVO.setAccount(++id + <span class="string">""</span>);</span><br><span class="line">		<span class="keyword">return</span> UserVO;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: delUserById</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 删除用户信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@ApiOperation</span>(value = <span class="string">"删除用户信息"</span>)</span><br><span class="line">	<span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"path"</span>, name = <span class="string">"id"</span>, dataType = <span class="string">"long"</span>, required = <span class="keyword">true</span>, value = <span class="string">"用户id"</span>, defaultValue = <span class="string">"1"</span>)</span><br><span class="line">	<span class="meta">@ApiResponses</span>(&#123; <span class="meta">@ApiResponse</span>(code = <span class="number">400</span>, message = <span class="string">"请求参数错误"</span>),</span><br><span class="line">			<span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"请求路径异常,或者跳转页面错误"</span>) &#125;)</span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"delUserById/&#123;id&#125;"</span>, method = RequestMethod.DELETE)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">delUserById</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>, required = <span class="keyword">true</span>)</span> Long id) </span>&#123;</span><br><span class="line">		System.err.print(<span class="string">"-----del"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>RESTful</code>接口</li>
</ul>
<blockquote>
<h3 id="Swagger-注解说明"><a href="#Swagger-注解说明" class="headerlink" title="Swagger 注解说明"></a><code>Swagger</code> 注解说明</h3></blockquote>
<ul>
<li><code>@Api</code>： 描述Controller<br>  <code>value</code>：文档页面不显示<br>  <code>tags</code>:数组类型（{“…”,”…”}）；显示</li>
</ul>
<ul>
<li><code>@ApiIgnore</code>： 忽略该Controller，指不对当前类做扫描</li>
<li><code>@ApiOperation</code>： 描述Controller类中的method接口</li>
<li><code>@ApiParam</code>： 单个参数描述，与@ApiImplicitParam不同的是，他是写在参数左侧的。如（<code>@ApiParam(name = &quot;username&quot;,value = &quot;用户名&quot;) String username）</code></li>
<li><code>@ApiModel</code>： 描述POJO对象</li>
<li><code>@ApiProperty</code>： 描述POJO对象中的属性值</li>
<li><code>@ApiImplicitParam</code>： 描述单个入参信息</li>
<li><code>@ApiImplicitParams</code>： 描述多个入参信息</li>
<li><code>@ApiResponse</code>： 描述单个出参信息</li>
<li><code>@ApiResponses</code>： 描述多个出参信息</li>
<li><code>@ApiError</code>： 接口错误所返回的信息</li>
</ul>
<hr>
<h1 id="第二种-使用自定义-Swagger-依赖配置"><a href="#第二种-使用自定义-Swagger-依赖配置" class="headerlink" title="第二种: 使用自定义 Swagger 依赖配置"></a>第二种: 使用自定义 <code>Swagger</code> 依赖配置</h1><h2 id="创建SpringBoot项目"><a href="#创建SpringBoot项目" class="headerlink" title="创建SpringBoot项目"></a>创建<code>SpringBoot</code>项目</h2><hr>

<h2 id="添加pom-xml中的依赖"><a href="#添加pom-xml中的依赖" class="headerlink" title="添加pom.xml中的依赖"></a>添加<code>pom.xml</code>中的依赖</h2><ul>
<li>注: 替换上述的<code>swagger dependency</code>为下方依赖即可**     </li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.battcn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.5-RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改<code>application.yml</code>配置文件，定义在线接口显示内容    </p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  swagger:</span></span><br><span class="line"><span class="attr">    base-package:</span> <span class="string">com.learning.controller</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    title:</span> <span class="string">Swagger</span> <span class="string">API文档说明</span></span><br><span class="line"><span class="attr">    description:</span> <span class="string">在线调试文档</span></span><br><span class="line"><span class="attr">    version:</span> <span class="number">1.0</span></span><br><span class="line"><span class="attr">    contact:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">Time</span> <span class="string">Machine</span></span><br></pre></td></tr></table></figure>
<h2 id="修改主函数Application-class，添加-EnableSwagger2Doc注解"><a href="#修改主函数Application-class，添加-EnableSwagger2Doc注解" class="headerlink" title="修改主函数Application.class，添加@EnableSwagger2Doc注解"></a>修改主函数<code>Application.class</code>，添加<code>@EnableSwagger2Doc</code>注解</h2><ul>
<li>注: 只需要按照<code>Swagger</code>的注解创建<code>controller</code>与<code>entity</code>即可，无需<code>SwaggerConfig</code>配置类</li>
</ul>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Swagger2</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot + Hikari +JPA 多数据源</title>
    <url>/SpringBoot/SpringBoot%E9%85%8D%E7%BD%AE%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90JPA/</url>
    <content><![CDATA[SpringBoot + Hikari +JPA 多数据源
<a id="more"></a>
<h1 id="SpringBoot2-0-Hikari-多数据源-——-JPA"><a href="#SpringBoot2-0-Hikari-多数据源-——-JPA" class="headerlink" title="SpringBoot2.0 Hikari 多数据源 —— JPA "></a><h3>SpringBoot2.0 Hikari 多数据源 —— JPA </h3></h1><p><code>SpringBoot</code> 连接多数据源使用 <code>JPA</code> 查询应用记录.</p>
<h2 id="pom-xml依赖配置"><a href="#pom-xml依赖配置" class="headerlink" title="pom.xml依赖配置"></a><code>pom.xml</code>依赖配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<p>注：<code>SpringBoot</code> 2.0默认的数据连接池为<code>Hikari</code>，故不需要添加 <code>Hikari</code> 依赖    </p>
<h2 id="多数据源配置"><a href="#多数据源配置" class="headerlink" title="多数据源配置"></a>多数据源配置</h2><blockquote>
<ol>
<li><code>primaryDataSource</code> 配置        </li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learnning.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.config.EnableJpaRepositories;</span><br><span class="line"><span class="keyword">import</span> org.springframework.orm.jpa.JpaTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.PlatformTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: HikariDataSourceConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Hikari 多数据源配置(第一数据源配置)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/10/29</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> &#123;<span class="doctag">@link</span> http://blog.didispace.com/springbootmultidatasource/&#125;&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories</span>(entityManagerFactoryRef = <span class="string">"primaryEntityManagerFactory"</span>, <span class="comment">//</span></span><br><span class="line">		transactionManagerRef = <span class="string">"primaryTransactionManager"</span>, <span class="comment">//</span></span><br><span class="line">		basePackages = &#123; <span class="string">"com.learnning.domain.p"</span> &#125;) <span class="comment">// 设置Repository所在位置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrimaryConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.primary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryEntityManager"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> EntityManager <span class="title">entityManager</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> primaryEntityManagerFactory(builder).getObject().createEntityManager();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryEntityManagerFactory"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> LocalContainerEntityManagerFactoryBean <span class="title">primaryEntityManagerFactory</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> builder<span class="comment">//</span></span><br><span class="line">				.dataSource(primaryDataSource()) <span class="comment">//</span></span><br><span class="line">				.packages(<span class="string">"com.learnning.domain.p"</span>)<span class="comment">//</span></span><br><span class="line">				.persistenceUnit(<span class="string">"primaryPersistenceUnit"</span>)<span class="comment">//</span></span><br><span class="line">				.build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryTransactionManager"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> PlatformTransactionManager <span class="title">transactionManager</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JpaTransactionManager(primaryEntityManagerFactory(builder).getObject());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<ol start="2">
<li><code>sencondaryDataSource</code> 配置        </li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learnning.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.config.EnableJpaRepositories;</span><br><span class="line"><span class="keyword">import</span> org.springframework.orm.jpa.JpaTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.PlatformTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: HikariDataSourceConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Hikari 多数据源配置(第一数据源配置)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/10/29</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> &#123;<span class="doctag">@link</span> http://blog.didispace.com/springbootmultidatasource/&#125;&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories</span>(entityManagerFactoryRef = <span class="string">"secondaryEntityManagerFactory"</span>, <span class="comment">//</span></span><br><span class="line">		transactionManagerRef = <span class="string">"secondaryTransactionManager"</span>, <span class="comment">//</span></span><br><span class="line">		basePackages = &#123; <span class="string">"com.learnning.domain.s"</span> &#125;) <span class="comment">// 设置Repository所在位置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondaryConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"sencondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"sencondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.secondary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">sencondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryEntityManager"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> EntityManager <span class="title">entityManager</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> secondaryEntityManagerFactory(builder).getObject().createEntityManager();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryEntityManagerFactory"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> LocalContainerEntityManagerFactoryBean <span class="title">secondaryEntityManagerFactory</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> builder<span class="comment">//</span></span><br><span class="line">				.dataSource(sencondaryDataSource()) <span class="comment">//</span></span><br><span class="line">				.packages(<span class="string">"com.learnning.domain.s"</span>)<span class="comment">//</span></span><br><span class="line">				.persistenceUnit(<span class="string">"secondaryPersistenceUnit"</span>)<span class="comment">//</span></span><br><span class="line">				.build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryTransactionManager"</span>)</span><br><span class="line">	<span class="function">PlatformTransactionManager <span class="title">transactionManager</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JpaTransactionManager(secondaryEntityManagerFactory(builder).getObject());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JPA-使用多数据源查询"><a href="#JPA-使用多数据源查询" class="headerlink" title="JPA 使用多数据源查询"></a><code>JPA</code> 使用多数据源查询</h2><p><strong>划重点：</strong>        </p>
<ol>
<li><p><code>JPA</code>的<code>entity</code>与table因为有映射关系，所以实体类路径需要映射到对应的<code>DataSource</code>中    </p>
</li>
<li><p><code>JPA</code>查询接口最好也根据不同数据源区分开    </p>
</li>
</ol>
<blockquote>
<p><code>primary</code>数据源配置    </p>
</blockquote>
<ul>
<li><code>primary</code>数据源实体类    </li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learnning.domain.p;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"t_account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="meta">@GeneratedValue</span></span><br><span class="line">	<span class="keyword">private</span> Long account_id;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String user_name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer validity;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Long <span class="title">getAccount_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> account_id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccount_id</span><span class="params">(Long account_id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.account_id = account_id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> user_name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Integer <span class="title">getValidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> validity;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValidity</span><span class="params">(Integer validity)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.validity = validity;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"&#123;\"account_id\":\""</span> + account_id + <span class="string">"\",\"user_name\":\""</span> + user_name + <span class="string">"\",\"validity\":\""</span> + validity</span><br><span class="line">				+ <span class="string">"\"&#125;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>primary</code> 数据源<code>Repository</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learnning.domain.p.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.learnning.domain.p.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: findByAccount_id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 查询用户 User 信息</span></span><br><span class="line"><span class="comment">	 * 	nativeQuery：指定为原生SQL查询</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> account_id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * User</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="comment">/// 模糊匹配</span></span><br><span class="line">	<span class="meta">@Query</span>(value = <span class="string">"select account_id,user_name,validity from t_account where account_id = ?"</span>, nativeQuery = <span class="keyword">true</span>)</span><br><span class="line">	<span class="function">User <span class="title">findByAccount_id</span><span class="params">(Long account_id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>secondary</code> 数据源配置    </p>
</blockquote>
<ul>
<li><code>secondary</code> 实体类 </li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learnning.domain.s;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"t_user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PopUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="meta">@GeneratedValue</span></span><br><span class="line">	<span class="keyword">private</span> Long pop_id;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String pop_name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String ip_start;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String ip_end;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String netmask;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String start_num;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String end_num;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String platform;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer ipgap;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer pop_type;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Long <span class="title">getPop_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> pop_id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPop_id</span><span class="params">(Long pop_id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.pop_id = pop_id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPop_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> pop_name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPop_name</span><span class="params">(String pop_name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.pop_name = pop_name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getIp_start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> ip_start;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIp_start</span><span class="params">(String ip_start)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.ip_start = ip_start;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getIp_end</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> ip_end;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIp_end</span><span class="params">(String ip_end)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.ip_end = ip_end;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getNetmask</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> netmask;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNetmask</span><span class="params">(String netmask)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.netmask = netmask;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> description;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDescription</span><span class="params">(String description)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.description = description;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getStart_num</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> start_num;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStart_num</span><span class="params">(String start_num)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.start_num = start_num;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getEnd_num</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> end_num;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnd_num</span><span class="params">(String end_num)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.end_num = end_num;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPlatform</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> platform;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPlatform</span><span class="params">(String platform)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.platform = platform;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Integer <span class="title">getIpgap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> ipgap;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIpgap</span><span class="params">(Integer ipgap)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.ipgap = ipgap;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Integer <span class="title">getPop_type</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> pop_type;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPop_type</span><span class="params">(Integer pop_type)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.pop_type = pop_type;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"&#123;\"pop_id\":\""</span> + pop_id + <span class="string">"\",\"pop_name\":\""</span> + pop_name + <span class="string">"\",\"ip_start\":\""</span> + ip_start</span><br><span class="line">				+ <span class="string">"\",\"ip_end\":\""</span> + ip_end + <span class="string">"\",\"netmask\":\""</span> + netmask + <span class="string">"\",\"description\":\""</span> + description</span><br><span class="line">				+ <span class="string">"\",\"start_num\":\""</span> + start_num + <span class="string">"\",\"end_num\":\""</span> + end_num + <span class="string">"\",\"platform\":\""</span> + platform</span><br><span class="line">				+ <span class="string">"\",\"ipgap\":\""</span> + ipgap + <span class="string">"\",\"pop_type\":\""</span> + pop_type + <span class="string">"\"&#125;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>secondary</code> 数据源 <code>Repository</code> </li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learnning.domain.s.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.learnning.domain.s.PopUser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PopUserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">PopUser</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Query</span>(value = <span class="string">"select pop_name,pop_id,ip_start,ip_end,netmask,description,start_num,end_num,platform,ipgap,pop_type from t_user where rownum&lt;= 10"</span>, nativeQuery = <span class="keyword">true</span>)</span><br><span class="line">	<span class="function">List&lt;PopUser&gt; <span class="title">queryPopUserPage1</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> PopUserRepository popUserRepository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPrimarySession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	User users = userRepository.findByAccount_id(<span class="number">1L</span>);</span><br><span class="line">	System.out.println(users.toString());</span><br><span class="line"></span><br><span class="line">	List&lt;PopUser&gt; page = popUserRepository.queryPopUserPage1();</span><br><span class="line">	System.out.println(page.toString());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注：</strong> <code>SpringBoot</code>官方建议使用构造函数的方式注入依赖，上述测试代码为在测试类中使用.</p>
<p>使用构造函数注入如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> PopUserRepository popUserRepository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyErrorController</span><span class="params">(UserRepository userRepository, PopUserRepository popUserRepository)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.userRepository = userRepository;</span><br><span class="line">	<span class="keyword">this</span>.popUserRepository = popUserRepository;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Hikari</tag>
        <tag>JPA</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot + Durid | Hikari 多数据源 JDBCTemplate</title>
    <url>/SpringBoot/SpringBoot%E9%85%8D%E7%BD%AE%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/</url>
    <content><![CDATA[<p>SpringBoot + Durid  多数据源 JDBCTemplate<br>SpringBoot + Hikari  多数据源 JDBCTemplate<br><a id="more"></a></p>
<h1 id="SpringBoot-配置多数据源-Druid-Hikari"><a href="#SpringBoot-配置多数据源-Druid-Hikari" class="headerlink" title="SpringBoot 配置多数据源(Druid | Hikari)"></a>SpringBoot 配置多数据源(Druid | Hikari)</h1><blockquote>
<p>注释:</p>
</blockquote>
<p>Druid：阿里系数据连接池<br>Hikari：<code>SpringBoot</code> 2.0开始推<code>HikariCP</code>，将默认的数据库连接池<code>tomcat jdbc pool</code>改为了<code>hikari</code>    </p>
<h2 id="SpringBoot-Druid-配置"><a href="#SpringBoot-Druid-配置" class="headerlink" title="SpringBoot + Druid 配置"></a>SpringBoot + Druid 配置</h2><h2 id="Druid-Jdbctemplate-连接配置"><a href="#Druid-Jdbctemplate-连接配置" class="headerlink" title="Druid-Jdbctemplate 连接配置"></a>Druid-Jdbctemplate 连接配置</h2><p><code>jdbctemplate</code>连接    </p>
<ol>
<li><p>增加<code>pom</code>依赖    </p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 本地连接oracle的文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle.ojdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ojdbc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jdbc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置<code>application.yml</code>文件配置    </p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">	<span class="attr">autoconfigure:</span></span><br><span class="line">		<span class="comment">## 多数据源下必须排除掉 DataSourceAutoConfiguration,否则会导致循环依赖报错</span></span><br><span class="line">		<span class="attr">exclude:</span></span><br><span class="line">		<span class="bullet">-</span> <span class="string">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration</span></span><br><span class="line">	<span class="attr">datasource:</span></span><br><span class="line">		<span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">		<span class="attr">druid:</span></span><br><span class="line">			<span class="comment">## 以`spring.datasources`和`spring.datasource.druid`开头的属性会作为公共配置,注入到每一个数据源</span></span><br><span class="line">			<span class="attr">initial-size:</span> <span class="number">5</span></span><br><span class="line">			<span class="attr">min-idle:</span> <span class="number">5</span> </span><br><span class="line">			<span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">			<span class="attr">stat-view-servlet:</span></span><br><span class="line">				<span class="attr">login-username:</span> <span class="string">admin</span></span><br><span class="line">				<span class="attr">login-password:</span> <span class="string">admin</span></span><br><span class="line">			<span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">			<span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span> <span class="comment">## 配置间隔多久才进行一次检测,检测需要关闭的空闲连接.单位是毫秒</span></span><br><span class="line">			<span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span> <span class="comment">## 配置一个连接池中最小生存的时间,单位是毫秒      </span></span><br><span class="line">			<span class="comment">## 配置监控统计拦截的filters,去掉后监控界面SQL无法进行统计,`wall`用于防火墙(https://blog.csdn.net/garyond/article/details/80189939)</span></span><br><span class="line">			<span class="attr">filters:</span> <span class="string">config,stat,wall,log4j</span></span><br><span class="line">			<span class="attr">web-stat-filter:</span></span><br><span class="line">				<span class="attr">exclusions:</span> <span class="string">'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'</span></span><br><span class="line">			<span class="comment">## 多数据源的标识,若该属性存在则为多数据源环境,不存在则为但数据源环境</span></span><br><span class="line">			<span class="attr">data-sources:</span> </span><br><span class="line">				<span class="attr">primary:</span></span><br><span class="line">					<span class="attr">url:</span> <span class="attr">jdbc:oracle:thin:@//xx:1521/xx</span></span><br><span class="line">					<span class="attr">username:</span> <span class="string">xx</span></span><br><span class="line">					<span class="attr">password:</span> <span class="string">xx</span></span><br><span class="line">					<span class="attr">driverClassName:</span> <span class="string">oracle.jdbc.driver.OracleDriver</span></span><br><span class="line">				<span class="attr">secondary:</span></span><br><span class="line">					<span class="attr">url:</span> <span class="attr">jdbc:oracle:thin:@//xx:1521/xx</span></span><br><span class="line">					<span class="attr">username:</span> <span class="string">xx</span></span><br><span class="line">					<span class="attr">password:</span> <span class="string">xx</span></span><br><span class="line">					<span class="attr">driverClassName:</span> <span class="string">oracle.jdbc.driver.OracleDriver</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Druid 连接池配置类 </p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@ClassName</span>: DruidDataScouConfig</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 多数据源,集成Druid</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> time</span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2018/10/29</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDataScouConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span><span class="comment">//必需注解，缺少该注解将启动异常.可自定义某个数据源为主数据源</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.druid.data-sources.primary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.druid.data-sources.secondary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">secondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">primaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"primaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">secondaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"secondaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试数据源是否可用    </p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sanss.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDataSourceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="comment">// @Qualifier("primaryJdbcTemplate")</span></span><br><span class="line">	<span class="keyword">private</span> JdbcTemplate primaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="comment">// @Qualifier("secondaryJdbcTemplate")//注解可省略</span></span><br><span class="line">	<span class="keyword">private</span> JdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestPrimaryDataSourceConnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.err.println(<span class="string">"primary data source connection start:"</span>);</span><br><span class="line">		String sql = <span class="string">"select 1 from dual"</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = primaryJdbcTemplate.queryForList(sql);</span><br><span class="line">		System.out.println(JSON.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestSecondaryDataSourceConnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.err.println(<span class="string">"secondary data source connection start:"</span>);</span><br><span class="line">		String sql = <span class="string">"select 1 from dual"</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = secondaryJdbcTemplate.queryForList(sql);</span><br><span class="line">		System.out.println(JSON.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>注: 连接池配置参数,可以参考<a href="https://mp.weixin.qq.com/s/hueQXuFY7ZLJ1Udysc4F6g" target="_blank" rel="noopener">数据库连接配置策略和实践指南</a></li>
</ul>
<h2 id="Hikari-jdbctemplate-连接配置"><a href="#Hikari-jdbctemplate-连接配置" class="headerlink" title="Hikari-jdbctemplate 连接配置"></a>Hikari-jdbctemplate 连接配置</h2><ol>
<li><p>添加<code>pom.xml</code>依赖    </p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 本地连接oracle的文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle.ojdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;ojdbc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置<code>application.yml</code>多环境配置文件    </p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    primary:</span> </span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:oracle:thin:@//xx:1521/xx</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">oracle.jdbc.driver.OracleDriver</span></span><br><span class="line"><span class="attr">    secondary:</span> </span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:oracle:thin:@//xx:1521/xx</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">oracle.jdbc.driver.OracleDriver</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>Hikari 数据源配置    </li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: HikariDataSourceConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Hikari 多数据源配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/10/29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Primary</span></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"primaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.primary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@Qualifier</span>(value = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.secondary"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> DataSource <span class="title">secondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"primaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">primaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"primaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span>(name = <span class="string">"secondaryJdbcTemplate"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">secondaryJdbcTemplate</span><span class="params">(@Qualifier(<span class="string">"secondaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>测试数据源是否可用    </li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> JdbcTemplate primaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> JdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestPrimaryDataSourceConnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.err.println(<span class="string">"primary data source connection start:"</span>);</span><br><span class="line">		String sql = <span class="string">"select 1 from dual"</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = primaryJdbcTemplate.queryForList(sql);</span><br><span class="line">		System.out.println(<span class="string">"primary data source :\t"</span>+JSON.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestSecondaryDataSourceConnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.err.println(<span class="string">"secondary data source connection start:"</span>);</span><br><span class="line">		String sql = <span class="string">"select 1 from dual"</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; result = secondaryJdbcTemplate.queryForList(sql);</span><br><span class="line">		System.out.println(<span class="string">"secondary data source :\t"</span>+JSON.toJSONString(result));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置-NamedParameterJdbcTemplate"><a href="#配置-NamedParameterJdbcTemplate" class="headerlink" title="配置 NamedParameterJdbcTemplate"></a>配置 NamedParameterJdbcTemplate</h2><ol>
<li><p><code>pom.xml</code>依赖、<code>applicaiton.yml</code>数据源配置文件内容与<code>jdbctemplate</code>配置一致</p>
</li>
<li><p>需要修改配置类返回的实例为<code>NamedParameterJdbcTemplate</code></p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span>(name = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line"><span class="meta">@Qualifier</span>(value = <span class="string">"secondaryDataSource"</span>)</span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.secondary"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSource <span class="title">secondaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> DataSourceBuilder.create().type(HikariDataSource.class).build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span>(name = <span class="string">"secondaryJdbcTemplate"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> NamedParameterJdbcTemplate <span class="title">secondaryJdbcTemplate</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">		@Qualifier(<span class="string">"secondaryDataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> NamedParameterJdbcTemplate(dataSource);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>测试类</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HikariDataSourceConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> NamedParameterJdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestNamedParameterJdbcTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.err.println(<span class="string">"namedParameterJdbcTemplate data source connection start:"</span>);</span><br><span class="line">		String sql = <span class="string">"select 1 from dual"</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> result = secondaryJdbcTemplate.queryForObject(sql, <span class="keyword">new</span> HashMap&lt;&gt;(), Integer.class);</span><br><span class="line">		System.out.println(<span class="string">"TestNamedParameterJdbcTemplate data source:\t"</span> + result);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Hikari</tag>
        <tag>Durid</tag>
        <tag>JDBCTemplate</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud鉴权之Token</title>
    <url>/SpringCloud/SpringCloud%E9%89%B4%E6%9D%83%E4%B9%8BToken/</url>
    <content><![CDATA[SpringCloud鉴权之Token
<a id="more"></a>
<h1 id="基于-Eureka-搭建鉴权服务-jjwt-Token认证"><a href="#基于-Eureka-搭建鉴权服务-jjwt-Token认证" class="headerlink" title="基于 Eureka 搭建鉴权服务(jjwt Token认证)"></a>基于 Eureka 搭建鉴权服务(jjwt Token认证)</h1><blockquote>
<p>前提</p>
</blockquote>
<ul>
<li>需要启动服务注册中心,eureka-server,项目地址:<a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-server" target="_blank"></a></li>
</ul>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul>
<li>只是码了这部分代码,原理及详细的解释可阅读尾部的链接地址</li>
</ul>
<h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">src-main</span><br><span class="line">      |</span><br><span class="line">      |</span><br><span class="line">    java</span><br><span class="line">      |</span><br><span class="line">       ---  entity</span><br><span class="line">              |</span><br><span class="line">               -- dto</span><br><span class="line">                   |</span><br><span class="line">                    -- UserDto  Token 刷新时间实体类</span><br><span class="line">              |</span><br><span class="line">               -- UserPO  用户数据库映射实体类</span><br><span class="line">              |</span><br><span class="line">              |</span><br><span class="line">            enumerate</span><br><span class="line">              |</span><br><span class="line">               -- ParseToken Token 包含的内容解析</span><br><span class="line">              |</span><br><span class="line">            repository</span><br><span class="line">              |</span><br><span class="line">                -- UserRepository 用户数据库相关操作</span><br><span class="line">              |</span><br><span class="line">            utils</span><br><span class="line">              |</span><br><span class="line">               -- JwtUtil 生成、解析、刷新 Token 工具类</span><br><span class="line">              |</span><br><span class="line">            EurekaTokenServerApplication</span><br><span class="line">      |</span><br><span class="line">    resources</span><br><span class="line">      |</span><br><span class="line">        -- application.yml  主配置文件</span><br><span class="line">        -- data.sql 初始化数据SQL</span><br><span class="line">        -- schema.sql 建表语句SQL</span><br></pre></td></tr></table></figure>
<h2 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h2><ol>
<li>Eureka 服务注册中心</li>
<li>签发Token</li>
</ol>
<h2 id="结构分析"><a href="#结构分析" class="headerlink" title="结构分析"></a>结构分析</h2><ol>
<li>Eureka 服务注册中心</li>
<li>Eureka 客户端</li>
<li>jjwt 签发token</li>
<li>H2 内存数据库</li>
<li>JPA 操作数据库</li>
</ol>
<h2 id="配置相关"><a href="#配置相关" class="headerlink" title="配置相关"></a>配置相关</h2><blockquote>
<p>依赖配置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.19.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.learning<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-token-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-token-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">description</span>&gt;</span>Eureka Token server<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- token starts    --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- token end --&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.56<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动类</p>
</blockquote>
<ul>
<li>向<code>Eureka</code>服务中心注册,需要使用<code>@EnableDiscoveryClient</code>标记为客户端</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaTokenServerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(EurekaTokenServerApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置文件</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1011</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">token-server</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:h2:mem:~/example-app</span></span><br><span class="line"><span class="attr">    platform:</span> <span class="string">h2</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">sa</span></span><br><span class="line"><span class="attr">    password:</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">org.h2.Driver</span></span><br><span class="line"><span class="attr">  h2:</span></span><br><span class="line"><span class="attr">    console:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">false</span> <span class="comment"># 是否启用H2数据库控制台</span></span><br><span class="line"><span class="attr">      settings:</span></span><br><span class="line"><span class="attr">        web-allow-others:</span> <span class="literal">false</span>         <span class="comment"># 允许远程浏览器访问H2 数据库控制台</span></span><br><span class="line"><span class="attr">        trace:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  jpa:</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    hibernate:</span></span><br><span class="line"><span class="attr">      ddl-auto:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">    generate-ddl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    database-platform:</span> <span class="string">org.hibernate.dialect.H2Dialect</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    root:</span> <span class="string">INFO</span></span><br><span class="line">    <span class="string">org.hibernate:</span> <span class="string">INFO</span></span><br><span class="line">    <span class="string">org.hibernate.type.descriptor.sql.BasicBinder:</span> <span class="string">TRACE</span></span><br><span class="line">    <span class="string">org.hibernate.type.descriptor.sql.BasicExtractor:</span> <span class="string">TRACE</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    instance-id:</span> <span class="string">$&#123;spring.cloud.client.ipAddress&#125;:$&#123;spring.application.name&#125;:$&#123;server.port&#125;</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:1001/eureka/</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>初始化数据</p>
</blockquote>
<blockquote>
<blockquote>
<p><code>data.sql</code></p>
</blockquote>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1001</span>,<span class="string">'admin'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_ADMIN'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1002</span>,<span class="string">'zy'</span>,<span class="number">25</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1003</span>,<span class="string">'lb'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1004</span>,<span class="string">'lk'</span>,<span class="number">22</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1005</span>,<span class="string">'zj'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1006</span>,<span class="string">'lc'</span>,<span class="number">21</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1007</span>,<span class="string">'wdd'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1008</span>,<span class="string">'ln'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1009</span>,<span class="string">'gy'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_account (<span class="keyword">id</span>,<span class="keyword">name</span>,age,sex,<span class="keyword">password</span>,<span class="keyword">role</span>) <span class="keyword">values</span> (<span class="number">1010</span>,<span class="string">'dew'</span>,<span class="number">35</span>,<span class="string">'男'</span>,<span class="string">'1'</span>,<span class="string">'ROLE_USER'</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<blockquote>
<p><code>schema.sql</code></p>
</blockquote>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> tbl_account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbl_account(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">number</span>(<span class="number">12</span>) primary  <span class="keyword">key</span>  <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">  age <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  sex <span class="built_in">char</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">80</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">  <span class="keyword">role</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><blockquote>
<p>数据映射实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learning.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span> 用户 —— 数据库映射实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> Account</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> tbl_account</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> sanss</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/22 13:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"tbl_account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserPO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="meta">@GeneratedValue</span></span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 姓名</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 年龄</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 性别</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 登录密码</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 角色名称</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> String role;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>数据传输实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span> token 刷新时间数据传输实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserDo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> sanss</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/22 16:24</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDto</span> <span class="keyword">extends</span> <span class="title">UserPO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 有效时长(unix 时间戳)</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> Long expritaion;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UserDto</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.expritaion = (<span class="keyword">long</span>) <span class="number">1000</span> * <span class="number">60</span> * <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UserDto</span><span class="params">(String token, Long id, String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.token = token;</span><br><span class="line">		<span class="keyword">this</span>.setId(id);</span><br><span class="line">		<span class="keyword">this</span>.setName(name);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>枚举</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解析token,返回什么值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> sanss</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019/2/22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> ParseToken &#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 用户编号</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	UID,</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 登录名</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	USER_NAME,</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 实体类</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	USER_DTO;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>Repository</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span> 用户数据库操作类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserRepository</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> sanss</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/22 15:11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">UserPO</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span> findByNameAndPassword</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>   登录验证</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">	     * <span class="doctag">@param</span> name  登录名</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> password  密码</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> com.learning.entity.Account</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="function">UserPO <span class="title">findByNameAndPassword</span><span class="params">(String name, String password)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Token工具类"><a href="#Token工具类" class="headerlink" title="Token工具类"></a><code>Token</code>工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.learning.entity.dto.UserDto;</span><br><span class="line"><span class="keyword">import</span> com.learning.enumerate.ParseToken;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.JwtBuilder;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.JwtException;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jwts;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.SignatureAlgorithm;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@ClassName</span> JwtUtil</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Description</span> &lt;br/&gt;</span></span><br><span class="line"><span class="comment"> *  JSON Web Token 生成、解析、刷新工具类</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Date</span></span></span><br><span class="line"><span class="comment"> *<span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * token 加密算法 HS256</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> SignatureAlgorithm ENCRYPT_KEY = SignatureAlgorithm.HS256;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 该JWT 所面向的用户</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String SUBJECT = <span class="string">"dew"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 私钥</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String SECRET_KEY = <span class="string">"secretkey"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> name 用户名</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> duration 有效时长(unix时间戳)</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span> createJws</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createJws</span><span class="params">(Long uid, String name, String password, <span class="keyword">long</span> duration)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">long</span> nowMillis = System.currentTimeMillis();</span><br><span class="line">		Date now = <span class="keyword">new</span> Date(nowMillis);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 自定义token携带的参数值</span></span><br><span class="line">		Map&lt;String, Object&gt; claims = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">		claims.put(<span class="string">"uid"</span>, uid);</span><br><span class="line">		claims.put(<span class="string">"user_name"</span>, name);</span><br><span class="line"><span class="comment">//		claims.put("password", password);</span></span><br><span class="line"></span><br><span class="line">		JwtBuilder builder = Jwts.builder()</span><br><span class="line">				                     <span class="comment">// 该JWT 所面向的用户</span></span><br><span class="line">				                     .setSubject(SUBJECT)</span><br><span class="line">				                     <span class="comment">// token 携带的参数</span></span><br><span class="line">				                     .setClaims(claims)</span><br><span class="line">				                     <span class="comment">// token创建时间,unix时间戳格式</span></span><br><span class="line">				                     .setIssuedAt(now)</span><br><span class="line">				                     .signWith(ENCRYPT_KEY, SECRET_KEY);</span><br><span class="line">		<span class="keyword">if</span> (duration &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="comment">// 设置最大有效时间,unix时间戳</span></span><br><span class="line">			<span class="keyword">long</span> expirationMills = nowMillis + duration;</span><br><span class="line">			Date expirationTime = <span class="keyword">new</span> Date(expirationMills);</span><br><span class="line">			<span class="comment">//expire 指定 token 的声明周期,unix 时间戳格式</span></span><br><span class="line">			builder.setExpiration(expirationTime);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> builder.compact();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> java.lang.Object</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span> analysisToken</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> 解析 Token 内容信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">analysisToken</span><span class="params">(String token, ParseToken type)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 解析 token 中携带的信息</span></span><br><span class="line">			Claims claims = parseJWs(token);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">long</span> now = System.currentTimeMillis();</span><br><span class="line">			<span class="comment">// token 失效时间(设置的过期时间为 java.util.Date)</span></span><br><span class="line">			Date expDate = claims.get(<span class="string">"exp"</span>, Date.class);</span><br><span class="line">			<span class="keyword">long</span> exp = expDate.getTime();</span><br><span class="line">			<span class="comment">// 用户编号</span></span><br><span class="line">			Long uid = claims.get(<span class="string">"uid"</span>, Long.class);</span><br><span class="line">			<span class="comment">// 登录名</span></span><br><span class="line">			String userName = claims.get(<span class="string">"user_name"</span>, String.class);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 1.token 过期</span></span><br><span class="line">			<span class="keyword">if</span> (exp &lt; now) &#123;</span><br><span class="line">				<span class="keyword">throw</span> <span class="keyword">new</span> JwtException(<span class="string">"Token 过期"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 2.在有效期内,刷新 token</span></span><br><span class="line">			<span class="keyword">switch</span> (type) &#123;</span><br><span class="line">				<span class="keyword">case</span> UID:</span><br><span class="line">					<span class="keyword">return</span> uid;</span><br><span class="line">				<span class="keyword">case</span> USER_DTO:</span><br><span class="line">					UserDto userDto = <span class="keyword">new</span> UserDto(token, uid, userName);</span><br><span class="line">					exp = now + <span class="keyword">new</span> UserDto().getExpritaion();</span><br><span class="line">					userDto.setExpritaion(exp);</span><br><span class="line">					<span class="keyword">return</span> userDto;</span><br><span class="line">				<span class="keyword">case</span> USER_NAME:</span><br><span class="line">					<span class="keyword">return</span> userName;</span><br><span class="line">				<span class="keyword">default</span>:</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">catch</span> (JwtException e) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> JwtException(e.getMessage());</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"token解析错误"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> io.jsonwebtoken.Claims</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span> parseJWs</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> 解析 token 字符串</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> Claims <span class="title">parseJWs</span><span class="params">(String token)</span> <span class="keyword">throws</span> JwtException </span>&#123;</span><br><span class="line">		<span class="comment">// 解析 token 中携带的信息</span></span><br><span class="line">		Claims claims = Jwts.parser()</span><br><span class="line">				                .setSigningKey(SECRET_KEY)</span><br><span class="line">				                .parseClaimsJws(token)</span><br><span class="line">				                .getBody();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> claims;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtilTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jwsTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">//1001,'admin',18,'男','1','ROLE_ADMIN'</span></span><br><span class="line">		System.out.println(JwtUtil.createJws(<span class="number">1001L</span>, <span class="string">"admin"</span>, <span class="string">"admin"</span>, <span class="number">1000</span> * <span class="number">60</span> * <span class="number">10</span>));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">analysisJwsTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Claims claims = <span class="keyword">new</span> JwtUtil().parseJWs(</span><br><span class="line">				<span class="string">"eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjEwMDEsInBhc3N3b3JkIjoiYWRtaW4iLCJ1c2VyX25hbWUiOiJhZG1pbiIsImV4cCI6MTU1MDgyMDcwOSwiaWF0IjoxNTUwODIwMTA5fQ.sh0ppz6cDOlK0ewlC0-cCFkyOV_FsVfvCTR4JzrmRTI"</span>);</span><br><span class="line">		System.out.println(claims);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配套代码"><a href="#配套代码" class="headerlink" title="配套代码"></a>配套代码</h2><blockquote>
<p>代码地址</p>
</blockquote>
<ul>
<li>GitHub: <a href="https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-token-server" target="_blank" rel="noopener">https://github.com/ColorCoinK/springcloud-learning/tree/master/eureka-token-server</a></li>
</ul>
<blockquote>
<p>参考文章列表</p>
</blockquote>
<ol>
<li><a href="https://blog.battcn.com/2017/08/15/springcloud/dalston/spring-cloud-security-jwt/" target="_blank"> 唐亚峰 —— SpringCloud-服务认证(JWT)</a></li>
<li><a href="https://www.javazhiyin.com/35020.html" target="_blank">Java知音 - 单点登录原理与简单实现</a></li>
</ol>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
        <tag>Token</tag>
      </tags>
  </entry>
  <entry>
    <title>百万数据转换地理编码</title>
    <url>/Blog/Java/%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E5%9C%B0%E7%90%86%E7%BC%96%E7%A0%81/</url>
    <content><![CDATA[<p>导入地址信息文件,调用地理编码信息(高德地理编码)<br><a id="more"></a></p>
<h1 id="批量地址数据获取地理编码信息-数据量可达百万"><a href="#批量地址数据获取地理编码信息-数据量可达百万" class="headerlink" title="批量地址数据获取地理编码信息(数据量可达百万)"></a>批量地址数据获取地理编码信息(数据量可达百万)</h1><ul>
<li>本文章的来自于作者工作中的真实项目,如果看到文章的你有更好的建议,烦请在文章下留言或私信我。</li>
</ul>
<blockquote>
<p>逻辑梳理</p>
</blockquote>
<ol>
<li>获取上传的文件内容,转换为程序可操作的数据;<ol>
<li>地址为空的数据,可以直接保存;</li>
</ol>
</li>
<li>将地址转为需要入库的数据结构;<ol>
<li>地址为数组,当地理编码数据异常时需要将当前数组保存为错误数据(目前是保存到文件中)</li>
<li>调用<code>批量地理编码接口</code>时,需要注意地址的格式</li>
</ol>
</li>
<li>数据入库。<ol>
<li>正常数据可使用分批入库,节省操作时间;</li>
<li>为空数据直接入库;</li>
<li>调用批量地理编码接口查询错误的数据,需要逐一查询确认查询结果无异议后,统一入库。</li>
</ol>
</li>
</ol>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>本文只阐述了作者在开发中的需求和实现,肯定和读者的境况有些不同需要读者自行调整和修改部分代码。对读者有帮助的可能是文件读取、多线程查询、指定大小截取二维数组、多线程入库等部分代码块,文章主要是为有困惑的读者提供部分思路,实际问题需要具体分析和解决。
</code></pre><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><blockquote>
<p><code>pom.xml</code></p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>application.yml</code></p>
</blockquote>
<ul>
<li>数据源配置可以参考作者的另一个篇文章,文章地址<a href="/springboot/SpringBoot配置多数据源/"><code>SpringBoot配置多数据源</code></a></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">  servlet:</span></span><br><span class="line"><span class="attr">    multipart:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      max-file-size:</span> <span class="number">104857600</span> <span class="comment"># 上传文件大小设置</span></span><br><span class="line"><span class="attr">      max-request-size:</span> <span class="number">104857600</span></span><br><span class="line"><span class="attr">geo:</span></span><br><span class="line"><span class="attr">  url:</span> <span class="attr">https://restapi.amap.com/v3/geocode/geo</span></span><br><span class="line"><span class="attr">  key:</span> <span class="comment"># 申请的key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jasypt:</span></span><br><span class="line"><span class="attr">  encryptor:</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">484</span><span class="string">bef877405a9c8</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># developer environment</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    primary:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.cloudera.impala.jdbc41.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:impala://127.0.0.1:21050/default</span></span><br><span class="line"><span class="attr">    secondary:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line">      <span class="comment"># 不加密</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:oracle:thin:@//127.0.0.1:1521/testdb</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">username</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">pwd12563</span></span><br><span class="line"><span class="attr">fileupload:</span></span><br><span class="line"><span class="attr">  geocode:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="comment"># 文件保存地址  D:/fileupload/</span></span><br><span class="line"><span class="attr">    name:</span> <span class="comment"># 保存的文件名 data.txt</span></span><br></pre></td></tr></table></figure>
<h3 id="配置文件实体类"><a href="#配置文件实体类" class="headerlink" title="配置文件实体类"></a>配置文件实体类</h3><blockquote>
<p>错误数据保存地址</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: GeocodeFileProperties</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 高德地理编码查询失败文件保存地址</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/08/09</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"fileupload.geocode"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeocodeFileProperties</span> </span></span><br><span class="line"><span class="class">	</span></span><br><span class="line"><span class="class">	/**</span></span><br><span class="line"><span class="class">	 * 	文件保存路径</span></span><br><span class="line"><span class="class">	 */</span></span><br><span class="line"><span class="class">	<span class="title">private</span> <span class="title">String</span> <span class="title">path</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 	文件保存名称</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>高德地理编码配置文件</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"geo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeocodingProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String key;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="SpringBoot使用RestTemplate调用RESRful"><a href="#SpringBoot使用RestTemplate调用RESRful" class="headerlink" title="SpringBoot使用RestTemplate调用RESRful"></a><code>SpringBoot</code>使用<code>RestTemplate</code>调用<code>RESRful</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpRequestFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.HttpComponentsClientHttpRequestFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateConfig</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">(ClientHttpRequestFactory factory)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> RestTemplate(factory);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> ClientHttpRequestFactory <span class="title">simplClientHttpRequestFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		HttpComponentsClientHttpRequestFactory factory = <span class="keyword">new</span> HttpComponentsClientHttpRequestFactory();</span><br><span class="line">		factory.setConnectionRequestTimeout(<span class="number">10000</span>);</span><br><span class="line">		factory.setConnectTimeout(<span class="number">10000</span>);</span><br><span class="line">		factory.setReadTimeout(<span class="number">10000</span>);</span><br><span class="line">		<span class="keyword">return</span> factory;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><blockquote>
<p>文件内容对应的实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: AddressUserDTO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户上传文件对应实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/04/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressUserDTO</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 用户AD</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 用户地址</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"&#123;\"name\":\""</span> + name + <span class="string">"\", \"address\":\""</span> + address + <span class="string">"\"&#125;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>入库的实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: GDPoint</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 将经纬度转换为 数据库经纬度 50m 栅格编码 :  X= trunc( 经度/0.000129  ), Y= trunc(纬度/0.00245)  取整</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/02/20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GDPoint</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">double</span> X = <span class="number">0.000129</span>, Y = <span class="number">0.00245</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 经度</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> Integer longitude;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 维度</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> Integer latitude;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GDPoint</span><span class="params">(String longitude, String latitude)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> lng = Double.parseDouble(longitude);</span><br><span class="line">		<span class="keyword">double</span> lat = Double.parseDouble(latitude);</span><br><span class="line">		<span class="keyword">this</span>.longitude = (<span class="keyword">int</span>) Math.ceil(lng / X);</span><br><span class="line">		<span class="keyword">this</span>.latitude = (<span class="keyword">int</span>) Math.ceil(lat / Y);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>网格数据实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span> 网格数据库实体类映射</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 数据入库实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/29 15:56</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressGridDO</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 	地址</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String address;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 	经度</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String longitude;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 	纬度</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String latitude;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 	网格编号X</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> Integer gridX;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 *	 网格编号Y</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> Integer gridY;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AddressGridDO</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AddressGridDO</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">		<span class="keyword">this</span>.gridX = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">this</span>.gridY = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">this</span>.longitude = <span class="string">""</span>;</span><br><span class="line">		<span class="keyword">this</span>.latitude = <span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AddressGridDO</span><span class="params">(String address, String longitude, String latitude, Integer gridX, Integer gridY)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">		<span class="keyword">this</span>.longitude = longitude;</span><br><span class="line">		<span class="keyword">this</span>.latitude = latitude;</span><br><span class="line">		<span class="keyword">this</span>.gridX = gridX;</span><br><span class="line">		<span class="keyword">this</span>.gridY = gridY;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a><code>Repository</code></h2><ul>
<li><p>数据库使用的是<code>Oracle</code>,如果是使用<code>MySQL</code>或其他数据库烦请自行百度.暂时没有添加相关代码。</p>
</li>
<li><p>数据源配置可以参考作者的另一个篇文章,文章地址<a href="/springboot/SpringBoot配置多数据源/"><code>SpringBoot配置多数据源</code></a></p>
</li>
</ul>
<blockquote>
<p>地址转换为网格后的数据入库</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.SqlParameterSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.namedparam.SqlParameterSourceUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressRepository</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> NamedParameterJdbcTemplate secondaryJdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> 用户网格数据批量入库</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span> [list 入库的数据]</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Date</span> 14:45 2019/4/1</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Return</span> void</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchSaveAdvertising</span><span class="params">(List&lt;AddressGridDO&gt; list)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// merge into 语法是存在则替换,需要特别注意数据更新的条件.以免出现数据被批量更新为同一记录!</span></span><br><span class="line">		String sql = <span class="string">"merge into t_address_grid t1 using(select :address address,:longitude longitude,:latitude latitude,:gridX gridX,:gridY gridY from dual) t2 on (t1.address = t2.address) when matched then update set t1.longitude=t2.longitude , t1.latitude = t2.latitude , t1.grid_x = t2.gridx , t1.grid_y = t2.gridy when not matched then insert (t1.address,t1.longitude,t1.latitude,t1.grid_x,t1.grid_y) values (t2.address,t2.longitude,t2.latitude,t2.gridx,t2.gridy)"</span>;</span><br><span class="line"></span><br><span class="line">		SqlParameterSource[] beanSource = SqlParameterSourceUtils.createBatch(list.toArray());</span><br><span class="line">		secondaryJdbcTemplate.batchUpdate(sql, beanSource);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">		log.info(<span class="string">"数据入库时间:\t&#123;&#125;,入库数据大小:\t&#123;&#125;"</span>, (end - start), list.size());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Service逻辑实现"><a href="#Service逻辑实现" class="headerlink" title="Service逻辑实现"></a><code>Service</code>逻辑实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.FileAlreadyExistsException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Future;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: GeocodeServiceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 地址信息网格化</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/04/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeocodeServiceImpl</span> <span class="keyword">implements</span> <span class="title">SynchronizeInformationService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> GeocodeFileProperties geocodeFileProperties;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> AddressRepository addressRepository;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GeocodeServiceImpl</span><span class="params">(GeocodeFileProperties geocodeFileProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">			AddressRepository addressRepository)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.geocodeFileProperties = geocodeFileProperties;</span><br><span class="line">		<span class="keyword">this</span>.addressRepository = addressRepository;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">synchronizationInformation</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		Map&lt;String, Object&gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">		result.put(<span class="string">"success"</span>, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">		Long timestamp = System.currentTimeMillis();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			AnalysisText analysisText = <span class="keyword">new</span> AnalysisText();</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 读取文件内容,并且拆分为10个一组的list</span></span><br><span class="line">			Map&lt;String, List&lt;List&lt;AddressUserDTO&gt;&gt;&gt; txtList = analysisText.txt2List(file);</span><br><span class="line">			List&lt;List&lt;AddressUserDTO&gt;&gt; models = txtList.get(<span class="string">"group"</span>);</span><br><span class="line">			log.info(<span class="string">"不为空地址数量:\t"</span> + ((models.size() - <span class="number">1</span>) * <span class="number">10</span> + (models.get(models.size() - <span class="number">1</span>)).size()));</span><br><span class="line">			<span class="keyword">this</span>.batchSaveByAddressNotEmpty(models, <span class="keyword">true</span>, timestamp);</span><br><span class="line"></span><br><span class="line">			List&lt;List&lt;AddressUserDTO&gt;&gt; emptys = txtList.get(<span class="string">"emptyList"</span>);</span><br><span class="line">			log.info(<span class="string">"为空地址请求列表数:"</span> + emptys.get(<span class="number">0</span>).size());</span><br><span class="line">			<span class="keyword">this</span>.batchSaveByAddressNotEmpty(emptys, <span class="keyword">false</span>, timestamp);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 读取查询地理编码错误地址内容,入库</span></span><br><span class="line">			<span class="keyword">this</span>.saveErrorData(timestamp);</span><br><span class="line"></span><br><span class="line">			result.put(<span class="string">"success"</span>, <span class="keyword">true</span>);</span><br><span class="line">			result.put(<span class="string">"msg"</span>, <span class="string">"导入成功"</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (FileAlreadyExistsException e) &#123;</span><br><span class="line">			log.info(<span class="string">"不存在错误地址"</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			result.put(<span class="string">"msg"</span>, <span class="string">"系统错误,请重试或联系管理员"</span>);</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			result.put(<span class="string">"msg"</span>, <span class="string">"文件内容有误,请联系管理员"</span>);</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> models txt文本数据</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> flag true: 地址不为空 false: 地址为空 void</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: batchSave</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 批量保存地址信息数据,创建的线程数取决于机器的配置。需要根据自身情况增加或减少,如果引起宕机等后果本人概不负责…………</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">batchSaveByAddressNotEmpty</span><span class="params">(List&lt;List&lt;AddressUserDTO&gt;&gt; models, <span class="keyword">boolean</span> flag, Long timestamp)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 10w 二维数组长度List</span></span><br><span class="line">		List&lt;List&lt;AddressGridDO&gt;&gt; groupList = <span class="keyword">new</span> AnalysisText().groupList(models, <span class="number">3000</span>, flag, timestamp);</span><br><span class="line">		log.info(<span class="string">"##查询分组数据大小: &#123;&#125;"</span>, groupList.size());</span><br><span class="line">		<span class="comment">// 100w 数据待保存,最多创建4个线程</span></span><br><span class="line">		<span class="comment">// 创建线程数 = 数据总数 / groupList</span></span><br><span class="line">		<span class="keyword">int</span> threadPoolSize = groupList.size();</span><br><span class="line">		<span class="comment">// 最多创建 4 个线程</span></span><br><span class="line">		threadPoolSize = threadPoolSize &gt;= <span class="number">4</span> ? <span class="number">4</span> : threadPoolSize;</span><br><span class="line">		log.info(<span class="string">"##不为空: &#123;&#125; 地址列表,入库创建的线程数: &#123;&#125;"</span>, threadPoolSize);</span><br><span class="line">		ExecutorService executor = Executors.newFixedThreadPool(threadPoolSize);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 拆分网格数据</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = groupList.size(); i &lt; length; i++) &#123;</span><br><span class="line">				List&lt;AddressGridDO&gt; list = groupList.get(i);</span><br><span class="line">				BatchSaveThread saveThread = <span class="keyword">new</span> BatchSaveThread(list);</span><br><span class="line">				executor.execute(saveThread);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			executor.shutdown();</span><br><span class="line">			log.info(<span class="string">"##不为空: &#123;&#125;,地址列表入库完成"</span>, flag);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: saveErrorData</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 保存查询错误的地址信息 void</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveErrorData</span><span class="params">(Long timestamp)</span> <span class="keyword">throws</span> FileAlreadyExistsException </span>&#123;</span><br><span class="line">		String path = geocodeFileProperties.getPath() + <span class="string">"/"</span> + timestamp + <span class="string">"_"</span> + geocodeFileProperties.getName();</span><br><span class="line">		FileReader reader = <span class="keyword">null</span>;</span><br><span class="line">		BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 校验文件是否存在</span></span><br><span class="line">			File file = <span class="keyword">new</span> File(path);</span><br><span class="line">			<span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">				log.info(<span class="string">"无错误数据"</span>);</span><br><span class="line">				<span class="keyword">throw</span> <span class="keyword">new</span> FileNotFoundException();</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			reader = <span class="keyword">new</span> FileReader(path);</span><br><span class="line">			br = <span class="keyword">new</span> BufferedReader(reader);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 读取文件内容</span></span><br><span class="line">			String line;</span><br><span class="line">			List&lt;AddressUserDTO&gt; models = <span class="keyword">null</span>;</span><br><span class="line">			List&lt;AddressUserDTO&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">				models = JSON.parseArray(line, AddressUserDTO.class);</span><br><span class="line">				list.addAll(models);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 错误数据List</span></span><br><span class="line">			log.info(<span class="string">"错误地址数据量:\t"</span> + list.size());</span><br><span class="line"></span><br><span class="line">			List&lt;AddressGridDO&gt; geocode = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			AddressGridDO value = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 地理编码——经纬度</span></span><br><span class="line">			String[] array;</span><br><span class="line">			<span class="comment">// 用户AD、用户地址、经度,纬度</span></span><br><span class="line">			String name, address, longitude, latitude;</span><br><span class="line"></span><br><span class="line">			GeoCodingUtil geoCodingUtil = <span class="keyword">new</span> GeoCodingUtil();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (AddressUserDTO advertisingModel : list) &#123;</span><br><span class="line">				name = advertisingModel.getName();</span><br><span class="line">				address = advertisingModel.getAddress();</span><br><span class="line"></span><br><span class="line">				String point = geoCodingUtil.getShanghaiGeocoding(address);</span><br><span class="line">				<span class="keyword">if</span> (<span class="string">"[]"</span>.equals(point)) &#123;</span><br><span class="line">					value = <span class="keyword">new</span> AddressGridDO(advertisingModel.getName(), <span class="string">""</span>, <span class="string">""</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">					geocode.add(value);</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 获取经纬度</span></span><br><span class="line">				array = point.split(<span class="string">","</span>);</span><br><span class="line">				longitude = array[<span class="number">0</span>];</span><br><span class="line">				latitude = array[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">				GDPoint gdPoint = <span class="keyword">new</span> GDPoint(longitude, latitude);</span><br><span class="line"></span><br><span class="line">				value = <span class="keyword">new</span> AddressGridDO(name, longitude, latitude, gdPoint.getLongitude(), gdPoint.getLatitude());</span><br><span class="line">				geocode.add(value);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 多线程 执行数据入库</span></span><br><span class="line">			<span class="keyword">this</span>.saveBatchErrorData(geocode, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">catch</span> (FileNotFoundException fileNotFoundException) &#123;</span><br><span class="line">			log.error(<span class="string">"当前导入的文件中没有错误数据"</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			log.error(<span class="string">"存错误地址信息方法错误,错误内容:\t"</span> + e.getMessage());</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line">					reader.close();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (br != <span class="keyword">null</span>) &#123;</span><br><span class="line">					br.close();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 删除文件</span></span><br><span class="line">				File file = <span class="keyword">new</span> File(path);</span><br><span class="line">				<span class="keyword">if</span> (file.exists() &amp;&amp; file.isFile()) &#123;</span><br><span class="line">					file.delete();</span><br><span class="line">					log.info(<span class="string">"删除文件路径:\t"</span> + path);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * @Title saveBatchErrorData</span></span><br><span class="line"><span class="comment">	 * @Description 批量保存错误地址编码</span></span><br><span class="line"><span class="comment">	 * @Param</span></span><br><span class="line"><span class="comment">	 * @param geocode</span></span><br><span class="line"><span class="comment">	 * @return void</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveBatchErrorData</span><span class="params">(List&lt;AddressGridDO&gt; geocode, <span class="keyword">int</span> groupSize)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 批量入库</span></span><br><span class="line">		AnalysisText analysisText = <span class="keyword">new</span> AnalysisText();</span><br><span class="line">		List&lt;List&lt;AddressGridDO&gt;&gt; geocodeList = analysisText.spilitGroup(geocode, groupSize * <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> threadPoolSize = geocodeList.size();</span><br><span class="line">		threadPoolSize = threadPoolSize &gt;= <span class="number">4</span> ? <span class="number">4</span> : threadPoolSize;</span><br><span class="line">		ExecutorService executor = Executors.newFixedThreadPool(threadPoolSize);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 拆分网格数据</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = geocodeList.size(); i &lt; length; i++) &#123;</span><br><span class="line">				List&lt;AddressGridDO&gt; list = geocodeList.get(i);</span><br><span class="line">				BatchSaveThread saveThread = <span class="keyword">new</span> BatchSaveThread(list);</span><br><span class="line">				executor.execute(saveThread);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			executor.shutdown();</span><br><span class="line">			log.info(<span class="string">"不为空地址列表入库完成"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ClassName</span>: BatchSaveThread</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 多线程执行入库操作</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@date</span> 2019/03/14</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">BatchSaveThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> List&lt;AddressGridDO&gt; list;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">BatchSaveThread</span><span class="params">(List&lt;AddressGridDO&gt; list)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.list = list;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (list.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				addressRepository.batchSaveAdvertising(list);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ClassName</span>: BatchRestAPIThread</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 多线程查询API, 地理编码操作</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@date</span> 2019/03/18</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">BatchRestAPIThread</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">List</span>&lt;<span class="title">AddressGridDO</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">		AnalysisText analysisText = <span class="keyword">new</span> AnalysisText();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> Long timestamp;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> List&lt;List&lt;AddressUserDTO&gt;&gt; list;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">BatchRestAPIThread</span><span class="params">(Long timestamp, List&lt;List&lt;AddressUserDTO&gt;&gt; list)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.timestamp = timestamp;</span><br><span class="line">			<span class="keyword">this</span>.list = list;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> List&lt;AddressGridDO&gt; <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">			List&lt;AddressGridDO&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = list.size(); i &lt; length; i++) &#123;</span><br><span class="line">				result.addAll(analysisText.geocodes(list.get(i), timestamp));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> result;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ClassName</span>: AnalysisText</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 解析批量导入的txt文件</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@date</span> 2019/03/14</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">AnalysisText</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * @Title txt2List</span></span><br><span class="line"><span class="comment">		 * @Description txt 文件解析为两组list : &#123;"group":地址不为空的List&lt;List&lt;AddressUserDTO&gt;&gt;,"emptyList": address 为空的List&#125;</span></span><br><span class="line"><span class="comment">		 * @Param</span></span><br><span class="line"><span class="comment">		 * @param file</span></span><br><span class="line"><span class="comment">		 * @return java.util.Map&lt;java.lang.String,java.util.List&lt;java.util.List&lt;com.sanss.entity.dto.AddressUserDTO&gt;&gt;&gt;</span></span><br><span class="line"><span class="comment">		 **/</span></span><br><span class="line">		<span class="keyword">private</span> Map&lt;String, List&lt;List&lt;AddressUserDTO&gt;&gt;&gt; txt2List(MultipartFile file) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">			Map&lt;String, List&lt;List&lt;AddressUserDTO&gt;&gt;&gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">			InputStreamReader reader = <span class="keyword">null</span>;</span><br><span class="line">			BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">			List&lt;List&lt;AddressUserDTO&gt;&gt; group = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			List&lt;List&lt;AddressUserDTO&gt;&gt; emptyList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">			AddressUserDTO value = <span class="keyword">null</span>;</span><br><span class="line">			<span class="comment">// 地址不为空的数据</span></span><br><span class="line">			List&lt;AddressUserDTO&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">10</span>);</span><br><span class="line">			<span class="comment">// 地址为空的数据</span></span><br><span class="line">			List&lt;AddressUserDTO&gt; empty = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">				String encoding = <span class="keyword">this</span>.getEncoding(file);</span><br><span class="line">				log.info(<span class="string">"文件编码格式:\t&#123;&#125;"</span>, encoding);</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 设置字符编码,中文乱码</span></span><br><span class="line">				<span class="comment">// reader = new InputStreamReader(file.getInputStream(), "UTF-8");</span></span><br><span class="line">				reader = <span class="keyword">new</span> InputStreamReader(file.getInputStream(), encoding);</span><br><span class="line"></span><br><span class="line">				<span class="comment">// reader = new InputStreamReader(file.getInputStream(), "GBK");</span></span><br><span class="line">				<span class="comment">// 缓存读取文件</span></span><br><span class="line">				br = <span class="keyword">new</span> BufferedReader(reader);</span><br><span class="line">				String line = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 内数组大小</span></span><br><span class="line">				<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">				String[] split;</span><br><span class="line">				String userAD, address;</span><br><span class="line">				<span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">					<span class="keyword">if</span> (!<span class="string">""</span>.equals(line)) &#123;</span><br><span class="line">						<span class="comment">// 设置行内分隔符"，"</span></span><br><span class="line">						split = line.split(<span class="string">","</span>);</span><br><span class="line">						<span class="comment">// 用户AD</span></span><br><span class="line">						userAD = split[<span class="number">0</span>];</span><br><span class="line">						<span class="comment">// 用户地址,示例："世纪大道地铁站***"</span></span><br><span class="line">						address = split[<span class="number">1</span>];</span><br><span class="line">						address = address.trim().replaceAll(<span class="string">"\\*"</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">						<span class="comment">// 地址为空与不为空拆分开</span></span><br><span class="line">						<span class="keyword">if</span> (!<span class="string">""</span>.equals(address)) &#123;</span><br><span class="line">							value = <span class="keyword">new</span> AddressUserDTO(userAD, address);</span><br><span class="line">							list.add(value);</span><br><span class="line">							++i;</span><br><span class="line">						&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">							value = <span class="keyword">new</span> AddressUserDTO(userAD, <span class="string">""</span>);</span><br><span class="line">							empty.add(value);</span><br><span class="line">							<span class="keyword">continue</span>;</span><br><span class="line">						&#125;</span><br><span class="line"></span><br><span class="line">						<span class="comment">// 十个一组分成若干小组</span></span><br><span class="line">						<span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">							group.add(j, list);</span><br><span class="line">							list = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">10</span>);</span><br><span class="line">							j++;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 行数对10取余不足10的部分</span></span><br><span class="line">				<span class="keyword">if</span> (!<span class="string">"[]"</span>.equals(list.toString()) &amp;&amp; list != <span class="keyword">null</span>) &#123;</span><br><span class="line">					group.add(j, list);</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// Empty list 不进行 10 分组</span></span><br><span class="line">				emptyList.add(empty);</span><br><span class="line"></span><br><span class="line">				result.put(<span class="string">"group"</span>, group);</span><br><span class="line">				result.put(<span class="string">"emptyList"</span>, emptyList);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> result;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				result.put(<span class="string">"group"</span>, group);</span><br><span class="line">				result.put(<span class="string">"emptyList"</span>, emptyList);</span><br><span class="line">				<span class="keyword">return</span> result;</span><br><span class="line">			&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">				reader.close();</span><br><span class="line">				br.close();</span><br><span class="line">				log.info(<span class="string">"文件读完:\t"</span> + <span class="keyword">new</span> Date());</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * @Title getEncoding</span></span><br><span class="line"><span class="comment">		 * @Description 获取文件编码</span></span><br><span class="line"><span class="comment">		 * @Param</span></span><br><span class="line"><span class="comment">		 * @param file</span></span><br><span class="line"><span class="comment">		 * @return java.lang.String</span></span><br><span class="line"><span class="comment">		 **/</span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> String <span class="title">getEncoding</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">			BufferedInputStream inputStream = <span class="keyword">new</span> BufferedInputStream(file.getInputStream());</span><br><span class="line">			<span class="keyword">int</span> p = (inputStream.read() &lt;&lt; <span class="number">8</span>) + inputStream.read();</span><br><span class="line">			String encoding = <span class="keyword">null</span>;</span><br><span class="line">			<span class="keyword">switch</span> (p) &#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">0xefbb</span>:</span><br><span class="line">					encoding = <span class="string">"UTF-8"</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">0xfffe</span>:</span><br><span class="line">					encoding = <span class="string">"Unicode"</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">0xfeff</span>:</span><br><span class="line">					encoding = <span class="string">"UTF-16BE"</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">0x5c75</span>:</span><br><span class="line">					encoding = <span class="string">"ANSI|ASCII"</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">default</span>:</span><br><span class="line">					encoding = <span class="string">"GBK"</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> encoding;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> groupSize 分组区间</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> flag true:地址不为空|false:地址为空</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Title</span>: groupList</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Description</span>: 地址为空、地址不为空 —— 地理编码</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> List&lt;List&lt;AddressGridDO&gt;&gt; groupList(List&lt;List&lt;AddressUserDTO&gt;&gt; list, <span class="keyword">int</span> groupSize, <span class="keyword">boolean</span> flag,</span><br><span class="line">				Long timestamp) &#123;</span><br><span class="line">			<span class="comment">// if (flag) &#123; return this.groupNotEmpty(list, groupSize, timestamp); &#125;</span></span><br><span class="line">			<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">this</span>.groupNotEmptySinglethread(list, groupSize, timestamp);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>.groupEmpty(list, groupSize);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> modelGroup 10个地址为一组的List</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> groupSize 分组大小</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> timestamp 访问API接口的时间戳</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Title</span>: groupNotEmptySinglethread</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Description</span>: 不为空地址列表使用单线程查询API, 获取返回结果</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> List&lt;List&lt;AddressGridDO&gt;&gt; groupNotEmptySinglethread(List&lt;List&lt;AddressUserDTO&gt;&gt; modelGroup, <span class="keyword">int</span> groupSize,</span><br><span class="line">				Long timestamp) &#123;</span><br><span class="line">			List&lt;AddressGridDO&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">			List&lt;List&lt;AddressGridDO&gt;&gt; listGroup = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				AnalysisText analysisText = <span class="keyword">new</span> AnalysisText();</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = modelGroup.size(); i &lt; length; i++) &#123;</span><br><span class="line">					list.addAll(analysisText.geocodes(modelGroup.get(i), timestamp));</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 10w 数组查询 API后返回的是100w 数据,数据按 groupSize * 10 一组拆分</span></span><br><span class="line">				listGroup = <span class="keyword">this</span>.spilitGroup(list, groupSize * <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> listGroup;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">				<span class="keyword">return</span> listGroup;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * @Title groupNotEmptyMultithreading</span></span><br><span class="line"><span class="comment">		 * @Description  groupNotEmptyMultithreading 多线程方法,当前机器使用多线程速率反而更慢</span></span><br><span class="line"><span class="comment">		 *  不为空地址列表使用多线程查询API, 获取返回结果</span></span><br><span class="line"><span class="comment">		 * @Param</span></span><br><span class="line"><span class="comment">		 * @param modelGroup 10个地址为一组的List</span></span><br><span class="line"><span class="comment">		 * @param groupSize 分组大小</span></span><br><span class="line"><span class="comment">		 * @param timestamp 访问API接口的时间戳</span></span><br><span class="line"><span class="comment">		 * @return java.util.List&lt;java.util.List&lt;com.sanss.entity.AddressGridDO&gt;&gt;</span></span><br><span class="line"><span class="comment">		 **/</span></span><br><span class="line">		<span class="meta">@Deprecated</span></span><br><span class="line">		<span class="keyword">private</span> List&lt;List&lt;AddressGridDO&gt;&gt; groupNotEmptyMultithreading(List&lt;List&lt;AddressUserDTO&gt;&gt; modelGroup, <span class="keyword">int</span> groupSize,</span><br><span class="line">				Long timestamp) &#123;</span><br><span class="line">			List&lt;AddressGridDO&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">			List&lt;List&lt;AddressGridDO&gt;&gt; listGroup = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			ExecutorService executor = <span class="keyword">null</span>;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="comment">// List 长度</span></span><br><span class="line">				<span class="keyword">int</span> listSize = modelGroup.size();</span><br><span class="line">				<span class="keyword">int</span> runSize = (listSize / groupSize) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">				List&lt;List&lt;AddressUserDTO&gt;&gt; value = <span class="keyword">null</span>;</span><br><span class="line">				List&lt;List&lt;List&lt;AddressUserDTO&gt;&gt;&gt; models = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; runSize; i++) &#123;</span><br><span class="line">					<span class="keyword">int</span> start = i * groupSize;</span><br><span class="line">					<span class="keyword">if</span> (i + <span class="number">1</span> == runSize) &#123;</span><br><span class="line">						<span class="keyword">int</span> end = listSize;</span><br><span class="line">						value = modelGroup.subList(start, end);</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">int</span> end = (i + <span class="number">1</span>) * groupSize;</span><br><span class="line">						value = modelGroup.subList(start, end);</span><br><span class="line">					&#125;</span><br><span class="line">					models.add(value);</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 创建多线程查询API</span></span><br><span class="line">				<span class="keyword">int</span> threadPoolSize = models.size();</span><br><span class="line">				executor = Executors.newFixedThreadPool(threadPoolSize);</span><br><span class="line">				threadPoolSize = threadPoolSize &gt;= <span class="number">4</span> ? <span class="number">4</span> : threadPoolSize;</span><br><span class="line"></span><br><span class="line">				log.info(<span class="string">"查询API线程数:\t"</span> + threadPoolSize);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = models.size(); i &lt; length; i++) &#123;</span><br><span class="line">					BatchRestAPIThread apiThread = <span class="keyword">new</span> BatchRestAPIThread(timestamp, models.get(i));</span><br><span class="line">					Future&lt;List&lt;AddressGridDO&gt;&gt; values = executor.submit(apiThread);</span><br><span class="line">					list.addAll(values.get());</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 10w 数组查询 API后返回的是100w 数据,数据按1000一组拆分</span></span><br><span class="line">				listGroup = <span class="keyword">this</span>.spilitGroup(list, groupSize * <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> listGroup;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">				<span class="keyword">return</span> listGroup;</span><br><span class="line">			&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> (executor != <span class="keyword">null</span>) &#123;</span><br><span class="line">					executor.shutdown();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Title</span>: groupEmpty</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Description</span>: 地址为空的数据拆分</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> List&lt;List&lt;AddressGridDO&gt;&gt; groupEmpty(List&lt;List&lt;AddressUserDTO&gt;&gt; modelList, <span class="keyword">int</span> groupSize) &#123;</span><br><span class="line">			List&lt;AddressGridDO&gt; adList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="comment">// 数组下标为0</span></span><br><span class="line">			List&lt;AddressUserDTO&gt; models = modelList.get(<span class="number">0</span>);</span><br><span class="line">			AddressGridDO adUserGridDO = <span class="keyword">null</span>;</span><br><span class="line">			String name;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; models.size(); i++) &#123;</span><br><span class="line">				AddressUserDTO model = models.get(i);</span><br><span class="line">				name = model.getName();</span><br><span class="line">				adUserGridDO = <span class="keyword">new</span> AddressGridDO(name, <span class="string">""</span>, <span class="string">""</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">				adList.add(adUserGridDO);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>.spilitGroup(adList, groupSize * <span class="number">10</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> values List 数组</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> groupSize 数组分组大小</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Title</span>: spilitGroup</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Description</span>: 数据分成 groupSize 大的数组,多线程执行入库</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> List&lt;List&lt;AddressGridDO&gt;&gt; spilitGroup(List&lt;AddressGridDO&gt; values, <span class="keyword">int</span> groupSize) &#123;</span><br><span class="line">			List&lt;List&lt;AddressGridDO&gt;&gt; listGroup = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="comment">// List 长度</span></span><br><span class="line">			<span class="keyword">int</span> listSize = values.size();</span><br><span class="line">			<span class="keyword">int</span> runSize = (listSize / groupSize) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">			List&lt;AddressGridDO&gt; value = <span class="keyword">null</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; runSize; i++) &#123;</span><br><span class="line">				<span class="keyword">int</span> start = i * groupSize;</span><br><span class="line">				<span class="keyword">if</span> (i + <span class="number">1</span> == runSize) &#123;</span><br><span class="line">					<span class="keyword">int</span> end = listSize;</span><br><span class="line">					value = values.subList(start, end);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> end = (i + <span class="number">1</span>) * groupSize;</span><br><span class="line">					value = values.subList(start, end);</span><br><span class="line">				&#125;</span><br><span class="line">				listGroup.add(value);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> listGroup;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@return</span> List&lt;AddressGridDO&gt;</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Title</span>: geocodes</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Description</span>: 将地址转为 网格,只取address不为空的数据</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> List&lt;AddressGridDO&gt; <span class="title">geocodes</span><span class="params">(List&lt;AddressUserDTO&gt; adUserDto, Long timestamp)</span> </span>&#123;</span><br><span class="line">			List&lt;AddressGridDO&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="comment">// 高德地理编码,批量请求地址参数</span></span><br><span class="line">				List&lt;String&gt; address = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; adUserDto.size(); i++) &#123;</span><br><span class="line">					address.add(adUserDto.get(i).getAddress());</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 查询地理编码 —— 上海</span></span><br><span class="line">				List&lt;String&gt; points = <span class="keyword">new</span> GeoCodingUtil().getShanghaiGeocoding(address);</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 查询的地址个数返回结果不等于地址个数时,抛出异常</span></span><br><span class="line">				<span class="keyword">if</span> (points.size() != adUserDto.size()) &#123;</span><br><span class="line">					<span class="comment">/// log.error("查询地址个数不等于返回个数:\t" + JSON.toJSONString(adUserDto) + "\t返回结果:\t" + points);</span></span><br><span class="line">					<span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				AddressGridDO value = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 地理编码——经纬度</span></span><br><span class="line">				String[] array;</span><br><span class="line">				<span class="comment">// 经度,纬度</span></span><br><span class="line">				String longitude, latitude;</span><br><span class="line">				<span class="comment">// 用户编号</span></span><br><span class="line">				String name;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; points.size(); i++) &#123;</span><br><span class="line">					name = adUserDto.get(i).getName();</span><br><span class="line"></span><br><span class="line">					<span class="comment">/** 将地理编码转换为50m栅格编码*/</span></span><br><span class="line">					String point = points.get(i);</span><br><span class="line"></span><br><span class="line">					<span class="comment">// point:[[],[121.389822,31.258292]]</span></span><br><span class="line">					<span class="keyword">if</span> (<span class="string">"[]"</span>.equals(point)) &#123;</span><br><span class="line">						value = <span class="keyword">new</span> AddressGridDO(name, <span class="string">""</span>, <span class="string">""</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">						result.add(value);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line"></span><br><span class="line">					<span class="comment">// 获取经纬度</span></span><br><span class="line">					array = point.split(<span class="string">","</span>);</span><br><span class="line">					longitude = array[<span class="number">0</span>];</span><br><span class="line">					latitude = array[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">					GDPoint gdPoint = <span class="keyword">new</span> GDPoint(longitude, latitude);</span><br><span class="line"></span><br><span class="line">					value = <span class="keyword">new</span> AddressGridDO(name, longitude, latitude, gdPoint.getLongitude(), gdPoint.getLatitude());</span><br><span class="line">					result.add(value);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">return</span> result;</span><br><span class="line">			&#125; <span class="comment">/*</span></span><br><span class="line"><span class="comment">				catch (SocketTimeoutException e) &#123;</span></span><br><span class="line"><span class="comment">				this.appendDataFile(adUserDto, timestamp);</span></span><br><span class="line"><span class="comment">				&#125; catch (NullPointerException e) &#123;</span></span><br><span class="line"><span class="comment">				this.appendDataFile(adUserDto, timestamp);</span></span><br><span class="line"><span class="comment">				&#125; </span></span><br><span class="line"><span class="comment">				*/</span> <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				<span class="keyword">this</span>.appendDataFile(adUserDto, timestamp);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> result;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@param</span> models void</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Title</span>: createDataFile</span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@Description</span>: 查询异常的用户地址保存为文件</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">appendDataFile</span><span class="params">(List&lt;AddressUserDTO&gt; models, Long timestamp)</span> </span>&#123;</span><br><span class="line">			StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">			<span class="comment">// models.toString() 方法是返回JSON字符串,并不是普通的toString()方法</span></span><br><span class="line"></span><br><span class="line">			sb.append(JSON.toJSONString(models) + System.getProperty(<span class="string">"line.separator"</span>));</span><br><span class="line">			FileWriter fw = <span class="keyword">null</span>;</span><br><span class="line">			PrintWriter pw = <span class="keyword">null</span>;</span><br><span class="line">			String txtName = timestamp + <span class="string">"_"</span> + geocodeFileProperties.getName();</span><br><span class="line">			String txtPath = geocodeFileProperties.getPath();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				File file = <span class="keyword">new</span> File(txtPath);</span><br><span class="line">				<span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">					file.mkdirs();</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				fw = <span class="keyword">new</span> FileWriter(file + <span class="string">"/"</span> + txtName, <span class="keyword">true</span>);</span><br><span class="line">				pw = <span class="keyword">new</span> PrintWriter(fw);</span><br><span class="line"></span><br><span class="line">				pw.print(sb.toString());</span><br><span class="line">				pw.flush();</span><br><span class="line">				fw.flush();</span><br><span class="line"></span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					pw.close();</span><br><span class="line">					fw.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="高德地理编码API工具类"><a href="#高德地理编码API工具类" class="headerlink" title="高德地理编码API工具类"></a>高德地理编码API工具类</h2><blockquote>
<p>二维数组拆分为指定大小</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ArrayUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> &lt;br/&gt; 数组操作工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/4/1 13:53</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayUtil</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Author</span> Dew</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> 拆分二维数组为指定大小</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Param</span> [values 待分组Array 分组, groupSize 分组大小]</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Date</span> 13:54 2019/4/1</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Return</span> java.util.List&lt;T&gt;</span></span><br><span class="line"><span class="comment">	 **/</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;List&lt;T&gt;&gt; spilitGroup(List&lt;T&gt; values, <span class="keyword">int</span> groupSize) &#123;</span><br><span class="line">		List&lt;List&lt;T&gt;&gt; listGroup = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		<span class="comment">// List 长度</span></span><br><span class="line">		<span class="keyword">int</span> listSize = values.size();</span><br><span class="line">		<span class="keyword">int</span> runSize = (listSize / groupSize) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;T&gt; value = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; runSize; i++) &#123;</span><br><span class="line">			<span class="keyword">int</span> start = i * groupSize;</span><br><span class="line">			<span class="keyword">if</span> (i + <span class="number">1</span> == runSize) &#123;</span><br><span class="line">				<span class="keyword">int</span> end = listSize;</span><br><span class="line">				value = values.subList(start, end);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">int</span> end = (i + <span class="number">1</span>) * groupSize;</span><br><span class="line">				value = values.subList(start, end);</span><br><span class="line">			&#125;</span><br><span class="line">			listGroup.add(value);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> listGroup;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>高德地理编码<code>API</code>调用实例</p>
</blockquote>
<ul>
<li>注: 在<code>非 controller</code> 中读取配置文件时获取不到配置类的属性值,欲了解详情可以看下我的另一篇博客<a href="/springboot/SpringBoot配置文件详解/#常见问题" target="_blank">SpringBoot配置文件详解</a></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: GeoDto</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 调用高德地理编码API传递的参数实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/03/27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GeoDto</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Boolean batch;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String city;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String key;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GeoDto</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GeoDto</span><span class="params">(List&lt;String&gt; address, String city, Boolean batch, String url, String key)</span> </span>&#123;</span><br><span class="line">		StringBuilder addressSb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = address.size(); i &lt; length; i++) &#123;</span><br><span class="line">			addressSb.append(address.get(i));</span><br><span class="line">			addressSb.append(<span class="string">"|"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">this</span>.address = addressSb.substring(<span class="number">0</span>, addressSb.lastIndexOf(<span class="string">"|"</span>)).toString();</span><br><span class="line">		<span class="keyword">this</span>.city = city;</span><br><span class="line">		<span class="keyword">this</span>.batch = batch;</span><br><span class="line">		<span class="keyword">this</span>.url = url;</span><br><span class="line">		<span class="keyword">this</span>.key = key;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> url + <span class="string">"?batch="</span> + batch + <span class="string">"&amp;key="</span> + key + <span class="string">"&amp;city="</span> + city + <span class="string">"&amp;address="</span> + address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: Geocodes</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 返回结果实体类, 只获取了location:经纬度 API 地址：https://lbs.amap.com/api/webservice/guide/api/georegeo 返回结果示例:</span></span><br><span class="line"><span class="comment"> * &#123;"status":"1","info":"OK","infocode":"10000","count":"1","geocodes":[&#123;"formatted_address":"上海市浦东新区东方明珠","country":"中国","province":"上海市","citycode":"021","city":"上海市","district":"浦东新区","township":[],"neighborhood":&#123;"name":[],"type":[]&#125;,"building":&#123;"name":[],"type":[]&#125;,"adcode":"310115","street":[],"number":[],"location":"121.499740,31.239853","level":"兴趣点"&#125;]&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/03/27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Geocodes</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String location;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 高德地理编码API返回JSON实体类, 部分需要的属性, 完整的返回值在上方</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Geocode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> status;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> List&lt;Geocodes&gt; geocodes;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: GeoCodingUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 高德地理编码/逆编码(将地址转换为经度,纬度) API: https://lbs.amap.com/api/webservice/guide/api/georegeo/#scene</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/03/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeoCodingUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> GeocodingProperties properties;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> GeoCodingUtil geoCodingUtil;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Long index = <span class="number">0L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@PostConstruct</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		geoCodingUtil = <span class="keyword">this</span>;</span><br><span class="line">		geoCodingUtil.properties = <span class="keyword">this</span>.properties;</span><br><span class="line">		geoCodingUtil.restTemplate = <span class="keyword">this</span>.restTemplate;</span><br><span class="line"></span><br><span class="line">		log.info(<span class="string">"请求API地址:\t&#123;&#125;"</span>, properties.getUrl());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> address 地址List</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> city 城市名称,例如:上海,北京</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: getGeocoding</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 获取批量地址地理编码</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Return</span> List&lt;String&gt;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getGeocoding</span><span class="params">(List&lt;String&gt; address, String city)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> getGeocoding(address, city, <span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> address 地址List</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: getShanghaiGeocoding</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 获取上海地区批量地址的地理编码</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ReturnType</span>: List&lt;String&gt;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getShanghaiGeocoding</span><span class="params">(List&lt;String&gt; address)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> getGeocoding(address, <span class="string">"上海"</span>, <span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> address 地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: getShanghaiGeocoding</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 获取上海地区单个地址的地理编码</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ReturnType</span>: String</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getShanghaiGeocoding</span><span class="params">(String address)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">		list.add(address);</span><br><span class="line">		list = getGeocoding(list, <span class="string">"上海"</span>, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">		String empty = <span class="keyword">new</span> ArrayList&lt;&gt;().toString();</span><br><span class="line">		<span class="keyword">if</span> (empty.equals(list.toString())) &#123;</span><br><span class="line">			<span class="keyword">return</span> list.toString();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> list.get(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> address 最多支持十个地址拼接</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> city 城市</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> batch 是否批量</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Title</span>: getGeocoding</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 上海地区的高德地理编码获取</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Return</span> List&lt;String&gt;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> List&lt;String&gt; <span class="title">getGeocoding</span><span class="params">(List&lt;String&gt; address, String city, <span class="keyword">boolean</span> batch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		List&lt;String&gt; point = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">		GeoDto geoDto = <span class="keyword">new</span> GeoDto(address, city, batch, geoCodingUtil.properties.getUrl(),</span><br><span class="line">				geoCodingUtil.properties.getKey());</span><br><span class="line">		String realUrl = geoDto.toString();</span><br><span class="line"></span><br><span class="line">		Geocode geocode = geoCodingUtil.restTemplate.getForObject(realUrl, Geocode.class);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> count = geocode.getCount();</span><br><span class="line">		<span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			List&lt;Geocodes&gt; geocodes = geocode.getGeocodes();</span><br><span class="line">			Iterator&lt;Geocodes&gt; iterator = geocodes.iterator();</span><br><span class="line">			String location;</span><br><span class="line">			<span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">				location = iterator.next().getLocation();</span><br><span class="line">				<span class="keyword">if</span> (location == <span class="keyword">null</span>) &#123;</span><br><span class="line">					point.add(<span class="string">""</span>);</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				point.add(location);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> point;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="RestTemplate-调用API超时"><a href="#RestTemplate-调用API超时" class="headerlink" title="RestTemplate 调用API超时"></a>RestTemplate 调用API超时</h3><blockquote>
<p>解决方案</p>
</blockquote>
<ol>
<li>配置类<code>RestTemplateConfig</code>中不设置<code>connectTimeout、readTimeout</code></li>
<li>将超时时间变长,<code>timeout</code>时间单位为 毫秒</li>
</ol>
<h3 id="实现多线程有返回值的执行"><a href="#实现多线程有返回值的执行" class="headerlink" title="实现多线程有返回值的执行"></a>实现多线程有返回值的执行</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ClassName</span>: BatchRestAPIThread</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 多线程查询API,地理编码操作</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@date</span> 2019/03/18</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">BatchRestAPIThread</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">List</span>&lt;<span class="title">InfoDo</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> List&lt;List&lt;InfoDto&gt;&gt; list;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">BatchRestAPIThread</span><span class="params">(List&lt;List&lt;InfoDto&gt;&gt; list)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.list = list;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> List&lt;InfoDo&gt; <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">			List&lt;InfoDo&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			<span class="comment">// 执行代码块</span></span><br><span class="line">			<span class="keyword">return</span> result;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
